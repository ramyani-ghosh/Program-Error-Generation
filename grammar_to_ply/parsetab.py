
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AMPER AND AS ASSERT AT BACKQUOTE BINARYNUMBER BREAK CIRCUMFLEX CLASS COLON COMMA CONTINUE DEF DEL DOT ELIF ELSE EQEQUAL EQUAL EXCEPT EXEC FINALLY FOR FROM GLOBAL GREATER GREATEREQUAL HEXADECIMALNUMBER IF IMPORT IN IS LAMBDA LBRACE LEFTSHIFT LESS LESSEQUAL LPAREN LSQB MINEQUAL MINUS NAME NEWLINE NOT NOTEQUAL NUMBER OCTALNUMBER OR PASS PERCENT PERCENTEQUAL PLUS PLUSEQUAL PRINT RAISE RAWSTRING RBRACE RETURN RIGHTSHIFT RPAREN RSQB SEMI SLASH SLASHEQUAL SLASHSLASH SLASHSLASHEQUAL STAR STAREQUAL STARSTAR STARSTAREQUAL STRING TAB TILDE TRIPLESTRING TRY UNICODESTRING VBAR WHILE WITH YIELDstart : file_inputfile_input : single_stmtsingle_stmt : single_stmt NEWLINE \n\t| single_stmt stmt \n\t|funcdef : DEF NAME parameters COLON suiteparameters : LPAREN varargslist RPARENvarargslist : \n\t| fpdef EQUAL test fpdeflist COMMA \n\t| fpdef EQUAL test fpdeflist \n\t| fpdef fpdeflist COMMA \n\t| fpdef fpdeflistfpdeflist : \n\t| fpdeflist COMMA fpdef \n\t| fpdeflist COMMA fpdef EQUAL testfpdef : NAME  \n\t| LPAREN fplist RPARENfplist : fpdef fplist1 COMMA \n\t| fpdef fplist1fplist1 : \n\t| fplist1 COMMA fpdefstmt : simple_stmt \n\t| compound_stmtsimple_stmt : small_stmts NEWLINE \n\t| small_stmts SEMI NEWLINEsmall_stmts : small_stmts SEMI small_stmt \n\t| small_stmtsmall_stmt : flow_stmt \n\t| expr_stmt \n\t| print_stmt \n\t| pass_stmt \n\t| import_stmt \n\t| global_stmt \n\t| assert_stmtexpr_stmt : testlist augassign testlist \n\t| testlist eqtestlisteqtestlist : \n\t| eqtestlist EQUAL testlistaugassign : PLUSEQUAL  \n\t| MINEQUAL  \n\t| STAREQUAL  \n\t| SLASHEQUAL  \n\t| PERCENTEQUAL  \n\t| STARSTAREQUAL  \n\t| SLASHSLASHEQUALprint_stmt : PRINT \n\t| PRINT testlistpass_stmt : PASSflow_stmt : break_stmt \n\t| continue_stmt \n\t| return_stmtbreak_stmt : BREAKcontinue_stmt : CONTINUEreturn_stmt : RETURN  \n\t| RETURN testlistimport_stmt : IMPORT NAME \n\t| IMPORT NAME AS NAMEglobal_stmt : GLOBAL NAME namelistnamelist : \n\t| COMMA NAME namelistassert_stmt : ASSERT testlistcompound_stmt : if_stmt \n\t| for_stmt \n\t| while_stmt \n\t| funcdef \n\t| classdefif_stmt : IF test COLON suite elif_list \n\t| IF test COLON suite elif_list ELSE COLON suiteelif_list : \n\t| ELIF test COLON suite elif_listwhile_stmt : WHILE test COLON suite  \n\t| WHILE test COLON suite ELSE COLON suitefor_stmt : FOR exprlist IN testlist COLON suite \n\t| FOR exprlist IN testlist COLON suite ELSE COLON suitesuite : simple_stmt \n\t| NEWLINE stmtstest : or_test \n\t| or_test IF or_test ELSE testor_test : and_test ortestlistortestlist : \n\t| OR and_test ortestlistand_test : not_test andtestlistandtestlist : \n\t| AND not_test andtestlistnot_test : NOT not_test \n\t| comparisoncomparison : expr compexprlistcompexprlist : \n\t| comp_op expr compexprlistcomp_op : LESS \n\t| GREATER \n\t| EQEQUAL \n\t| GREATEREQUAL \n\t| LESSEQUAL \n\t| NOTEQUAL \n\t| IN \n\t| NOT IN \n\t| IS \n\t| IS NOTexpr : xor_expr xorexprlistxorexprlist : \n\t| VBAR xor_expr xorexprlistxor_expr : and_expr andexprlistandexprlist : \n\t| CIRCUMFLEX and_expr andexprlistand_expr : shift_expr shiftexprlistshiftexprlist : \n\t| AMPER shift_expr shiftexprlistshift_expr : arith_expr arithexprlistarithexprlist : \n\t| LEFTSHIFT arith_expr arithexprlist \n\t| RIGHTSHIFT arith_expr arithexprlistarith_expr : term termlisttermlist : \n\t| PLUS term termlist \n\t| MINUS term termlistterm : factor factorlistfactorlist : \n\t| STAR factor factorlist \n\t| SLASH factor factorlist \n\t| PERCENT factor factorlist \n\t| SLASHSLASH factor factorlistfactor : power \n\t| PLUS factor \n\t| MINUS factor \n\t| TILDE factorpower : atom trailerlist \n\t| atom trailerlist STARSTAR factortrailerlist : \n\t| trailer trailerlistatom : LPAREN RPAREN \n\t| LPAREN testlist_comp RPAREN \n\t| LSQB RSQB \n\t| LSQB listmaker RSQB \n\t| LBRACE RBRACE \n\t| LBRACE dictorsetmaker RBRACE \n\t| BACKQUOTE testlist1 BACKQUOTE \n\t| NAME \n\t| NUMBER \n\t| stringliststringlist : STRING  \n\t| STRING stringlist \n\t| TRIPLESTRING \n\t| TRIPLESTRING stringlistlistmaker : testlisttestlist_comp : testlisttrailer : LPAREN RPAREN \n\t| LPAREN arglist RPAREN \n\t| LSQB subscriptlist RSQB \n\t| DOT NAMEsubscriptlist : subscript \n\t| subscript COMMA \n\t| subscript COMMA subscriptlistsubscript : DOT DOT DOT \n\t| test \n\t| test COLON test sliceop \n\t| COLON test sliceop \n\t| test COLON sliceop \n\t| test COLON test \n\t| test COLON \n\t| COLON test \n\t| COLON sliceop \n\t| COLONsliceop : COLON \n\t| COLON testexprlist : expr \n\t| expr COMMA \n\t| expr COMMA exprlisttestlist : test \n\t| test COMMA \n\t| test COMMA testlistdictorsetmaker : testcolonlist \n\t| testlisttestcolonlist : test COLON test \n\t| test COLON test COMMA \n\t| test COLON test COMMA testcolonlistclassdef : CLASS NAME COLON suite \n\t| CLASS NAME LPAREN RPAREN COLON suite \n\t| CLASS NAME LPAREN testlist RPAREN COLON suitearglist : argument \n\t| argument COMMA \n\t| argument COMMA arglistargument : test \n\t| test EQUAL testtestlist1 : test \n\t| test COMMA testlist1stmts : stmts stmt \n\t| stmtempty :'
    
_lr_action_items = {'NEWLINE':([0,3,4,5,6,7,8,9,10,11,12,13,14,16,18,21,24,25,26,27,28,29,30,31,32,33,34,35,39,40,41,42,43,44,46,47,48,49,50,51,52,53,54,58,62,63,64,65,66,67,69,73,84,87,88,89,90,91,93,95,97,98,109,111,113,115,118,121,126,127,128,129,130,134,137,144,145,146,147,148,149,152,154,157,159,161,164,165,166,169,170,171,172,173,174,175,176,177,178,179,181,182,191,192,193,195,197,198,202,203,204,209,212,213,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,233,242,244,245,246,248,254,256,257,269,270,271,276,277,281,282,284,288,289,290,291,295,296,],[-5,4,-3,-4,-22,-23,66,-62,-63,-64,-65,-66,-27,-169,-37,-138,-28,-29,-30,-31,-32,-33,-34,-49,-50,-51,-46,-48,-52,-53,-54,-77,-80,-83,-86,-88,-101,-104,-107,-110,-114,-118,-123,-129,-139,-140,-141,-143,-24,146,-170,-36,-131,-47,-56,-59,-61,-55,-79,-82,-85,-87,-100,-103,-106,-109,-113,-117,-124,-125,-126,-127,-129,-133,-135,-142,-144,-25,-26,199,-171,-35,199,199,-132,-58,-80,-83,-88,-101,-104,-107,-110,-110,-114,-114,-118,-118,-118,-118,-130,-147,-150,-134,-136,-137,-69,-75,-38,-71,199,-177,-57,-59,-81,-84,-89,-102,-105,-108,-111,-112,-115,-116,-119,-120,-121,-122,-128,-148,-149,-67,-76,-188,199,-6,199,-60,-78,-187,-73,199,-178,199,199,199,-72,-179,-68,-69,199,-70,-74,]),'IF':([0,3,4,5,6,7,9,10,11,12,13,21,42,43,44,46,47,48,49,50,51,52,53,54,58,62,63,64,65,66,84,93,95,97,98,109,111,113,115,118,121,126,127,128,129,130,134,137,144,145,146,159,164,165,166,169,170,171,172,173,174,175,176,177,178,179,181,182,191,192,193,195,197,198,199,203,209,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,233,242,244,245,248,269,270,276,284,288,289,290,295,296,],[-5,15,-3,-4,-22,-23,-62,-63,-64,-65,-66,-138,92,-80,-83,-86,-88,-101,-104,-107,-110,-114,-118,-123,-129,-139,-140,-141,-143,-24,-131,-79,-82,-85,-87,-100,-103,-106,-109,-113,-117,-124,-125,-126,-127,-129,-133,-135,-142,-144,-25,-132,-80,-83,-88,-101,-104,-107,-110,-110,-114,-114,-118,-118,-118,-118,-130,-147,-150,-134,-136,-137,-69,-75,15,-71,-177,-81,-84,-89,-102,-105,-108,-111,-112,-115,-116,-119,-120,-121,-122,-128,-148,-149,-67,15,-188,-6,-187,-73,-178,-72,-179,-68,-69,-70,-74,]),'FOR':([0,3,4,5,6,7,9,10,11,12,13,66,146,197,198,199,203,209,242,244,245,248,269,270,276,284,288,289,290,295,296,],[-5,17,-3,-4,-22,-23,-62,-63,-64,-65,-66,-24,-25,-69,-75,17,-71,-177,-67,17,-188,-6,-187,-73,-178,-72,-179,-68,-69,-70,-74,]),'WHILE':([0,3,4,5,6,7,9,10,11,12,13,66,146,197,198,199,203,209,242,244,245,248,269,270,276,284,288,289,290,295,296,],[-5,19,-3,-4,-22,-23,-62,-63,-64,-65,-66,-24,-25,-69,-75,19,-71,-177,-67,19,-188,-6,-187,-73,-178,-72,-179,-68,-69,-70,-74,]),'DEF':([0,3,4,5,6,7,9,10,11,12,13,66,146,197,198,199,203,209,242,244,245,248,269,270,276,284,288,289,290,295,296,],[-5,20,-3,-4,-22,-23,-62,-63,-64,-65,-66,-24,-25,-69,-75,20,-71,-177,-67,20,-188,-6,-187,-73,-178,-72,-179,-68,-69,-70,-74,]),'CLASS':([0,3,4,5,6,7,9,10,11,12,13,66,146,197,198,199,203,209,242,244,245,248,269,270,276,284,288,289,290,295,296,],[-5,22,-3,-4,-22,-23,-62,-63,-64,-65,-66,-24,-25,-69,-75,22,-71,-177,-67,22,-188,-6,-187,-73,-178,-72,-179,-68,-69,-70,-74,]),'PRINT':([0,3,4,5,6,7,9,10,11,12,13,66,67,146,148,154,157,197,198,199,203,204,209,242,244,245,246,248,254,269,270,271,276,277,281,282,284,288,289,290,291,295,296,],[-5,34,-3,-4,-22,-23,-62,-63,-64,-65,-66,-24,34,-25,34,34,34,-69,-75,34,-71,34,-177,-67,34,-188,34,-6,34,-187,-73,34,-178,34,34,34,-72,-179,-68,-69,34,-70,-74,]),'PASS':([0,3,4,5,6,7,9,10,11,12,13,66,67,146,148,154,157,197,198,199,203,204,209,242,244,245,246,248,254,269,270,271,276,277,281,282,284,288,289,290,291,295,296,],[-5,35,-3,-4,-22,-23,-62,-63,-64,-65,-66,-24,35,-25,35,35,35,-69,-75,35,-71,35,-177,-67,35,-188,35,-6,35,-187,-73,35,-178,35,35,35,-72,-179,-68,-69,35,-70,-74,]),'IMPORT':([0,3,4,5,6,7,9,10,11,12,13,66,67,146,148,154,157,197,198,199,203,204,209,242,244,245,246,248,254,269,270,271,276,277,281,282,284,288,289,290,291,295,296,],[-5,36,-3,-4,-22,-23,-62,-63,-64,-65,-66,-24,36,-25,36,36,36,-69,-75,36,-71,36,-177,-67,36,-188,36,-6,36,-187,-73,36,-178,36,36,36,-72,-179,-68,-69,36,-70,-74,]),'GLOBAL':([0,3,4,5,6,7,9,10,11,12,13,66,67,146,148,154,157,197,198,199,203,204,209,242,244,245,246,248,254,269,270,271,276,277,281,282,284,288,289,290,291,295,296,],[-5,37,-3,-4,-22,-23,-62,-63,-64,-65,-66,-24,37,-25,37,37,37,-69,-75,37,-71,37,-177,-67,37,-188,37,-6,37,-187,-73,37,-178,37,37,37,-72,-179,-68,-69,37,-70,-74,]),'ASSERT':([0,3,4,5,6,7,9,10,11,12,13,66,67,146,148,154,157,197,198,199,203,204,209,242,244,245,246,248,254,269,270,271,276,277,281,282,284,288,289,290,291,295,296,],[-5,38,-3,-4,-22,-23,-62,-63,-64,-65,-66,-24,38,-25,38,38,38,-69,-75,38,-71,38,-177,-67,38,-188,38,-6,38,-187,-73,38,-178,38,38,38,-72,-179,-68,-69,38,-70,-74,]),'BREAK':([0,3,4,5,6,7,9,10,11,12,13,66,67,146,148,154,157,197,198,199,203,204,209,242,244,245,246,248,254,269,270,271,276,277,281,282,284,288,289,290,291,295,296,],[-5,39,-3,-4,-22,-23,-62,-63,-64,-65,-66,-24,39,-25,39,39,39,-69,-75,39,-71,39,-177,-67,39,-188,39,-6,39,-187,-73,39,-178,39,39,39,-72,-179,-68,-69,39,-70,-74,]),'CONTINUE':([0,3,4,5,6,7,9,10,11,12,13,66,67,146,148,154,157,197,198,199,203,204,209,242,244,245,246,248,254,269,270,271,276,277,281,282,284,288,289,290,291,295,296,],[-5,40,-3,-4,-22,-23,-62,-63,-64,-65,-66,-24,40,-25,40,40,40,-69,-75,40,-71,40,-177,-67,40,-188,40,-6,40,-187,-73,40,-178,40,40,40,-72,-179,-68,-69,40,-70,-74,]),'RETURN':([0,3,4,5,6,7,9,10,11,12,13,66,67,146,148,154,157,197,198,199,203,204,209,242,244,245,246,248,254,269,270,271,276,277,281,282,284,288,289,290,291,295,296,],[-5,41,-3,-4,-22,-23,-62,-63,-64,-65,-66,-24,41,-25,41,41,41,-69,-75,41,-71,41,-177,-67,41,-188,41,-6,41,-187,-73,41,-178,41,41,41,-72,-179,-68,-69,41,-70,-74,]),'NOT':([0,3,4,5,6,7,9,10,11,12,13,15,19,21,23,34,38,41,45,47,48,49,50,51,52,53,54,58,59,60,61,62,63,64,65,66,67,69,72,74,75,76,77,78,79,80,84,92,94,96,108,109,111,113,115,118,121,126,127,128,129,130,131,132,134,137,144,145,146,148,150,153,154,157,158,159,166,169,170,171,172,173,174,175,176,177,178,179,181,182,190,191,192,193,194,195,196,197,198,199,203,204,209,214,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,236,237,242,243,244,245,246,248,252,254,266,269,270,271,276,277,281,282,284,288,289,290,291,294,295,296,],[-5,45,-3,-4,-22,-23,-62,-63,-64,-65,-66,45,45,-138,45,45,45,45,45,107,-101,-104,-107,-110,-114,-118,-123,-129,45,45,45,-139,-140,-141,-143,-24,45,45,45,-39,-40,-41,-42,-43,-44,-45,-131,45,45,45,168,-100,-103,-106,-109,-113,-117,-124,-125,-126,-127,-129,45,45,-133,-135,-142,-144,-25,45,45,45,45,45,45,-132,107,-101,-104,-107,-110,-110,-114,-114,-118,-118,-118,-118,-130,-147,45,-150,-134,-136,45,-137,45,-69,-75,45,-71,45,-177,45,-102,-105,-108,-111,-112,-115,-116,-119,-120,-121,-122,-128,-148,45,45,-149,45,45,45,-67,45,45,-188,45,-6,45,45,45,-187,-73,45,-178,45,45,45,-72,-179,-68,-69,45,45,-70,-74,]),'PLUS':([0,3,4,5,6,7,9,10,11,12,13,15,17,19,21,23,34,38,41,45,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,72,74,75,76,77,78,79,80,84,92,94,96,99,100,101,102,103,104,105,106,108,110,112,114,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,132,134,137,144,145,146,148,150,151,153,154,157,158,159,167,168,174,175,176,177,178,179,180,181,182,190,191,192,193,194,195,196,197,198,199,203,204,209,214,225,226,227,228,229,230,231,232,233,234,236,237,242,243,244,245,246,248,252,254,266,269,270,271,276,277,281,282,284,288,289,290,291,294,295,296,],[-5,55,-3,-4,-22,-23,-62,-63,-64,-65,-66,55,55,55,-138,55,55,55,55,55,119,-118,-123,55,55,55,-129,55,55,55,-139,-140,-141,-143,-24,55,55,55,-39,-40,-41,-42,-43,-44,-45,-131,55,55,55,55,-90,-91,-92,-93,-94,-95,-96,-98,55,55,55,55,55,55,55,-117,55,55,55,55,-124,-125,-126,-127,-129,55,55,-133,-135,-142,-144,-25,55,55,55,55,55,55,55,-132,-97,-99,119,119,-118,-118,-118,-118,55,-130,-147,55,-150,-134,-136,55,-137,55,-69,-75,55,-71,55,-177,55,-119,-120,-121,-122,-128,-148,55,55,-149,55,55,55,-67,55,55,-188,55,-6,55,55,55,-187,-73,55,-178,55,55,55,-72,-179,-68,-69,55,55,-70,-74,]),'MINUS':([0,3,4,5,6,7,9,10,11,12,13,15,17,19,21,23,34,38,41,45,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,72,74,75,76,77,78,79,80,84,92,94,96,99,100,101,102,103,104,105,106,108,110,112,114,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,132,134,137,144,145,146,148,150,151,153,154,157,158,159,167,168,174,175,176,177,178,179,180,181,182,190,191,192,193,194,195,196,197,198,199,203,204,209,214,225,226,227,228,229,230,231,232,233,234,236,237,242,243,244,245,246,248,252,254,266,269,270,271,276,277,281,282,284,288,289,290,291,294,295,296,],[-5,56,-3,-4,-22,-23,-62,-63,-64,-65,-66,56,56,56,-138,56,56,56,56,56,120,-118,-123,56,56,56,-129,56,56,56,-139,-140,-141,-143,-24,56,56,56,-39,-40,-41,-42,-43,-44,-45,-131,56,56,56,56,-90,-91,-92,-93,-94,-95,-96,-98,56,56,56,56,56,56,56,-117,56,56,56,56,-124,-125,-126,-127,-129,56,56,-133,-135,-142,-144,-25,56,56,56,56,56,56,56,-132,-97,-99,120,120,-118,-118,-118,-118,56,-130,-147,56,-150,-134,-136,56,-137,56,-69,-75,56,-71,56,-177,56,-119,-120,-121,-122,-128,-148,56,56,-149,56,56,56,-67,56,56,-188,56,-6,56,56,56,-187,-73,56,-178,56,56,56,-72,-179,-68,-69,56,56,-70,-74,]),'TILDE':([0,3,4,5,6,7,9,10,11,12,13,15,17,19,23,34,38,41,45,55,56,57,59,60,61,66,67,69,72,74,75,76,77,78,79,80,92,94,96,99,100,101,102,103,104,105,106,108,110,112,114,116,117,119,120,122,123,124,125,131,132,146,148,150,151,153,154,157,158,167,168,180,190,194,196,197,198,199,203,204,209,214,231,232,234,236,237,242,243,244,245,246,248,252,254,266,269,270,271,276,277,281,282,284,288,289,290,291,294,295,296,],[-5,57,-3,-4,-22,-23,-62,-63,-64,-65,-66,57,57,57,57,57,57,57,57,57,57,57,57,57,57,-24,57,57,57,-39,-40,-41,-42,-43,-44,-45,57,57,57,57,-90,-91,-92,-93,-94,-95,-96,-98,57,57,57,57,57,57,57,57,57,57,57,57,57,-25,57,57,57,57,57,57,57,-97,-99,57,57,57,57,-69,-75,57,-71,57,-177,57,57,57,57,57,57,-67,57,57,-188,57,-6,57,57,57,-187,-73,57,-178,57,57,57,-72,-179,-68,-69,57,57,-70,-74,]),'LPAREN':([0,3,4,5,6,7,9,10,11,12,13,15,17,19,21,23,34,38,41,45,55,56,57,58,59,60,61,62,63,64,65,66,67,69,72,74,75,76,77,78,79,80,82,83,84,92,94,96,99,100,101,102,103,104,105,106,108,110,112,114,116,117,119,120,122,123,124,125,130,131,132,134,137,144,145,146,148,150,151,153,154,156,157,158,159,167,168,180,182,190,191,192,193,194,195,196,197,198,199,203,204,205,209,214,230,231,232,233,234,236,237,242,243,244,245,246,248,252,254,266,269,270,271,275,276,277,281,282,284,285,288,289,290,291,293,294,295,296,],[-5,23,-3,-4,-22,-23,-62,-63,-64,-65,-66,23,23,23,-138,23,23,23,23,23,23,23,23,131,23,23,23,-139,-140,-141,-143,-24,23,23,23,-39,-40,-41,-42,-43,-44,-45,156,158,-131,23,23,23,23,-90,-91,-92,-93,-94,-95,-96,-98,23,23,23,23,23,23,23,23,23,23,23,131,23,23,-133,-135,-142,-144,-25,23,23,23,23,23,205,23,23,-132,-97,-99,23,-147,23,-150,-134,-136,23,-137,23,-69,-75,23,-71,23,205,-177,23,-148,23,23,-149,23,23,23,-67,23,23,-188,23,-6,23,23,23,-187,-73,23,205,-178,23,23,23,-72,205,-179,-68,-69,23,205,23,-70,-74,]),'LSQB':([0,3,4,5,6,7,9,10,11,12,13,15,17,19,21,23,34,38,41,45,55,56,57,58,59,60,61,62,63,64,65,66,67,69,72,74,75,76,77,78,79,80,84,92,94,96,99,100,101,102,103,104,105,106,108,110,112,114,116,117,119,120,122,123,124,125,130,131,132,134,137,144,145,146,148,150,151,153,154,157,158,159,167,168,180,182,190,191,192,193,194,195,196,197,198,199,203,204,209,214,230,231,232,233,234,236,237,242,243,244,245,246,248,252,254,266,269,270,271,276,277,281,282,284,288,289,290,291,294,295,296,],[-5,59,-3,-4,-22,-23,-62,-63,-64,-65,-66,59,59,59,-138,59,59,59,59,59,59,59,59,132,59,59,59,-139,-140,-141,-143,-24,59,59,59,-39,-40,-41,-42,-43,-44,-45,-131,59,59,59,59,-90,-91,-92,-93,-94,-95,-96,-98,59,59,59,59,59,59,59,59,59,59,59,132,59,59,-133,-135,-142,-144,-25,59,59,59,59,59,59,59,-132,-97,-99,59,-147,59,-150,-134,-136,59,-137,59,-69,-75,59,-71,59,-177,59,-148,59,59,-149,59,59,59,-67,59,59,-188,59,-6,59,59,59,-187,-73,59,-178,59,59,59,-72,-179,-68,-69,59,59,-70,-74,]),'LBRACE':([0,3,4,5,6,7,9,10,11,12,13,15,17,19,23,34,38,41,45,55,56,57,59,60,61,66,67,69,72,74,75,76,77,78,79,80,92,94,96,99,100,101,102,103,104,105,106,108,110,112,114,116,117,119,120,122,123,124,125,131,132,146,148,150,151,153,154,157,158,167,168,180,190,194,196,197,198,199,203,204,209,214,231,232,234,236,237,242,243,244,245,246,248,252,254,266,269,270,271,276,277,281,282,284,288,289,290,291,294,295,296,],[-5,60,-3,-4,-22,-23,-62,-63,-64,-65,-66,60,60,60,60,60,60,60,60,60,60,60,60,60,60,-24,60,60,60,-39,-40,-41,-42,-43,-44,-45,60,60,60,60,-90,-91,-92,-93,-94,-95,-96,-98,60,60,60,60,60,60,60,60,60,60,60,60,60,-25,60,60,60,60,60,60,60,-97,-99,60,60,60,60,-69,-75,60,-71,60,-177,60,60,60,60,60,60,-67,60,60,-188,60,-6,60,60,60,-187,-73,60,-178,60,60,60,-72,-179,-68,-69,60,60,-70,-74,]),'BACKQUOTE':([0,3,4,5,6,7,9,10,11,12,13,15,17,19,21,23,34,38,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,72,74,75,76,77,78,79,80,84,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,134,137,142,143,144,145,146,148,150,151,153,154,157,158,159,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,190,191,192,193,194,195,196,197,198,199,203,204,209,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,236,237,241,242,243,244,245,246,248,252,254,257,266,269,270,271,276,277,281,282,284,288,289,290,291,294,295,296,],[-5,61,-3,-4,-22,-23,-62,-63,-64,-65,-66,61,61,61,-138,61,61,61,61,-77,-80,-83,61,-86,-88,-101,-104,-107,-110,-114,-118,-123,61,61,61,-129,61,61,61,-139,-140,-141,-143,-24,61,61,61,-39,-40,-41,-42,-43,-44,-45,-131,61,-79,61,-82,61,-85,-87,61,-90,-91,-92,-93,-94,-95,-96,-98,-100,61,-103,61,-106,61,-109,61,61,-113,61,61,-117,61,61,61,61,-124,-125,-126,-127,-129,61,61,-133,-135,195,-185,-142,-144,-25,61,61,61,61,61,61,61,-132,-80,-83,-88,-97,-99,-101,-104,-107,-110,-110,-114,-114,-118,-118,-118,-118,61,-130,-147,61,-150,-134,-136,61,-137,61,-69,-75,61,-71,61,-177,61,-81,-84,-89,-102,-105,-108,-111,-112,-115,-116,-119,-120,-121,-122,-128,-148,61,61,-149,61,61,61,-186,-67,61,61,-188,61,-6,61,61,-78,61,-187,-73,61,-178,61,61,61,-72,-179,-68,-69,61,61,-70,-74,]),'NAME':([0,3,4,5,6,7,9,10,11,12,13,15,17,19,20,22,23,34,36,37,38,41,45,55,56,57,59,60,61,66,67,69,72,74,75,76,77,78,79,80,92,94,96,99,100,101,102,103,104,105,106,108,110,112,114,116,117,119,120,122,123,124,125,131,132,133,146,148,150,151,153,154,156,157,158,160,162,167,168,180,190,194,196,197,198,199,203,204,205,209,214,231,232,234,236,237,242,243,244,245,246,248,252,254,266,269,270,271,275,276,277,281,282,284,285,288,289,290,291,293,294,295,296,],[-5,21,-3,-4,-22,-23,-62,-63,-64,-65,-66,21,21,21,82,83,21,21,88,89,21,21,21,21,21,21,21,21,21,-24,21,21,21,-39,-40,-41,-42,-43,-44,-45,21,21,21,21,-90,-91,-92,-93,-94,-95,-96,-98,21,21,21,21,21,21,21,21,21,21,21,21,21,191,-25,21,21,21,21,21,208,21,21,212,213,-97,-99,21,21,21,21,-69,-75,21,-71,21,208,-177,21,21,21,21,21,21,-67,21,21,-188,21,-6,21,21,21,-187,-73,21,208,-178,21,21,21,-72,208,-179,-68,-69,21,208,21,-70,-74,]),'NUMBER':([0,3,4,5,6,7,9,10,11,12,13,15,17,19,23,34,38,41,45,55,56,57,59,60,61,66,67,69,72,74,75,76,77,78,79,80,92,94,96,99,100,101,102,103,104,105,106,108,110,112,114,116,117,119,120,122,123,124,125,131,132,146,148,150,151,153,154,157,158,167,168,180,190,194,196,197,198,199,203,204,209,214,231,232,234,236,237,242,243,244,245,246,248,252,254,266,269,270,271,276,277,281,282,284,288,289,290,291,294,295,296,],[-5,62,-3,-4,-22,-23,-62,-63,-64,-65,-66,62,62,62,62,62,62,62,62,62,62,62,62,62,62,-24,62,62,62,-39,-40,-41,-42,-43,-44,-45,62,62,62,62,-90,-91,-92,-93,-94,-95,-96,-98,62,62,62,62,62,62,62,62,62,62,62,62,62,-25,62,62,62,62,62,62,62,-97,-99,62,62,62,62,-69,-75,62,-71,62,-177,62,62,62,62,62,62,-67,62,62,-188,62,-6,62,62,62,-187,-73,62,-178,62,62,62,-72,-179,-68,-69,62,62,-70,-74,]),'STRING':([0,3,4,5,6,7,9,10,11,12,13,15,17,19,23,34,38,41,45,55,56,57,59,60,61,64,65,66,67,69,72,74,75,76,77,78,79,80,92,94,96,99,100,101,102,103,104,105,106,108,110,112,114,116,117,119,120,122,123,124,125,131,132,146,148,150,151,153,154,157,158,167,168,180,190,194,196,197,198,199,203,204,209,214,231,232,234,236,237,242,243,244,245,246,248,252,254,266,269,270,271,276,277,281,282,284,288,289,290,291,294,295,296,],[-5,64,-3,-4,-22,-23,-62,-63,-64,-65,-66,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,-24,64,64,64,-39,-40,-41,-42,-43,-44,-45,64,64,64,64,-90,-91,-92,-93,-94,-95,-96,-98,64,64,64,64,64,64,64,64,64,64,64,64,64,-25,64,64,64,64,64,64,64,-97,-99,64,64,64,64,-69,-75,64,-71,64,-177,64,64,64,64,64,64,-67,64,64,-188,64,-6,64,64,64,-187,-73,64,-178,64,64,64,-72,-179,-68,-69,64,64,-70,-74,]),'TRIPLESTRING':([0,3,4,5,6,7,9,10,11,12,13,15,17,19,23,34,38,41,45,55,56,57,59,60,61,64,65,66,67,69,72,74,75,76,77,78,79,80,92,94,96,99,100,101,102,103,104,105,106,108,110,112,114,116,117,119,120,122,123,124,125,131,132,146,148,150,151,153,154,157,158,167,168,180,190,194,196,197,198,199,203,204,209,214,231,232,234,236,237,242,243,244,245,246,248,252,254,266,269,270,271,276,277,281,282,284,288,289,290,291,294,295,296,],[-5,65,-3,-4,-22,-23,-62,-63,-64,-65,-66,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,-24,65,65,65,-39,-40,-41,-42,-43,-44,-45,65,65,65,65,-90,-91,-92,-93,-94,-95,-96,-98,65,65,65,65,65,65,65,65,65,65,65,65,65,-25,65,65,65,65,65,65,65,-97,-99,65,65,65,65,-69,-75,65,-71,65,-177,65,65,65,65,65,65,-67,65,65,-188,65,-6,65,65,65,-187,-73,65,-178,65,65,65,-72,-179,-68,-69,65,65,-70,-74,]),'$end':([0,1,2,3,4,5,6,7,9,10,11,12,13,66,146,197,198,203,209,242,244,245,248,269,270,276,284,288,289,290,295,296,],[-5,0,-1,-2,-3,-4,-22,-23,-62,-63,-64,-65,-66,-24,-25,-69,-75,-71,-177,-67,-76,-188,-6,-187,-73,-178,-72,-179,-68,-69,-70,-74,]),'ELIF':([6,7,9,10,11,12,13,66,146,197,198,203,209,242,244,245,248,269,270,276,284,288,289,290,295,296,],[-22,-23,-62,-63,-64,-65,-66,-24,-25,243,-75,-71,-177,-67,-76,-188,-6,-187,-73,-178,-72,-179,-68,243,-70,-74,]),'ELSE':([6,7,9,10,11,12,13,21,43,44,46,47,48,49,50,51,52,53,54,58,62,63,64,65,66,84,93,95,97,98,109,111,113,115,118,121,126,127,128,129,130,134,137,144,145,146,159,163,164,165,166,169,170,171,172,173,174,175,176,177,178,179,181,182,191,192,193,195,197,198,203,209,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,233,242,244,245,248,269,270,276,284,288,289,290,295,296,],[-22,-23,-62,-63,-64,-65,-66,-138,-80,-83,-86,-88,-101,-104,-107,-110,-114,-118,-123,-129,-139,-140,-141,-143,-24,-131,-79,-82,-85,-87,-100,-103,-106,-109,-113,-117,-124,-125,-126,-127,-129,-133,-135,-142,-144,-25,-132,214,-80,-83,-88,-101,-104,-107,-110,-110,-114,-114,-118,-118,-118,-118,-130,-147,-150,-134,-136,-137,-69,-75,247,-177,-81,-84,-89,-102,-105,-108,-111,-112,-115,-116,-119,-120,-121,-122,-128,-148,-149,267,-76,-188,-6,-187,283,-178,-72,-179,-68,-69,-70,-74,]),'SEMI':([8,14,16,18,21,24,25,26,27,28,29,30,31,32,33,34,35,39,40,41,42,43,44,46,47,48,49,50,51,52,53,54,58,62,63,64,65,69,73,84,87,88,89,90,91,93,95,97,98,109,111,113,115,118,121,126,127,128,129,130,134,137,144,145,147,149,152,159,161,164,165,166,169,170,171,172,173,174,175,176,177,178,179,181,182,191,192,193,195,202,212,213,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,233,256,257,],[67,-27,-169,-37,-138,-28,-29,-30,-31,-32,-33,-34,-49,-50,-51,-46,-48,-52,-53,-54,-77,-80,-83,-86,-88,-101,-104,-107,-110,-114,-118,-123,-129,-139,-140,-141,-143,-170,-36,-131,-47,-56,-59,-61,-55,-79,-82,-85,-87,-100,-103,-106,-109,-113,-117,-124,-125,-126,-127,-129,-133,-135,-142,-144,-26,-171,-35,-132,-58,-80,-83,-88,-101,-104,-107,-110,-110,-114,-114,-118,-118,-118,-118,-130,-147,-150,-134,-136,-137,-38,-57,-59,-81,-84,-89,-102,-105,-108,-111,-112,-115,-116,-119,-120,-121,-122,-128,-148,-149,-60,-78,]),'PLUSEQUAL':([16,18,21,42,43,44,46,47,48,49,50,51,52,53,54,58,62,63,64,65,69,84,93,95,97,98,109,111,113,115,118,121,126,127,128,129,130,134,137,144,145,149,159,164,165,166,169,170,171,172,173,174,175,176,177,178,179,181,182,191,192,193,195,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,233,257,],[-169,74,-138,-77,-80,-83,-86,-88,-101,-104,-107,-110,-114,-118,-123,-129,-139,-140,-141,-143,-170,-131,-79,-82,-85,-87,-100,-103,-106,-109,-113,-117,-124,-125,-126,-127,-129,-133,-135,-142,-144,-171,-132,-80,-83,-88,-101,-104,-107,-110,-110,-114,-114,-118,-118,-118,-118,-130,-147,-150,-134,-136,-137,-81,-84,-89,-102,-105,-108,-111,-112,-115,-116,-119,-120,-121,-122,-128,-148,-149,-78,]),'MINEQUAL':([16,18,21,42,43,44,46,47,48,49,50,51,52,53,54,58,62,63,64,65,69,84,93,95,97,98,109,111,113,115,118,121,126,127,128,129,130,134,137,144,145,149,159,164,165,166,169,170,171,172,173,174,175,176,177,178,179,181,182,191,192,193,195,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,233,257,],[-169,75,-138,-77,-80,-83,-86,-88,-101,-104,-107,-110,-114,-118,-123,-129,-139,-140,-141,-143,-170,-131,-79,-82,-85,-87,-100,-103,-106,-109,-113,-117,-124,-125,-126,-127,-129,-133,-135,-142,-144,-171,-132,-80,-83,-88,-101,-104,-107,-110,-110,-114,-114,-118,-118,-118,-118,-130,-147,-150,-134,-136,-137,-81,-84,-89,-102,-105,-108,-111,-112,-115,-116,-119,-120,-121,-122,-128,-148,-149,-78,]),'STAREQUAL':([16,18,21,42,43,44,46,47,48,49,50,51,52,53,54,58,62,63,64,65,69,84,93,95,97,98,109,111,113,115,118,121,126,127,128,129,130,134,137,144,145,149,159,164,165,166,169,170,171,172,173,174,175,176,177,178,179,181,182,191,192,193,195,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,233,257,],[-169,76,-138,-77,-80,-83,-86,-88,-101,-104,-107,-110,-114,-118,-123,-129,-139,-140,-141,-143,-170,-131,-79,-82,-85,-87,-100,-103,-106,-109,-113,-117,-124,-125,-126,-127,-129,-133,-135,-142,-144,-171,-132,-80,-83,-88,-101,-104,-107,-110,-110,-114,-114,-118,-118,-118,-118,-130,-147,-150,-134,-136,-137,-81,-84,-89,-102,-105,-108,-111,-112,-115,-116,-119,-120,-121,-122,-128,-148,-149,-78,]),'SLASHEQUAL':([16,18,21,42,43,44,46,47,48,49,50,51,52,53,54,58,62,63,64,65,69,84,93,95,97,98,109,111,113,115,118,121,126,127,128,129,130,134,137,144,145,149,159,164,165,166,169,170,171,172,173,174,175,176,177,178,179,181,182,191,192,193,195,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,233,257,],[-169,77,-138,-77,-80,-83,-86,-88,-101,-104,-107,-110,-114,-118,-123,-129,-139,-140,-141,-143,-170,-131,-79,-82,-85,-87,-100,-103,-106,-109,-113,-117,-124,-125,-126,-127,-129,-133,-135,-142,-144,-171,-132,-80,-83,-88,-101,-104,-107,-110,-110,-114,-114,-118,-118,-118,-118,-130,-147,-150,-134,-136,-137,-81,-84,-89,-102,-105,-108,-111,-112,-115,-116,-119,-120,-121,-122,-128,-148,-149,-78,]),'PERCENTEQUAL':([16,18,21,42,43,44,46,47,48,49,50,51,52,53,54,58,62,63,64,65,69,84,93,95,97,98,109,111,113,115,118,121,126,127,128,129,130,134,137,144,145,149,159,164,165,166,169,170,171,172,173,174,175,176,177,178,179,181,182,191,192,193,195,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,233,257,],[-169,78,-138,-77,-80,-83,-86,-88,-101,-104,-107,-110,-114,-118,-123,-129,-139,-140,-141,-143,-170,-131,-79,-82,-85,-87,-100,-103,-106,-109,-113,-117,-124,-125,-126,-127,-129,-133,-135,-142,-144,-171,-132,-80,-83,-88,-101,-104,-107,-110,-110,-114,-114,-118,-118,-118,-118,-130,-147,-150,-134,-136,-137,-81,-84,-89,-102,-105,-108,-111,-112,-115,-116,-119,-120,-121,-122,-128,-148,-149,-78,]),'STARSTAREQUAL':([16,18,21,42,43,44,46,47,48,49,50,51,52,53,54,58,62,63,64,65,69,84,93,95,97,98,109,111,113,115,118,121,126,127,128,129,130,134,137,144,145,149,159,164,165,166,169,170,171,172,173,174,175,176,177,178,179,181,182,191,192,193,195,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,233,257,],[-169,79,-138,-77,-80,-83,-86,-88,-101,-104,-107,-110,-114,-118,-123,-129,-139,-140,-141,-143,-170,-131,-79,-82,-85,-87,-100,-103,-106,-109,-113,-117,-124,-125,-126,-127,-129,-133,-135,-142,-144,-171,-132,-80,-83,-88,-101,-104,-107,-110,-110,-114,-114,-118,-118,-118,-118,-130,-147,-150,-134,-136,-137,-81,-84,-89,-102,-105,-108,-111,-112,-115,-116,-119,-120,-121,-122,-128,-148,-149,-78,]),'SLASHSLASHEQUAL':([16,18,21,42,43,44,46,47,48,49,50,51,52,53,54,58,62,63,64,65,69,84,93,95,97,98,109,111,113,115,118,121,126,127,128,129,130,134,137,144,145,149,159,164,165,166,169,170,171,172,173,174,175,176,177,178,179,181,182,191,192,193,195,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,233,257,],[-169,80,-138,-77,-80,-83,-86,-88,-101,-104,-107,-110,-114,-118,-123,-129,-139,-140,-141,-143,-170,-131,-79,-82,-85,-87,-100,-103,-106,-109,-113,-117,-124,-125,-126,-127,-129,-133,-135,-142,-144,-171,-132,-80,-83,-88,-101,-104,-107,-110,-110,-114,-114,-118,-118,-118,-118,-130,-147,-150,-134,-136,-137,-81,-84,-89,-102,-105,-108,-111,-112,-115,-116,-119,-120,-121,-122,-128,-148,-149,-78,]),'EQUAL':([16,18,21,42,43,44,46,47,48,49,50,51,52,53,54,58,62,63,64,65,69,73,84,93,95,97,98,109,111,113,115,118,121,126,127,128,129,130,134,137,144,145,149,159,164,165,166,169,170,171,172,173,174,175,176,177,178,179,181,182,185,191,192,193,195,202,207,208,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,233,257,272,287,],[-169,-37,-138,-77,-80,-83,-86,-88,-101,-104,-107,-110,-114,-118,-123,-129,-139,-140,-141,-143,-170,153,-131,-79,-82,-85,-87,-100,-103,-106,-109,-113,-117,-124,-125,-126,-127,-129,-133,-135,-142,-144,-171,-132,-80,-83,-88,-101,-104,-107,-110,-110,-114,-114,-118,-118,-118,-118,-130,-147,232,-150,-134,-136,-137,-38,252,-16,-81,-84,-89,-102,-105,-108,-111,-112,-115,-116,-119,-120,-121,-122,-128,-148,-149,-78,-17,294,]),'RPAREN':([16,21,23,42,43,44,46,47,48,49,50,51,52,53,54,58,62,63,64,65,69,84,85,86,93,95,97,98,109,111,113,115,118,121,126,127,128,129,130,131,134,137,144,145,149,156,158,159,164,165,166,169,170,171,172,173,174,175,176,177,178,179,181,182,183,184,185,191,192,193,195,206,207,208,211,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,233,249,250,253,257,258,259,272,273,274,275,285,286,287,292,293,297,],[-169,-138,84,-77,-80,-83,-86,-88,-101,-104,-107,-110,-114,-118,-123,-129,-139,-140,-141,-143,-170,-131,159,-146,-79,-82,-85,-87,-100,-103,-106,-109,-113,-117,-124,-125,-126,-127,-129,182,-133,-135,-142,-144,-171,-8,210,-132,-80,-83,-88,-101,-104,-107,-110,-110,-114,-114,-118,-118,-118,-118,-130,-147,230,-180,-183,-150,-134,-136,-137,251,-13,-16,255,-81,-84,-89,-102,-105,-108,-111,-112,-115,-116,-119,-120,-121,-122,-128,-148,-181,-149,272,-20,-12,-78,-182,-184,-17,-19,-13,-11,-18,-10,-14,-21,-9,-15,]),'RSQB':([16,21,42,43,44,46,47,48,49,50,51,52,53,54,58,59,62,63,64,65,69,84,93,95,97,98,109,111,113,115,118,121,126,127,128,129,130,134,135,136,137,144,145,149,159,164,165,166,169,170,171,172,173,174,175,176,177,178,179,181,182,186,187,189,190,191,192,193,195,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,233,234,236,237,238,239,257,260,261,262,263,264,265,278,],[-169,-138,-77,-80,-83,-86,-88,-101,-104,-107,-110,-114,-118,-123,-129,134,-139,-140,-141,-143,-170,-131,-79,-82,-85,-87,-100,-103,-106,-109,-113,-117,-124,-125,-126,-127,-129,-133,192,-145,-135,-142,-144,-171,-132,-80,-83,-88,-101,-104,-107,-110,-110,-114,-114,-118,-118,-118,-118,-130,-147,233,-151,-155,-163,-150,-134,-136,-137,-81,-84,-89,-102,-105,-108,-111,-112,-115,-116,-119,-120,-121,-122,-128,-148,-149,-152,-160,-164,-161,-162,-78,-153,-154,-159,-158,-165,-157,-156,]),'RBRACE':([16,21,42,43,44,46,47,48,49,50,51,52,53,54,58,60,62,63,64,65,69,84,93,95,97,98,109,111,113,115,118,121,126,127,128,129,130,134,137,138,139,140,141,144,145,149,159,164,165,166,169,170,171,172,173,174,175,176,177,178,179,181,182,191,192,193,195,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,233,240,257,266,280,],[-169,-138,-77,-80,-83,-86,-88,-101,-104,-107,-110,-114,-118,-123,-129,137,-139,-140,-141,-143,-170,-131,-79,-82,-85,-87,-100,-103,-106,-109,-113,-117,-124,-125,-126,-127,-129,-133,-135,193,-172,-173,-169,-142,-144,-171,-132,-80,-83,-88,-101,-104,-107,-110,-110,-114,-114,-118,-118,-118,-118,-130,-147,-150,-134,-136,-137,-81,-84,-89,-102,-105,-108,-111,-112,-115,-116,-119,-120,-121,-122,-128,-148,-149,-174,-78,-175,-176,]),'COLON':([16,21,42,43,44,46,47,48,49,50,51,52,53,54,58,62,63,64,65,68,69,81,83,84,93,95,97,98,109,111,113,115,118,121,126,127,128,129,130,132,134,137,141,144,145,149,155,159,164,165,166,169,170,171,172,173,174,175,176,177,178,179,181,182,189,190,191,192,193,195,200,210,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,233,234,236,238,247,251,255,257,262,267,268,279,283,],[-169,-138,-77,-80,-83,-86,-88,-101,-104,-107,-110,-114,-118,-123,-129,-139,-140,-141,-143,148,-170,154,157,-131,-79,-82,-85,-87,-100,-103,-106,-109,-113,-117,-124,-125,-126,-127,-129,190,-133,-135,194,-142,-144,-171,204,-132,-80,-83,-88,-101,-104,-107,-110,-110,-114,-114,-118,-118,-118,-118,-130,-147,236,237,-150,-134,-136,-137,246,254,-81,-84,-89,-102,-105,-108,-111,-112,-115,-116,-119,-120,-121,-122,-128,-148,-149,190,237,237,271,-7,277,-78,237,281,282,194,291,]),'COMMA':([16,21,42,43,44,46,47,48,49,50,51,52,53,54,58,62,63,64,65,71,84,89,93,95,97,98,109,111,113,115,118,121,126,127,128,129,130,134,137,141,143,144,145,159,164,165,166,169,170,171,172,173,174,175,176,177,178,179,181,182,184,185,187,189,190,191,192,193,195,207,208,213,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,233,236,237,238,239,240,250,253,257,259,261,262,263,264,265,272,273,274,278,286,287,292,297,],[69,-138,-77,-80,-83,-86,-88,-101,-104,-107,-110,-114,-118,-123,-129,-139,-140,-141,-143,151,-131,162,-79,-82,-85,-87,-100,-103,-106,-109,-113,-117,-124,-125,-126,-127,-129,-133,-135,69,196,-142,-144,-132,-80,-83,-88,-101,-104,-107,-110,-110,-114,-114,-118,-118,-118,-118,-130,-147,231,-183,234,-155,-163,-150,-134,-136,-137,-13,-16,162,-81,-84,-89,-102,-105,-108,-111,-112,-115,-116,-119,-120,-121,-122,-128,-148,-149,-160,-164,-161,-162,266,-20,275,-78,-184,-154,-159,-158,-165,-157,-17,285,-13,-156,293,-14,-21,-15,]),'DOT':([21,58,62,63,64,65,84,130,132,134,137,144,145,159,182,188,191,192,193,195,230,233,234,235,],[-138,133,-139,-140,-141,-143,-131,133,188,-133,-135,-142,-144,-132,-147,235,-150,-134,-136,-137,-148,-149,188,261,]),'STARSTAR':([21,58,62,63,64,65,84,129,130,134,137,144,145,159,181,182,191,192,193,195,230,233,],[-138,-129,-139,-140,-141,-143,-131,180,-129,-133,-135,-142,-144,-132,-130,-147,-150,-134,-136,-137,-148,-149,]),'STAR':([21,53,54,58,62,63,64,65,84,126,127,128,129,130,134,137,144,145,159,176,177,178,179,181,182,191,192,193,195,229,230,233,],[-138,122,-123,-129,-139,-140,-141,-143,-131,-124,-125,-126,-127,-129,-133,-135,-142,-144,-132,122,122,122,122,-130,-147,-150,-134,-136,-137,-128,-148,-149,]),'SLASH':([21,53,54,58,62,63,64,65,84,126,127,128,129,130,134,137,144,145,159,176,177,178,179,181,182,191,192,193,195,229,230,233,],[-138,123,-123,-129,-139,-140,-141,-143,-131,-124,-125,-126,-127,-129,-133,-135,-142,-144,-132,123,123,123,123,-130,-147,-150,-134,-136,-137,-128,-148,-149,]),'PERCENT':([21,53,54,58,62,63,64,65,84,126,127,128,129,130,134,137,144,145,159,176,177,178,179,181,182,191,192,193,195,229,230,233,],[-138,124,-123,-129,-139,-140,-141,-143,-131,-124,-125,-126,-127,-129,-133,-135,-142,-144,-132,124,124,124,124,-130,-147,-150,-134,-136,-137,-128,-148,-149,]),'SLASHSLASH':([21,53,54,58,62,63,64,65,84,126,127,128,129,130,134,137,144,145,159,176,177,178,179,181,182,191,192,193,195,229,230,233,],[-138,125,-123,-129,-139,-140,-141,-143,-131,-124,-125,-126,-127,-129,-133,-135,-142,-144,-132,125,125,125,125,-130,-147,-150,-134,-136,-137,-128,-148,-149,]),'LEFTSHIFT':([21,51,52,53,54,58,62,63,64,65,84,118,121,126,127,128,129,130,134,137,144,145,159,172,173,174,175,176,177,178,179,181,182,191,192,193,195,223,224,225,226,227,228,229,230,233,],[-138,116,-114,-118,-123,-129,-139,-140,-141,-143,-131,-113,-117,-124,-125,-126,-127,-129,-133,-135,-142,-144,-132,116,116,-114,-114,-118,-118,-118,-118,-130,-147,-150,-134,-136,-137,-115,-116,-119,-120,-121,-122,-128,-148,-149,]),'RIGHTSHIFT':([21,51,52,53,54,58,62,63,64,65,84,118,121,126,127,128,129,130,134,137,144,145,159,172,173,174,175,176,177,178,179,181,182,191,192,193,195,223,224,225,226,227,228,229,230,233,],[-138,117,-114,-118,-123,-129,-139,-140,-141,-143,-131,-113,-117,-124,-125,-126,-127,-129,-133,-135,-142,-144,-132,117,117,-114,-114,-118,-118,-118,-118,-130,-147,-150,-134,-136,-137,-115,-116,-119,-120,-121,-122,-128,-148,-149,]),'AMPER':([21,50,51,52,53,54,58,62,63,64,65,84,115,118,121,126,127,128,129,130,134,137,144,145,159,171,172,173,174,175,176,177,178,179,181,182,191,192,193,195,221,222,223,224,225,226,227,228,229,230,233,],[-138,114,-110,-114,-118,-123,-129,-139,-140,-141,-143,-131,-109,-113,-117,-124,-125,-126,-127,-129,-133,-135,-142,-144,-132,114,-110,-110,-114,-114,-118,-118,-118,-118,-130,-147,-150,-134,-136,-137,-111,-112,-115,-116,-119,-120,-121,-122,-128,-148,-149,]),'CIRCUMFLEX':([21,49,50,51,52,53,54,58,62,63,64,65,84,113,115,118,121,126,127,128,129,130,134,137,144,145,159,170,171,172,173,174,175,176,177,178,179,181,182,191,192,193,195,220,221,222,223,224,225,226,227,228,229,230,233,],[-138,112,-107,-110,-114,-118,-123,-129,-139,-140,-141,-143,-131,-106,-109,-113,-117,-124,-125,-126,-127,-129,-133,-135,-142,-144,-132,112,-107,-110,-110,-114,-114,-118,-118,-118,-118,-130,-147,-150,-134,-136,-137,-108,-111,-112,-115,-116,-119,-120,-121,-122,-128,-148,-149,]),'VBAR':([21,48,49,50,51,52,53,54,58,62,63,64,65,84,111,113,115,118,121,126,127,128,129,130,134,137,144,145,159,169,170,171,172,173,174,175,176,177,178,179,181,182,191,192,193,195,219,220,221,222,223,224,225,226,227,228,229,230,233,],[-138,110,-104,-107,-110,-114,-118,-123,-129,-139,-140,-141,-143,-131,-103,-106,-109,-113,-117,-124,-125,-126,-127,-129,-133,-135,-142,-144,-132,110,-104,-107,-110,-110,-114,-114,-118,-118,-118,-118,-130,-147,-150,-134,-136,-137,-105,-108,-111,-112,-115,-116,-119,-120,-121,-122,-128,-148,-149,]),'LESS':([21,47,48,49,50,51,52,53,54,58,62,63,64,65,84,109,111,113,115,118,121,126,127,128,129,130,134,137,144,145,159,166,169,170,171,172,173,174,175,176,177,178,179,181,182,191,192,193,195,218,219,220,221,222,223,224,225,226,227,228,229,230,233,],[-138,100,-101,-104,-107,-110,-114,-118,-123,-129,-139,-140,-141,-143,-131,-100,-103,-106,-109,-113,-117,-124,-125,-126,-127,-129,-133,-135,-142,-144,-132,100,-101,-104,-107,-110,-110,-114,-114,-118,-118,-118,-118,-130,-147,-150,-134,-136,-137,-102,-105,-108,-111,-112,-115,-116,-119,-120,-121,-122,-128,-148,-149,]),'GREATER':([21,47,48,49,50,51,52,53,54,58,62,63,64,65,84,109,111,113,115,118,121,126,127,128,129,130,134,137,144,145,159,166,169,170,171,172,173,174,175,176,177,178,179,181,182,191,192,193,195,218,219,220,221,222,223,224,225,226,227,228,229,230,233,],[-138,101,-101,-104,-107,-110,-114,-118,-123,-129,-139,-140,-141,-143,-131,-100,-103,-106,-109,-113,-117,-124,-125,-126,-127,-129,-133,-135,-142,-144,-132,101,-101,-104,-107,-110,-110,-114,-114,-118,-118,-118,-118,-130,-147,-150,-134,-136,-137,-102,-105,-108,-111,-112,-115,-116,-119,-120,-121,-122,-128,-148,-149,]),'EQEQUAL':([21,47,48,49,50,51,52,53,54,58,62,63,64,65,84,109,111,113,115,118,121,126,127,128,129,130,134,137,144,145,159,166,169,170,171,172,173,174,175,176,177,178,179,181,182,191,192,193,195,218,219,220,221,222,223,224,225,226,227,228,229,230,233,],[-138,102,-101,-104,-107,-110,-114,-118,-123,-129,-139,-140,-141,-143,-131,-100,-103,-106,-109,-113,-117,-124,-125,-126,-127,-129,-133,-135,-142,-144,-132,102,-101,-104,-107,-110,-110,-114,-114,-118,-118,-118,-118,-130,-147,-150,-134,-136,-137,-102,-105,-108,-111,-112,-115,-116,-119,-120,-121,-122,-128,-148,-149,]),'GREATEREQUAL':([21,47,48,49,50,51,52,53,54,58,62,63,64,65,84,109,111,113,115,118,121,126,127,128,129,130,134,137,144,145,159,166,169,170,171,172,173,174,175,176,177,178,179,181,182,191,192,193,195,218,219,220,221,222,223,224,225,226,227,228,229,230,233,],[-138,103,-101,-104,-107,-110,-114,-118,-123,-129,-139,-140,-141,-143,-131,-100,-103,-106,-109,-113,-117,-124,-125,-126,-127,-129,-133,-135,-142,-144,-132,103,-101,-104,-107,-110,-110,-114,-114,-118,-118,-118,-118,-130,-147,-150,-134,-136,-137,-102,-105,-108,-111,-112,-115,-116,-119,-120,-121,-122,-128,-148,-149,]),'LESSEQUAL':([21,47,48,49,50,51,52,53,54,58,62,63,64,65,84,109,111,113,115,118,121,126,127,128,129,130,134,137,144,145,159,166,169,170,171,172,173,174,175,176,177,178,179,181,182,191,192,193,195,218,219,220,221,222,223,224,225,226,227,228,229,230,233,],[-138,104,-101,-104,-107,-110,-114,-118,-123,-129,-139,-140,-141,-143,-131,-100,-103,-106,-109,-113,-117,-124,-125,-126,-127,-129,-133,-135,-142,-144,-132,104,-101,-104,-107,-110,-110,-114,-114,-118,-118,-118,-118,-130,-147,-150,-134,-136,-137,-102,-105,-108,-111,-112,-115,-116,-119,-120,-121,-122,-128,-148,-149,]),'NOTEQUAL':([21,47,48,49,50,51,52,53,54,58,62,63,64,65,84,109,111,113,115,118,121,126,127,128,129,130,134,137,144,145,159,166,169,170,171,172,173,174,175,176,177,178,179,181,182,191,192,193,195,218,219,220,221,222,223,224,225,226,227,228,229,230,233,],[-138,105,-101,-104,-107,-110,-114,-118,-123,-129,-139,-140,-141,-143,-131,-100,-103,-106,-109,-113,-117,-124,-125,-126,-127,-129,-133,-135,-142,-144,-132,105,-101,-104,-107,-110,-110,-114,-114,-118,-118,-118,-118,-130,-147,-150,-134,-136,-137,-102,-105,-108,-111,-112,-115,-116,-119,-120,-121,-122,-128,-148,-149,]),'IN':([21,47,48,49,50,51,52,53,54,58,62,63,64,65,70,71,84,107,109,111,113,115,118,121,126,127,128,129,130,134,137,144,145,151,159,166,169,170,171,172,173,174,175,176,177,178,179,181,182,191,192,193,195,201,218,219,220,221,222,223,224,225,226,227,228,229,230,233,],[-138,106,-101,-104,-107,-110,-114,-118,-123,-129,-139,-140,-141,-143,150,-166,-131,167,-100,-103,-106,-109,-113,-117,-124,-125,-126,-127,-129,-133,-135,-142,-144,-167,-132,106,-101,-104,-107,-110,-110,-114,-114,-118,-118,-118,-118,-130,-147,-150,-134,-136,-137,-168,-102,-105,-108,-111,-112,-115,-116,-119,-120,-121,-122,-128,-148,-149,]),'IS':([21,47,48,49,50,51,52,53,54,58,62,63,64,65,84,109,111,113,115,118,121,126,127,128,129,130,134,137,144,145,159,166,169,170,171,172,173,174,175,176,177,178,179,181,182,191,192,193,195,218,219,220,221,222,223,224,225,226,227,228,229,230,233,],[-138,108,-101,-104,-107,-110,-114,-118,-123,-129,-139,-140,-141,-143,-131,-100,-103,-106,-109,-113,-117,-124,-125,-126,-127,-129,-133,-135,-142,-144,-132,108,-101,-104,-107,-110,-110,-114,-114,-118,-118,-118,-118,-130,-147,-150,-134,-136,-137,-102,-105,-108,-111,-112,-115,-116,-119,-120,-121,-122,-128,-148,-149,]),'AND':([21,44,46,47,48,49,50,51,52,53,54,58,62,63,64,65,84,97,98,109,111,113,115,118,121,126,127,128,129,130,134,137,144,145,159,165,166,169,170,171,172,173,174,175,176,177,178,179,181,182,191,192,193,195,217,218,219,220,221,222,223,224,225,226,227,228,229,230,233,],[-138,96,-86,-88,-101,-104,-107,-110,-114,-118,-123,-129,-139,-140,-141,-143,-131,-85,-87,-100,-103,-106,-109,-113,-117,-124,-125,-126,-127,-129,-133,-135,-142,-144,-132,96,-88,-101,-104,-107,-110,-110,-114,-114,-118,-118,-118,-118,-130,-147,-150,-134,-136,-137,-89,-102,-105,-108,-111,-112,-115,-116,-119,-120,-121,-122,-128,-148,-149,]),'OR':([21,43,44,46,47,48,49,50,51,52,53,54,58,62,63,64,65,84,95,97,98,109,111,113,115,118,121,126,127,128,129,130,134,137,144,145,159,164,165,166,169,170,171,172,173,174,175,176,177,178,179,181,182,191,192,193,195,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,233,],[-138,94,-83,-86,-88,-101,-104,-107,-110,-114,-118,-123,-129,-139,-140,-141,-143,-131,-82,-85,-87,-100,-103,-106,-109,-113,-117,-124,-125,-126,-127,-129,-133,-135,-142,-144,-132,94,-83,-88,-101,-104,-107,-110,-110,-114,-114,-118,-118,-118,-118,-130,-147,-150,-134,-136,-137,-84,-89,-102,-105,-108,-111,-112,-115,-116,-119,-120,-121,-122,-128,-148,-149,]),'AS':([88,],[160,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'file_input':([0,],[2,]),'single_stmt':([0,],[3,]),'stmt':([3,199,244,],[5,245,269,]),'simple_stmt':([3,148,154,157,199,204,244,246,254,271,277,281,282,291,],[6,198,198,198,6,198,6,198,198,198,198,198,198,198,]),'compound_stmt':([3,199,244,],[7,7,7,]),'small_stmts':([3,148,154,157,199,204,244,246,254,271,277,281,282,291,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'if_stmt':([3,199,244,],[9,9,9,]),'for_stmt':([3,199,244,],[10,10,10,]),'while_stmt':([3,199,244,],[11,11,11,]),'funcdef':([3,199,244,],[12,12,12,]),'classdef':([3,199,244,],[13,13,13,]),'small_stmt':([3,67,148,154,157,199,204,244,246,254,271,277,281,282,291,],[14,147,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'test':([3,15,19,23,34,38,41,59,60,61,67,69,72,131,132,148,150,153,154,157,158,190,194,196,199,204,214,231,232,234,236,237,243,244,246,252,254,266,271,277,281,282,291,294,],[16,68,81,16,16,16,16,16,141,143,16,16,16,185,189,16,16,16,16,16,16,238,240,143,16,16,257,185,259,189,262,264,268,16,16,274,16,279,16,16,16,16,16,297,]),'testlist':([3,23,34,38,41,59,60,67,69,72,148,150,153,154,157,158,199,204,244,246,254,271,277,281,282,291,],[18,86,87,90,91,136,140,18,149,152,18,200,202,18,18,211,18,18,18,18,18,18,18,18,18,18,]),'flow_stmt':([3,67,148,154,157,199,204,244,246,254,271,277,281,282,291,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'expr_stmt':([3,67,148,154,157,199,204,244,246,254,271,277,281,282,291,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'print_stmt':([3,67,148,154,157,199,204,244,246,254,271,277,281,282,291,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'pass_stmt':([3,67,148,154,157,199,204,244,246,254,271,277,281,282,291,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'import_stmt':([3,67,148,154,157,199,204,244,246,254,271,277,281,282,291,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'global_stmt':([3,67,148,154,157,199,204,244,246,254,271,277,281,282,291,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'assert_stmt':([3,67,148,154,157,199,204,244,246,254,271,277,281,282,291,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'break_stmt':([3,67,148,154,157,199,204,244,246,254,271,277,281,282,291,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'continue_stmt':([3,67,148,154,157,199,204,244,246,254,271,277,281,282,291,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'return_stmt':([3,67,148,154,157,199,204,244,246,254,271,277,281,282,291,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'or_test':([3,15,19,23,34,38,41,59,60,61,67,69,72,92,131,132,148,150,153,154,157,158,190,194,196,199,204,214,231,232,234,236,237,243,244,246,252,254,266,271,277,281,282,291,294,],[42,42,42,42,42,42,42,42,42,42,42,42,42,163,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'and_test':([3,15,19,23,34,38,41,59,60,61,67,69,72,92,94,131,132,148,150,153,154,157,158,190,194,196,199,204,214,231,232,234,236,237,243,244,246,252,254,266,271,277,281,282,291,294,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,164,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'not_test':([3,15,19,23,34,38,41,45,59,60,61,67,69,72,92,94,96,131,132,148,150,153,154,157,158,190,194,196,199,204,214,231,232,234,236,237,243,244,246,252,254,266,271,277,281,282,291,294,],[44,44,44,44,44,44,44,97,44,44,44,44,44,44,44,44,165,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'comparison':([3,15,19,23,34,38,41,45,59,60,61,67,69,72,92,94,96,131,132,148,150,153,154,157,158,190,194,196,199,204,214,231,232,234,236,237,243,244,246,252,254,266,271,277,281,282,291,294,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'expr':([3,15,17,19,23,34,38,41,45,59,60,61,67,69,72,92,94,96,99,131,132,148,150,151,153,154,157,158,190,194,196,199,204,214,231,232,234,236,237,243,244,246,252,254,266,271,277,281,282,291,294,],[47,47,71,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,166,47,47,47,47,71,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'xor_expr':([3,15,17,19,23,34,38,41,45,59,60,61,67,69,72,92,94,96,99,110,131,132,148,150,151,153,154,157,158,190,194,196,199,204,214,231,232,234,236,237,243,244,246,252,254,266,271,277,281,282,291,294,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,169,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'and_expr':([3,15,17,19,23,34,38,41,45,59,60,61,67,69,72,92,94,96,99,110,112,131,132,148,150,151,153,154,157,158,190,194,196,199,204,214,231,232,234,236,237,243,244,246,252,254,266,271,277,281,282,291,294,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,170,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'shift_expr':([3,15,17,19,23,34,38,41,45,59,60,61,67,69,72,92,94,96,99,110,112,114,131,132,148,150,151,153,154,157,158,190,194,196,199,204,214,231,232,234,236,237,243,244,246,252,254,266,271,277,281,282,291,294,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,171,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'arith_expr':([3,15,17,19,23,34,38,41,45,59,60,61,67,69,72,92,94,96,99,110,112,114,116,117,131,132,148,150,151,153,154,157,158,190,194,196,199,204,214,231,232,234,236,237,243,244,246,252,254,266,271,277,281,282,291,294,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,172,173,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'term':([3,15,17,19,23,34,38,41,45,59,60,61,67,69,72,92,94,96,99,110,112,114,116,117,119,120,131,132,148,150,151,153,154,157,158,190,194,196,199,204,214,231,232,234,236,237,243,244,246,252,254,266,271,277,281,282,291,294,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,174,175,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'factor':([3,15,17,19,23,34,38,41,45,55,56,57,59,60,61,67,69,72,92,94,96,99,110,112,114,116,117,119,120,122,123,124,125,131,132,148,150,151,153,154,157,158,180,190,194,196,199,204,214,231,232,234,236,237,243,244,246,252,254,266,271,277,281,282,291,294,],[53,53,53,53,53,53,53,53,53,126,127,128,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,176,177,178,179,53,53,53,53,53,53,53,53,53,229,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'power':([3,15,17,19,23,34,38,41,45,55,56,57,59,60,61,67,69,72,92,94,96,99,110,112,114,116,117,119,120,122,123,124,125,131,132,148,150,151,153,154,157,158,180,190,194,196,199,204,214,231,232,234,236,237,243,244,246,252,254,266,271,277,281,282,291,294,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'atom':([3,15,17,19,23,34,38,41,45,55,56,57,59,60,61,67,69,72,92,94,96,99,110,112,114,116,117,119,120,122,123,124,125,131,132,148,150,151,153,154,157,158,180,190,194,196,199,204,214,231,232,234,236,237,243,244,246,252,254,266,271,277,281,282,291,294,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'stringlist':([3,15,17,19,23,34,38,41,45,55,56,57,59,60,61,64,65,67,69,72,92,94,96,99,110,112,114,116,117,119,120,122,123,124,125,131,132,148,150,151,153,154,157,158,180,190,194,196,199,204,214,231,232,234,236,237,243,244,246,252,254,266,271,277,281,282,291,294,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,144,145,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'exprlist':([17,151,],[70,201,]),'augassign':([18,],[72,]),'eqtestlist':([18,],[73,]),'testlist_comp':([23,],[85,]),'ortestlist':([43,164,],[93,215,]),'andtestlist':([44,165,],[95,216,]),'compexprlist':([47,166,],[98,217,]),'comp_op':([47,166,],[99,99,]),'xorexprlist':([48,169,],[109,218,]),'andexprlist':([49,170,],[111,219,]),'shiftexprlist':([50,171,],[113,220,]),'arithexprlist':([51,172,173,],[115,221,222,]),'termlist':([52,174,175,],[118,223,224,]),'factorlist':([53,176,177,178,179,],[121,225,226,227,228,]),'trailerlist':([58,130,],[129,181,]),'trailer':([58,130,],[130,130,]),'listmaker':([59,],[135,]),'dictorsetmaker':([60,],[138,]),'testcolonlist':([60,266,],[139,280,]),'testlist1':([61,196,],[142,241,]),'parameters':([82,],[155,]),'namelist':([89,213,],[161,256,]),'arglist':([131,231,],[183,258,]),'argument':([131,231,],[184,184,]),'subscriptlist':([132,234,],[186,260,]),'subscript':([132,234,],[187,187,]),'suite':([148,154,157,204,246,254,271,277,281,282,291,],[197,203,209,248,270,276,284,288,289,290,296,]),'varargslist':([156,],[206,]),'fpdef':([156,205,275,285,293,],[207,250,287,292,287,]),'sliceop':([190,236,238,262,],[239,263,265,278,]),'elif_list':([197,290,],[242,295,]),'stmts':([199,],[244,]),'fplist':([205,],[249,]),'fpdeflist':([207,274,],[253,286,]),'fplist1':([250,],[273,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> file_input','start',1,'p_start','ply_program.py',355),
  ('file_input -> single_stmt','file_input',1,'p_file_input','ply_program.py',363),
  ('single_stmt -> single_stmt NEWLINE','single_stmt',2,'p_single_stmt','ply_program.py',368),
  ('single_stmt -> single_stmt stmt','single_stmt',2,'p_single_stmt','ply_program.py',369),
  ('single_stmt -> <empty>','single_stmt',0,'p_single_stmt','ply_program.py',370),
  ('funcdef -> DEF NAME parameters COLON suite','funcdef',5,'p_funcdef','ply_program.py',375),
  ('parameters -> LPAREN varargslist RPAREN','parameters',3,'p_parameters','ply_program.py',380),
  ('varargslist -> <empty>','varargslist',0,'p_varargslist','ply_program.py',385),
  ('varargslist -> fpdef EQUAL test fpdeflist COMMA','varargslist',5,'p_varargslist','ply_program.py',386),
  ('varargslist -> fpdef EQUAL test fpdeflist','varargslist',4,'p_varargslist','ply_program.py',387),
  ('varargslist -> fpdef fpdeflist COMMA','varargslist',3,'p_varargslist','ply_program.py',388),
  ('varargslist -> fpdef fpdeflist','varargslist',2,'p_varargslist','ply_program.py',389),
  ('fpdeflist -> <empty>','fpdeflist',0,'p_fpdeflist','ply_program.py',394),
  ('fpdeflist -> fpdeflist COMMA fpdef','fpdeflist',3,'p_fpdeflist','ply_program.py',395),
  ('fpdeflist -> fpdeflist COMMA fpdef EQUAL test','fpdeflist',5,'p_fpdeflist','ply_program.py',396),
  ('fpdef -> NAME','fpdef',1,'p_fpdef','ply_program.py',401),
  ('fpdef -> LPAREN fplist RPAREN','fpdef',3,'p_fpdef','ply_program.py',402),
  ('fplist -> fpdef fplist1 COMMA','fplist',3,'p_fplist','ply_program.py',407),
  ('fplist -> fpdef fplist1','fplist',2,'p_fplist','ply_program.py',408),
  ('fplist1 -> <empty>','fplist1',0,'p_fplist1','ply_program.py',413),
  ('fplist1 -> fplist1 COMMA fpdef','fplist1',3,'p_fplist1','ply_program.py',414),
  ('stmt -> simple_stmt','stmt',1,'p_stmt','ply_program.py',419),
  ('stmt -> compound_stmt','stmt',1,'p_stmt','ply_program.py',420),
  ('simple_stmt -> small_stmts NEWLINE','simple_stmt',2,'p_simple_stmt','ply_program.py',425),
  ('simple_stmt -> small_stmts SEMI NEWLINE','simple_stmt',3,'p_simple_stmt','ply_program.py',426),
  ('small_stmts -> small_stmts SEMI small_stmt','small_stmts',3,'p_small_stmts','ply_program.py',431),
  ('small_stmts -> small_stmt','small_stmts',1,'p_small_stmts','ply_program.py',432),
  ('small_stmt -> flow_stmt','small_stmt',1,'p_small_stmt','ply_program.py',437),
  ('small_stmt -> expr_stmt','small_stmt',1,'p_small_stmt','ply_program.py',438),
  ('small_stmt -> print_stmt','small_stmt',1,'p_small_stmt','ply_program.py',439),
  ('small_stmt -> pass_stmt','small_stmt',1,'p_small_stmt','ply_program.py',440),
  ('small_stmt -> import_stmt','small_stmt',1,'p_small_stmt','ply_program.py',441),
  ('small_stmt -> global_stmt','small_stmt',1,'p_small_stmt','ply_program.py',442),
  ('small_stmt -> assert_stmt','small_stmt',1,'p_small_stmt','ply_program.py',443),
  ('expr_stmt -> testlist augassign testlist','expr_stmt',3,'p_expr_stmt','ply_program.py',448),
  ('expr_stmt -> testlist eqtestlist','expr_stmt',2,'p_expr_stmt','ply_program.py',449),
  ('eqtestlist -> <empty>','eqtestlist',0,'p_eqtestlist','ply_program.py',454),
  ('eqtestlist -> eqtestlist EQUAL testlist','eqtestlist',3,'p_eqtestlist','ply_program.py',455),
  ('augassign -> PLUSEQUAL','augassign',1,'p_augassign','ply_program.py',460),
  ('augassign -> MINEQUAL','augassign',1,'p_augassign','ply_program.py',461),
  ('augassign -> STAREQUAL','augassign',1,'p_augassign','ply_program.py',462),
  ('augassign -> SLASHEQUAL','augassign',1,'p_augassign','ply_program.py',463),
  ('augassign -> PERCENTEQUAL','augassign',1,'p_augassign','ply_program.py',464),
  ('augassign -> STARSTAREQUAL','augassign',1,'p_augassign','ply_program.py',465),
  ('augassign -> SLASHSLASHEQUAL','augassign',1,'p_augassign','ply_program.py',466),
  ('print_stmt -> PRINT','print_stmt',1,'p_print_stmt','ply_program.py',471),
  ('print_stmt -> PRINT testlist','print_stmt',2,'p_print_stmt','ply_program.py',472),
  ('pass_stmt -> PASS','pass_stmt',1,'p_pass_stmt','ply_program.py',477),
  ('flow_stmt -> break_stmt','flow_stmt',1,'p_flow_stmt','ply_program.py',482),
  ('flow_stmt -> continue_stmt','flow_stmt',1,'p_flow_stmt','ply_program.py',483),
  ('flow_stmt -> return_stmt','flow_stmt',1,'p_flow_stmt','ply_program.py',484),
  ('break_stmt -> BREAK','break_stmt',1,'p_break_stmt','ply_program.py',489),
  ('continue_stmt -> CONTINUE','continue_stmt',1,'p_continue_stmt','ply_program.py',494),
  ('return_stmt -> RETURN','return_stmt',1,'p_return_stmt','ply_program.py',499),
  ('return_stmt -> RETURN testlist','return_stmt',2,'p_return_stmt','ply_program.py',500),
  ('import_stmt -> IMPORT NAME','import_stmt',2,'p_import_stmt','ply_program.py',505),
  ('import_stmt -> IMPORT NAME AS NAME','import_stmt',4,'p_import_stmt','ply_program.py',506),
  ('global_stmt -> GLOBAL NAME namelist','global_stmt',3,'p_global_stmt','ply_program.py',511),
  ('namelist -> <empty>','namelist',0,'p_namelist','ply_program.py',516),
  ('namelist -> COMMA NAME namelist','namelist',3,'p_namelist','ply_program.py',517),
  ('assert_stmt -> ASSERT testlist','assert_stmt',2,'p_assert_stmt','ply_program.py',522),
  ('compound_stmt -> if_stmt','compound_stmt',1,'p_compound_stmt','ply_program.py',527),
  ('compound_stmt -> for_stmt','compound_stmt',1,'p_compound_stmt','ply_program.py',528),
  ('compound_stmt -> while_stmt','compound_stmt',1,'p_compound_stmt','ply_program.py',529),
  ('compound_stmt -> funcdef','compound_stmt',1,'p_compound_stmt','ply_program.py',530),
  ('compound_stmt -> classdef','compound_stmt',1,'p_compound_stmt','ply_program.py',531),
  ('if_stmt -> IF test COLON suite elif_list','if_stmt',5,'p_if_stmt','ply_program.py',536),
  ('if_stmt -> IF test COLON suite elif_list ELSE COLON suite','if_stmt',8,'p_if_stmt','ply_program.py',537),
  ('elif_list -> <empty>','elif_list',0,'p_elif_list','ply_program.py',542),
  ('elif_list -> ELIF test COLON suite elif_list','elif_list',5,'p_elif_list','ply_program.py',543),
  ('while_stmt -> WHILE test COLON suite','while_stmt',4,'p_while_stmt','ply_program.py',548),
  ('while_stmt -> WHILE test COLON suite ELSE COLON suite','while_stmt',7,'p_while_stmt','ply_program.py',549),
  ('for_stmt -> FOR exprlist IN testlist COLON suite','for_stmt',6,'p_for_stmt','ply_program.py',554),
  ('for_stmt -> FOR exprlist IN testlist COLON suite ELSE COLON suite','for_stmt',9,'p_for_stmt','ply_program.py',555),
  ('suite -> simple_stmt','suite',1,'p_suite','ply_program.py',560),
  ('suite -> NEWLINE stmts','suite',2,'p_suite','ply_program.py',561),
  ('test -> or_test','test',1,'p_test','ply_program.py',566),
  ('test -> or_test IF or_test ELSE test','test',5,'p_test','ply_program.py',567),
  ('or_test -> and_test ortestlist','or_test',2,'p_or_test','ply_program.py',572),
  ('ortestlist -> <empty>','ortestlist',0,'p_ortestlist','ply_program.py',577),
  ('ortestlist -> OR and_test ortestlist','ortestlist',3,'p_ortestlist','ply_program.py',578),
  ('and_test -> not_test andtestlist','and_test',2,'p_and_test','ply_program.py',583),
  ('andtestlist -> <empty>','andtestlist',0,'p_andtestlist','ply_program.py',588),
  ('andtestlist -> AND not_test andtestlist','andtestlist',3,'p_andtestlist','ply_program.py',589),
  ('not_test -> NOT not_test','not_test',2,'p_not_test','ply_program.py',594),
  ('not_test -> comparison','not_test',1,'p_not_test','ply_program.py',595),
  ('comparison -> expr compexprlist','comparison',2,'p_comparison','ply_program.py',600),
  ('compexprlist -> <empty>','compexprlist',0,'p_compexprlist','ply_program.py',605),
  ('compexprlist -> comp_op expr compexprlist','compexprlist',3,'p_compexprlist','ply_program.py',606),
  ('comp_op -> LESS','comp_op',1,'p_comp_op','ply_program.py',611),
  ('comp_op -> GREATER','comp_op',1,'p_comp_op','ply_program.py',612),
  ('comp_op -> EQEQUAL','comp_op',1,'p_comp_op','ply_program.py',613),
  ('comp_op -> GREATEREQUAL','comp_op',1,'p_comp_op','ply_program.py',614),
  ('comp_op -> LESSEQUAL','comp_op',1,'p_comp_op','ply_program.py',615),
  ('comp_op -> NOTEQUAL','comp_op',1,'p_comp_op','ply_program.py',616),
  ('comp_op -> IN','comp_op',1,'p_comp_op','ply_program.py',617),
  ('comp_op -> NOT IN','comp_op',2,'p_comp_op','ply_program.py',618),
  ('comp_op -> IS','comp_op',1,'p_comp_op','ply_program.py',619),
  ('comp_op -> IS NOT','comp_op',2,'p_comp_op','ply_program.py',620),
  ('expr -> xor_expr xorexprlist','expr',2,'p_expr','ply_program.py',625),
  ('xorexprlist -> <empty>','xorexprlist',0,'p_xorexprlist','ply_program.py',630),
  ('xorexprlist -> VBAR xor_expr xorexprlist','xorexprlist',3,'p_xorexprlist','ply_program.py',631),
  ('xor_expr -> and_expr andexprlist','xor_expr',2,'p_xor_expr','ply_program.py',636),
  ('andexprlist -> <empty>','andexprlist',0,'p_andexprlist','ply_program.py',641),
  ('andexprlist -> CIRCUMFLEX and_expr andexprlist','andexprlist',3,'p_andexprlist','ply_program.py',642),
  ('and_expr -> shift_expr shiftexprlist','and_expr',2,'p_and_expr','ply_program.py',647),
  ('shiftexprlist -> <empty>','shiftexprlist',0,'p_shiftexprlist','ply_program.py',652),
  ('shiftexprlist -> AMPER shift_expr shiftexprlist','shiftexprlist',3,'p_shiftexprlist','ply_program.py',653),
  ('shift_expr -> arith_expr arithexprlist','shift_expr',2,'p_shift_expr','ply_program.py',658),
  ('arithexprlist -> <empty>','arithexprlist',0,'p_arithexprlist','ply_program.py',663),
  ('arithexprlist -> LEFTSHIFT arith_expr arithexprlist','arithexprlist',3,'p_arithexprlist','ply_program.py',664),
  ('arithexprlist -> RIGHTSHIFT arith_expr arithexprlist','arithexprlist',3,'p_arithexprlist','ply_program.py',665),
  ('arith_expr -> term termlist','arith_expr',2,'p_arith_expr','ply_program.py',670),
  ('termlist -> <empty>','termlist',0,'p_termlist','ply_program.py',675),
  ('termlist -> PLUS term termlist','termlist',3,'p_termlist','ply_program.py',676),
  ('termlist -> MINUS term termlist','termlist',3,'p_termlist','ply_program.py',677),
  ('term -> factor factorlist','term',2,'p_term','ply_program.py',682),
  ('factorlist -> <empty>','factorlist',0,'p_factorlist','ply_program.py',687),
  ('factorlist -> STAR factor factorlist','factorlist',3,'p_factorlist','ply_program.py',688),
  ('factorlist -> SLASH factor factorlist','factorlist',3,'p_factorlist','ply_program.py',689),
  ('factorlist -> PERCENT factor factorlist','factorlist',3,'p_factorlist','ply_program.py',690),
  ('factorlist -> SLASHSLASH factor factorlist','factorlist',3,'p_factorlist','ply_program.py',691),
  ('factor -> power','factor',1,'p_factor','ply_program.py',696),
  ('factor -> PLUS factor','factor',2,'p_factor','ply_program.py',697),
  ('factor -> MINUS factor','factor',2,'p_factor','ply_program.py',698),
  ('factor -> TILDE factor','factor',2,'p_factor','ply_program.py',699),
  ('power -> atom trailerlist','power',2,'p_power','ply_program.py',704),
  ('power -> atom trailerlist STARSTAR factor','power',4,'p_power','ply_program.py',705),
  ('trailerlist -> <empty>','trailerlist',0,'p_trailerlist','ply_program.py',710),
  ('trailerlist -> trailer trailerlist','trailerlist',2,'p_trailerlist','ply_program.py',711),
  ('atom -> LPAREN RPAREN','atom',2,'p_atom','ply_program.py',716),
  ('atom -> LPAREN testlist_comp RPAREN','atom',3,'p_atom','ply_program.py',717),
  ('atom -> LSQB RSQB','atom',2,'p_atom','ply_program.py',718),
  ('atom -> LSQB listmaker RSQB','atom',3,'p_atom','ply_program.py',719),
  ('atom -> LBRACE RBRACE','atom',2,'p_atom','ply_program.py',720),
  ('atom -> LBRACE dictorsetmaker RBRACE','atom',3,'p_atom','ply_program.py',721),
  ('atom -> BACKQUOTE testlist1 BACKQUOTE','atom',3,'p_atom','ply_program.py',722),
  ('atom -> NAME','atom',1,'p_atom','ply_program.py',723),
  ('atom -> NUMBER','atom',1,'p_atom','ply_program.py',724),
  ('atom -> stringlist','atom',1,'p_atom','ply_program.py',725),
  ('stringlist -> STRING','stringlist',1,'p_stringlist','ply_program.py',730),
  ('stringlist -> STRING stringlist','stringlist',2,'p_stringlist','ply_program.py',731),
  ('stringlist -> TRIPLESTRING','stringlist',1,'p_stringlist','ply_program.py',732),
  ('stringlist -> TRIPLESTRING stringlist','stringlist',2,'p_stringlist','ply_program.py',733),
  ('listmaker -> testlist','listmaker',1,'p_listmaker','ply_program.py',738),
  ('testlist_comp -> testlist','testlist_comp',1,'p_testlist_comp','ply_program.py',743),
  ('trailer -> LPAREN RPAREN','trailer',2,'p_trailer','ply_program.py',748),
  ('trailer -> LPAREN arglist RPAREN','trailer',3,'p_trailer','ply_program.py',749),
  ('trailer -> LSQB subscriptlist RSQB','trailer',3,'p_trailer','ply_program.py',750),
  ('trailer -> DOT NAME','trailer',2,'p_trailer','ply_program.py',751),
  ('subscriptlist -> subscript','subscriptlist',1,'p_subscriptlist','ply_program.py',756),
  ('subscriptlist -> subscript COMMA','subscriptlist',2,'p_subscriptlist','ply_program.py',757),
  ('subscriptlist -> subscript COMMA subscriptlist','subscriptlist',3,'p_subscriptlist','ply_program.py',758),
  ('subscript -> DOT DOT DOT','subscript',3,'p_subscript','ply_program.py',763),
  ('subscript -> test','subscript',1,'p_subscript','ply_program.py',764),
  ('subscript -> test COLON test sliceop','subscript',4,'p_subscript','ply_program.py',765),
  ('subscript -> COLON test sliceop','subscript',3,'p_subscript','ply_program.py',766),
  ('subscript -> test COLON sliceop','subscript',3,'p_subscript','ply_program.py',767),
  ('subscript -> test COLON test','subscript',3,'p_subscript','ply_program.py',768),
  ('subscript -> test COLON','subscript',2,'p_subscript','ply_program.py',769),
  ('subscript -> COLON test','subscript',2,'p_subscript','ply_program.py',770),
  ('subscript -> COLON sliceop','subscript',2,'p_subscript','ply_program.py',771),
  ('subscript -> COLON','subscript',1,'p_subscript','ply_program.py',772),
  ('sliceop -> COLON','sliceop',1,'p_sliceop','ply_program.py',777),
  ('sliceop -> COLON test','sliceop',2,'p_sliceop','ply_program.py',778),
  ('exprlist -> expr','exprlist',1,'p_exprlist','ply_program.py',783),
  ('exprlist -> expr COMMA','exprlist',2,'p_exprlist','ply_program.py',784),
  ('exprlist -> expr COMMA exprlist','exprlist',3,'p_exprlist','ply_program.py',785),
  ('testlist -> test','testlist',1,'p_testlist','ply_program.py',790),
  ('testlist -> test COMMA','testlist',2,'p_testlist','ply_program.py',791),
  ('testlist -> test COMMA testlist','testlist',3,'p_testlist','ply_program.py',792),
  ('dictorsetmaker -> testcolonlist','dictorsetmaker',1,'p_dictorsetmaker','ply_program.py',797),
  ('dictorsetmaker -> testlist','dictorsetmaker',1,'p_dictorsetmaker','ply_program.py',798),
  ('testcolonlist -> test COLON test','testcolonlist',3,'p_testcolonlist','ply_program.py',803),
  ('testcolonlist -> test COLON test COMMA','testcolonlist',4,'p_testcolonlist','ply_program.py',804),
  ('testcolonlist -> test COLON test COMMA testcolonlist','testcolonlist',5,'p_testcolonlist','ply_program.py',805),
  ('classdef -> CLASS NAME COLON suite','classdef',4,'p_classdef','ply_program.py',810),
  ('classdef -> CLASS NAME LPAREN RPAREN COLON suite','classdef',6,'p_classdef','ply_program.py',811),
  ('classdef -> CLASS NAME LPAREN testlist RPAREN COLON suite','classdef',7,'p_classdef','ply_program.py',812),
  ('arglist -> argument','arglist',1,'p_arglist','ply_program.py',817),
  ('arglist -> argument COMMA','arglist',2,'p_arglist','ply_program.py',818),
  ('arglist -> argument COMMA arglist','arglist',3,'p_arglist','ply_program.py',819),
  ('argument -> test','argument',1,'p_argument','ply_program.py',824),
  ('argument -> test EQUAL test','argument',3,'p_argument','ply_program.py',825),
  ('testlist1 -> test','testlist1',1,'p_testlist1','ply_program.py',830),
  ('testlist1 -> test COMMA testlist1','testlist1',3,'p_testlist1','ply_program.py',831),
  ('stmts -> stmts stmt','stmts',2,'p_stmts','ply_program.py',836),
  ('stmts -> stmt','stmts',1,'p_stmts','ply_program.py',837),
  ('empty -> <empty>','empty',0,'p_empty','ply_program.py',845),
]
