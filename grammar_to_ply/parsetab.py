
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

<<<<<<< HEAD
_lr_signature = 'COLON COMMA DEF DIVIDE ELIF ELSE EQ EQUALS FALSE FOR GR GREQ IDENTIFIER IF IN LE LEEQ LPAREN LSQUARE MINUS MODULUS MULTIPLY NONE NUMBER PASS PLUS RETURN RPAREN RSQUARE STRING TAB TRUEstart : constructconstruct : funcdef construct \n\t| statement construct \n\t| statement \n\t| funcdefstatement_suite : TAB statement  \n\t|  TAB statement statement_suitestatement : return_stmt \n\t| assignment_stmt \n\t| func_call_stmt \n\t| loop_stmt \n\t| if_stmt \n\t| PASSloop_stmt : for_loopfor_loop : FOR IDENTIFIER IN IDENTIFIER COLON statement_suiteif_stmt : IF LPAREN arithmetic_expr RPAREN COLON statement_suite \n\t| IF LPAREN arithmetic_expr RPAREN COLON statement_suite elif_stmtelif_stmt : ELIF LPAREN arithmetic_expr RPAREN COLON statement_suite else_stmt \n\t| else_stmtelse_stmt : ELSE COLON statement_suitefuncdef : DEF IDENTIFIER LPAREN parameters RPAREN COLON statement_suiteparameters : atom \n\t| atom COMMA parameters \n\t| emptyfunc_call_stmt : IDENTIFIER LPAREN parameters RPARENassignment_stmt : IDENTIFIER EQUALS expressionexpression : arithmetic_expr \n\t| func_call_stmtarithmetic_expr : arithmetic_expr arithmetic_op arithmetic_expr \n\t| atomreturn_stmt : RETURN expressionatom : IDENTIFIER \n\t| literalliteral : NUMBER \n\t| NONE \n\t| TRUE \n\t| FALSE \n\t| STRING \n\t| listlist : LSQUARE parameters  RSQUAREarithmetic_op : PLUS \n\t| MINUS \n\t| MODULUS \n\t| DIVIDE \n\t| MULTIPLY \n\t| GR \n\t| LE \n\t| EQ \n\t| GREQ \n\t| LEEQempty :'
    
_lr_action_items = {'DEF':([0,3,4,7,8,9,10,11,12,14,22,23,24,25,26,27,28,29,30,31,32,33,38,39,58,60,61,69,71,72,73,75,77,80,82,86,],[5,5,5,-8,-9,-10,-11,-12,-13,-14,-31,-27,-28,-30,-32,-33,-34,-35,-36,-37,-38,-39,-26,-32,-25,-29,-40,-16,-15,-21,-17,-19,-6,-7,-20,-18,]),'PASS':([0,3,4,7,8,9,10,11,12,14,22,23,24,25,26,27,28,29,30,31,32,33,38,39,58,60,61,69,70,71,72,73,75,77,80,82,86,],[12,12,12,-8,-9,-10,-11,-12,-13,-14,-31,-27,-28,-30,-32,-33,-34,-35,-36,-37,-38,-39,-26,-32,-25,-29,-40,-16,12,-15,-21,-17,-19,-6,-7,-20,-18,]),'RETURN':([0,3,4,7,8,9,10,11,12,14,22,23,24,25,26,27,28,29,30,31,32,33,38,39,58,60,61,69,70,71,72,73,75,77,80,82,86,],[13,13,13,-8,-9,-10,-11,-12,-13,-14,-31,-27,-28,-30,-32,-33,-34,-35,-36,-37,-38,-39,-26,-32,-25,-29,-40,-16,13,-15,-21,-17,-19,-6,-7,-20,-18,]),'IDENTIFIER':([0,3,4,5,7,8,9,10,11,12,13,14,16,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,37,38,39,43,44,45,46,47,48,49,50,51,52,53,56,58,59,60,61,69,70,71,72,73,75,77,78,80,82,86,],[6,6,6,19,-8,-9,-10,-11,-12,-13,26,-14,36,26,39,-31,-27,-28,-30,-32,-33,-34,-35,-36,-37,-38,-39,39,39,39,-26,-32,39,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,63,-25,39,-29,-40,-16,6,-15,-21,-17,-19,-6,39,-7,-20,-18,]),'IF':([0,3,4,7,8,9,10,11,12,14,22,23,24,25,26,27,28,29,30,31,32,33,38,39,58,60,61,69,70,71,72,73,75,77,80,82,86,],[15,15,15,-8,-9,-10,-11,-12,-13,-14,-31,-27,-28,-30,-32,-33,-34,-35,-36,-37,-38,-39,-26,-32,-25,-29,-40,-16,15,-15,-21,-17,-19,-6,-7,-20,-18,]),'FOR':([0,3,4,7,8,9,10,11,12,14,22,23,24,25,26,27,28,29,30,31,32,33,38,39,58,60,61,69,70,71,72,73,75,77,80,82,86,],[16,16,16,-8,-9,-10,-11,-12,-13,-14,-31,-27,-28,-30,-32,-33,-34,-35,-36,-37,-38,-39,-26,-32,-25,-29,-40,-16,16,-15,-21,-17,-19,-6,-7,-20,-18,]),'$end':([1,2,3,4,7,8,9,10,11,12,14,17,18,22,23,24,25,26,27,28,29,30,31,32,33,38,39,58,60,61,69,71,72,73,75,77,80,82,86,],[0,-1,-5,-4,-8,-9,-10,-11,-12,-13,-14,-2,-3,-31,-27,-28,-30,-32,-33,-34,-35,-36,-37,-38,-39,-26,-32,-25,-29,-40,-16,-15,-21,-17,-19,-6,-7,-20,-18,]),'EQUALS':([6,],[20,]),'LPAREN':([6,15,19,26,74,],[21,35,37,21,78,]),'TAB':([7,8,9,10,11,12,14,22,23,24,25,26,27,28,29,30,31,32,33,38,39,58,60,61,66,67,68,69,71,73,75,77,79,80,82,84,86,],[-8,-9,-10,-11,-12,-13,-14,-31,-27,-28,-30,-32,-33,-34,-35,-36,-37,-38,-39,-26,-32,-25,-29,-40,70,70,70,-16,-15,-17,-19,70,70,-7,-20,70,-18,]),'ELIF':([7,8,9,10,11,12,14,22,23,24,25,26,27,28,29,30,31,32,33,38,39,58,60,61,69,71,73,75,77,80,82,86,],[-8,-9,-10,-11,-12,-13,-14,-31,-27,-28,-30,-32,-33,-34,-35,-36,-37,-38,-39,-26,-32,-25,-29,-40,74,-15,-17,-19,-6,-7,-20,-18,]),'ELSE':([7,8,9,10,11,12,14,22,23,24,25,26,27,28,29,30,31,32,33,38,39,58,60,61,69,71,73,75,77,80,82,85,86,],[-8,-9,-10,-11,-12,-13,-14,-31,-27,-28,-30,-32,-33,-34,-35,-36,-37,-38,-39,-26,-32,-25,-29,-40,76,-15,-17,-19,-6,-7,-20,76,-18,]),'NUMBER':([13,20,21,34,35,37,43,44,45,46,47,48,49,50,51,52,53,59,78,],[28,28,28,28,28,28,28,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,28,28,]),'NONE':([13,20,21,34,35,37,43,44,45,46,47,48,49,50,51,52,53,59,78,],[29,29,29,29,29,29,29,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,29,29,]),'TRUE':([13,20,21,34,35,37,43,44,45,46,47,48,49,50,51,52,53,59,78,],[30,30,30,30,30,30,30,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,30,30,]),'FALSE':([13,20,21,34,35,37,43,44,45,46,47,48,49,50,51,52,53,59,78,],[31,31,31,31,31,31,31,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,31,31,]),'STRING':([13,20,21,34,35,37,43,44,45,46,47,48,49,50,51,52,53,59,78,],[32,32,32,32,32,32,32,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,32,32,]),'LSQUARE':([13,20,21,34,35,37,43,44,45,46,47,48,49,50,51,52,53,59,78,],[34,34,34,34,34,34,34,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,34,34,]),'RPAREN':([21,25,27,28,29,30,31,32,33,37,39,40,41,42,55,57,59,60,61,65,81,],[-51,-30,-33,-34,-35,-36,-37,-38,-39,-51,-32,58,-22,-24,62,64,-51,-29,-40,-23,83,]),'PLUS':([23,25,26,27,28,29,30,31,32,33,39,55,60,61,81,],[44,-30,-32,-33,-34,-35,-36,-37,-38,-39,-32,44,44,-40,44,]),'MINUS':([23,25,26,27,28,29,30,31,32,33,39,55,60,61,81,],[45,-30,-32,-33,-34,-35,-36,-37,-38,-39,-32,45,45,-40,45,]),'MODULUS':([23,25,26,27,28,29,30,31,32,33,39,55,60,61,81,],[46,-30,-32,-33,-34,-35,-36,-37,-38,-39,-32,46,46,-40,46,]),'DIVIDE':([23,25,26,27,28,29,30,31,32,33,39,55,60,61,81,],[47,-30,-32,-33,-34,-35,-36,-37,-38,-39,-32,47,47,-40,47,]),'MULTIPLY':([23,25,26,27,28,29,30,31,32,33,39,55,60,61,81,],[48,-30,-32,-33,-34,-35,-36,-37,-38,-39,-32,48,48,-40,48,]),'GR':([23,25,26,27,28,29,30,31,32,33,39,55,60,61,81,],[49,-30,-32,-33,-34,-35,-36,-37,-38,-39,-32,49,49,-40,49,]),'LE':([23,25,26,27,28,29,30,31,32,33,39,55,60,61,81,],[50,-30,-32,-33,-34,-35,-36,-37,-38,-39,-32,50,50,-40,50,]),'EQ':([23,25,26,27,28,29,30,31,32,33,39,55,60,61,81,],[51,-30,-32,-33,-34,-35,-36,-37,-38,-39,-32,51,51,-40,51,]),'GREQ':([23,25,26,27,28,29,30,31,32,33,39,55,60,61,81,],[52,-30,-32,-33,-34,-35,-36,-37,-38,-39,-32,52,52,-40,52,]),'LEEQ':([23,25,26,27,28,29,30,31,32,33,39,55,60,61,81,],[53,-30,-32,-33,-34,-35,-36,-37,-38,-39,-32,53,53,-40,53,]),'COMMA':([27,28,29,30,31,32,33,39,41,61,],[-33,-34,-35,-36,-37,-38,-39,-32,59,-40,]),'RSQUARE':([27,28,29,30,31,32,33,34,39,41,42,54,59,61,65,],[-33,-34,-35,-36,-37,-38,-39,-51,-32,-22,-24,61,-51,-40,-23,]),'IN':([36,],[56,]),'COLON':([62,63,64,76,83,],[66,67,68,79,84,]),}
=======
_lr_signature = 'ADD_ASSIGN ALIGNAS ALIGNOF AMP AND_ASSIGN AND_OP ATOMIC AUTO BOOL BREAK CASE CHAR COLON COMMA COMPLEX CONST CONTINUE DEC_OP DEFAULT DIVIDES DIV_ASSIGN DO DOT DOUBLE ELLIPSIS ELSE ENUM EQUALS EQ_OP EXTERN FLOAT FOR FUNC_NAME F_CONSTANT GENERIC GE_OP GOTO GT_OP IDENTIFIER IF IMAGINARY INC_OP INT I_CONSTANT LEFT_ASSIGN LEFT_OP LE_OP LFPAREN LONG LPAREN LSQUARE LT_OP MINUS MODULUS MOD_ASSIGN MUL_ASSIGN NE_OP NORETURN NOT NUMBER OR OR_ASSIGN OR_OP PLUS PTR_OP QMARK REGISTER RETURN RFPAREN RIGHT_ASSIGN RIGHT_OP RPAREN RSQUARE SCOLON SHORT SIGNED SIZEOF STATIC STATIC_ASSERT STRING_LITERAL STRUCT SUB_ASSIGN SWITCH TAB TER THREAD_LOCAL TILDE TIMES TYPEDEF UNION UNSIGNED VOID VOLATILE WHILE XOR XOR_ASSIGNstart : translation_unittranslation_unit : external_declaration\n\t| translation_unit external_declarationexternal_declaration : function_definition\n\t| declarationfunction_definition : declaration_specifiers declarator declaration_list compound_statement\n\t| declaration_specifiers declarator compound_statementdeclaration_list : declaration\n\t| declaration_list declarationprimary_expression : IDENTIFIER\n\t| constant \n\t| string \n\t| LPAREN expression RPAREN\n\t| generic_selection \n\t| NUMBERconstant : I_CONSTANT \n\t| F_CONSTANTenumeration_constant : IDENTIFIERstring : STRING_LITERAL\n\t| FUNC_NAMEgeneric_selection : GENERIC LPAREN assignment_expression COMMA generic_assoc_list RPARENgeneric_assoc_list : generic_association\n\t| generic_assoc_list COMMA generic_associationgeneric_association : type_name COLON assignment_expression\n\t| DEFAULT COLON assignment_expressionpostfix_expression : primary_expression\n\t| postfix_expression RSQUARE expression LSQUARE\n\t| postfix_expression LPAREN RPAREN\n\t| postfix_expression LPAREN argument_expression_list RPAREN\n\t| postfix_expression DOT IDENTIFIER\n\t| postfix_expression PTR_OP IDENTIFIER\n\t| postfix_expression INC_OP\n\t| postfix_expression DEC_OP\n\t| LPAREN type_name RPAREN LFPAREN initializer_list RFPAREN LPAREN type_name RPAREN LFPAREN initializer_list COMMA RFPARENargument_expression_list : assignment_expression\n\t| argument_expression_list COMMA assignment_expressionunary_expression : postfix_expression\n\t| INC_OP unary_expression\n\t| DEC_OP unary_expression\n\t| unary_operator cast_expression\n\t| SIZEOF unary_expression\n\t| SIZEOF LPAREN type_name RPAREN\n\t| ALIGNOF LPAREN type_name RPARENunary_operator : AMP\n\t| TIMES\n\t| PLUS\n\t| MINUS\n\t| TILDE\n\t| NOTcast_expression : unary_expression\n\t| LPAREN type_name RPAREN cast_expressionmultiplicative_expression : cast_expression\n\t| multiplicative_expression TIMES cast_expression\n\t| multiplicative_expression DIVIDES cast_expression\n\t| multiplicative_expression MODULUS cast_expressionadditive_expression : multiplicative_expression\n\t| additive_expression PLUS multiplicative_expression\n\t| additive_expression MINUS multiplicative_expressionshift_expression : additive_expression\n\t| shift_expression LEFT_OP additive_expression\n\t| shift_expression RIGHT_OP additive_expressionrelational_expression : shift_expression\n\t| relational_expression LT_OP shift_expression\n\t| relational_expression GT_OP shift_expression\n\t| relational_expression LE_OP shift_expression\n\t| relational_expression GE_OP shift_expressionequality_expression : relational_expression\n\t| equality_expression EQ_OP relational_expression\n\t| equality_expression NE_OP relational_expressionand_expression : equality_expression\n\t| and_expression AMP equality_expressionexclusive_or_expression : and_expression\n\t| exclusive_or_expression XOR and_expressioninclusive_or_expression : exclusive_or_expression\n\t| inclusive_or_expression OR exclusive_or_expressionlogical_and_expression : inclusive_or_expression\n\t| logical_and_expression AND_OP inclusive_or_expressionlogical_or_expression : logical_and_expression\n\t| logical_or_expression OR_OP logical_and_expressionconditional_expression : logical_or_expression\n\t| logical_or_expression QMARK expression COLON conditional_expressionassignment_expression : conditional_expression\n\t| unary_expression assignment_operator assignment_expressionassignment_operator : EQUALS\n\t| MUL_ASSIGN\n\t| DIV_ASSIGN\n\t| MOD_ASSIGN\n\t| ADD_ASSIGN\n\t| SUB_ASSIGN\n\t| LEFT_ASSIGN\n\t| RIGHT_ASSIGN\n\t| AND_ASSIGN\n\t| XOR_ASSIGN\n\t| OR_ASSIGNexpression : assignment_expression\n\t| expression COMMA assignment_expressionconstant_expression : conditional_expressiondeclaration : declaration_specifiers SCOLON\n\t| declaration_specifiers init_declarator_list SCOLON\n\t| static_assert_declarationdeclaration_specifiers : storage_class_specifier declaration_specifiers\n\t| storage_class_specifier\n\t| type_specifier declaration_specifiers\n\t| type_specifier\n\t| type_qualifier declaration_specifiers\n\t| type_qualifier\n\t| function_specifier declaration_specifiers\n\t| function_specifier\n\t| alignment_specifier declaration_specifiers\n\t| alignment_specifierinit_declarator_list : init_declarator\n\t| init_declarator_list COMMA init_declaratorinit_declarator : declarator EQUALS initializer\n\t| declaratorstorage_class_specifier : TYPEDEF\n\t| EXTERN\n\t| STATIC\n\t| THREAD_LOCAL\n\t| AUTO\n\t| REGISTERtype_specifier : VOID\n\t| CHAR\n\t| SHORT\n\t| INT\n\t| LONG\n\t| FLOAT\n\t| DOUBLE\n\t| SIGNED\n\t| UNSIGNED\n\t| BOOL\n\t| COMPLEX\n\t| IMAGINARY\n\t| atomic_type_specifier\n\t| struct_or_union_specifier\n\t| enum_specifierstruct_or_union_specifier : struct_or_union LFPAREN struct_declaration_list RFPAREN\n\t| struct_or_union IDENTIFIER LFPAREN struct_declaration_list RFPAREN\n\t| struct_or_union IDENTIFIERstruct_or_union : STRUCT\n\t| UNIONstruct_declaration_list : struct_declaration\n\t| struct_declaration_list struct_declarationstruct_declaration : specifier_qualifier_list SCOLON\n\t| specifier_qualifier_list struct_declarator_list SCOLON\n\t| static_assert_declarationspecifier_qualifier_list : type_specifier specifier_qualifier_list\n\t| type_specifier\n\t| type_qualifier specifier_qualifier_list\n\t| type_qualifierstruct_declarator_list : struct_declarator\n\t| struct_declarator_list COMMA struct_declaratorstruct_declarator : COLON constant_expression\n\t| declarator COLON constant_expression\n\t| declaratorenum_specifier : ENUM LFPAREN enumerator_list RFPAREN\n\t| ENUM LFPAREN enumerator_list COMMA RFPAREN\n\t| ENUM IDENTIFIER LFPAREN enumerator_list RFPAREN\n\t| ENUM IDENTIFIER LFPAREN enumerator_list COMMA RFPAREN\n\t| ENUM IDENTIFIERenumerator_list : enumerator\n\t| enumerator_list COMMA enumeratorenumerator : enumeration_constant EQUALS constant_expression\n\t| enumeration_constantatomic_type_specifier : ATOMIC LPAREN type_name RPARENtype_qualifier : CONST\n\t| VOLATILE\n\t| ATOMICfunction_specifier : NORETURNalignment_specifier : ALIGNAS LPAREN type_name RPAREN\n\t| ALIGNAS LPAREN constant_expression RPARENdeclarator : pointer direct_declarator\n\t| direct_declaratordirect_declarator : IDENTIFIER \n\t| LPAREN declarator RPAREN \n\t| direct_declarator RSQUARE LSQUARE \n\t| direct_declarator RSQUARE TIMES LSQUARE \n\t| direct_declarator RSQUARE STATIC type_qualifier_list assignment_expression LSQUARE \n\t| direct_declarator RSQUARE STATIC assignment_expression LSQUARE \n\t| direct_declarator RSQUARE type_qualifier_list TIMES LSQUARE\n\t| direct_declarator RSQUARE type_qualifier_list STATIC assignment_expression LSQUARE \n\t| direct_declarator RSQUARE type_qualifier_list assignment_expression LSQUARE \n\t| direct_declarator RSQUARE type_qualifier_list LSQUARE\n\t| direct_declarator RSQUARE assignment_expression LSQUARE \n\t| direct_declarator LPAREN parameter_type_list RPAREN \n\t| direct_declarator LPAREN RPAREN \n\t| direct_declarator LPAREN identifier_list RPARENpointer : TIMES type_qualifier_list pointer\n\t| TIMES type_qualifier_list\n\t| TIMES pointer\n\t| TIMEStype_qualifier_list : type_qualifier\n\t| type_qualifier_list type_qualifierparameter_type_list : parameter_list COMMA ELLIPSIS\n\t| parameter_listparameter_list : parameter_declaration\n\t| parameter_list COMMA parameter_declarationparameter_declaration : declaration_specifiers declarator\n\t| declaration_specifiers abstract_declarator\n\t| declaration_specifiersidentifier_list : IDENTIFIER\n\t| identifier_list COMMA IDENTIFIERtype_name : specifier_qualifier_list abstract_declarator\n\t| specifier_qualifier_listabstract_declarator : pointer direct_abstract_declarator\n\t| pointer\n\t| direct_abstract_declaratordirect_abstract_declarator : LPAREN abstract_declarator RPAREN\n\t| RSQUARE LSQUARE\n\t| RSQUARE TIMES LSQUARE\n\t| RSQUARE STATIC type_qualifier_list assignment_expression LSQUARE\n\t| RSQUARE STATIC assignment_expression LSQUARE\n\t| RSQUARE type_qualifier_list STATIC assignment_expression LSQUARE\n\t| RSQUARE type_qualifier_list assignment_expression LSQUARE\n\t| RSQUARE type_qualifier_list LSQUARE \n\t| RSQUARE assignment_expression LSQUARE\n\t| direct_abstract_declarator RSQUARE LSQUARE\n\t| direct_abstract_declarator RSQUARE TIMES LSQUARE\n\t| direct_abstract_declarator RSQUARE STATIC type_qualifier_list assignment_expression LSQUARE\n\t| direct_abstract_declarator RSQUARE STATIC assignment_expression LSQUARE\n\t| direct_abstract_declarator RSQUARE type_qualifier_list assignment_expression LSQUARE\n\t| direct_abstract_declarator RSQUARE type_qualifier_list STATIC assignment_expression LSQUARE\n\t| direct_abstract_declarator RSQUARE type_qualifier_list LSQUARE\n\t| direct_abstract_declarator RSQUARE assignment_expression LSQUARE\n\t| LPAREN RPAREN\n\t| LPAREN parameter_type_list RPAREN\n\t| direct_abstract_declarator LPAREN RPAREN\n\t| direct_abstract_declarator LPAREN parameter_type_list RPARENinitializer : LFPAREN initializer_list RFPAREN\n\t| LFPAREN initializer_list COMMA RFPAREN\n\t| assignment_expressioninitializer_list : designation initializer\n\t| initializer\n\t| initializer_list COMMA designation initializer\n\t| initializer_list COMMA initializerdesignation : designator_list EQUALSdesignator_list : designator\n\t| designator_list designatordesignator : RSQUARE constant_expression LSQUARE\n\t| DOT IDENTIFIERstatic_assert_declaration : STATIC_ASSERT LPAREN constant_expression COMMA STRING_LITERAL RPAREN SCOLONstatement : labeled_statement\n\t| compound_statement\n\t| expression_statement\n\t| selection_statement\n\t| iteration_statement\n\t| jump_statementlabeled_statement : IDENTIFIER COLON statement\n\t| CASE constant_expression COLON statement \n\t| DEFAULT COLON statementcompound_statement : LFPAREN RFPAREN\n\t| LFPAREN  block_item_list RFPARENblock_item_list : block_item\n\t| block_item_list block_itemblock_item : declaration\n\t| statementexpression_statement : SCOLON\n\t| expression SCOLONselection_statement : IF LPAREN expression RPAREN statement ELSE statement\n\t| IF LPAREN expression RPAREN statement\n\t| SWITCH LPAREN expression RPAREN statementiteration_statement : WHILE LPAREN expression RPAREN statement\n\t| DO statement WHILE LPAREN expression RPAREN SCOLON\n\t| FOR LPAREN expression_statement expression_statement RPAREN statement\n\t| FOR LPAREN expression_statement expression_statement expression RPAREN statement\n\t| FOR LPAREN declaration expression_statement RPAREN statement\n\t| FOR LPAREN declaration expression_statement expression RPAREN statementjump_statement : GOTO IDENTIFIER SCOLON\n\t| CONTINUE SCOLON\n\t| BREAK SCOLON\n\t| RETURN SCOLON\n\t| RETURN expression SCOLONempty :'
    
_lr_action_items = {'STATIC_ASSERT':([0,2,3,4,5,7,44,45,46,49,52,62,67,68,70,71,72,74,126,127,129,130,137,138,145,146,147,148,149,150,151,152,153,154,155,156,172,178,186,234,235,240,265,266,270,276,278,279,280,282,286,289,290,291,341,360,362,370,371,373,374,376,414,421,422,424,444,445,446,466,468,476,477,478,479,],[13,13,-2,-4,-5,-100,-3,13,-98,-172,-173,13,13,-7,-8,13,-99,-171,13,-141,-145,13,-6,-9,-250,13,-252,-254,-255,-256,-241,-242,-243,-244,-245,-246,-175,-185,-174,-142,-143,13,-251,-253,-257,13,-268,-269,-270,-176,-182,-183,-184,-186,-144,-247,-249,-267,-271,-178,-179,-181,-248,-177,-180,-240,-259,-260,-261,-263,-265,-258,-262,-264,-266,]),'TYPEDEF':([0,2,3,4,5,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,44,45,46,49,52,63,65,67,68,70,71,72,74,76,137,138,145,146,147,148,149,150,151,152,153,154,155,156,172,178,186,223,227,231,232,233,241,265,266,270,276,278,279,280,282,286,289,290,291,293,297,332,345,346,349,360,362,370,371,373,374,376,409,414,421,422,424,444,445,446,466,468,476,477,478,479,],[14,14,-2,-4,-5,-100,14,14,14,14,14,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-165,-166,-167,-168,-3,14,-98,-172,-173,-138,-159,14,-7,-8,14,-99,-171,14,-6,-9,-250,14,-252,-254,-255,-256,-241,-242,-243,-244,-245,-246,-175,-185,-174,-164,14,-169,-170,-136,-155,-251,-253,-257,14,-268,-269,-270,-176,-182,-183,-184,-186,14,14,14,-137,-156,-157,-247,-249,-267,-271,-178,-179,-181,-158,-248,-177,-180,-240,-259,-260,-261,-263,-265,-258,-262,-264,-266,]),'EXTERN':([0,2,3,4,5,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,44,45,46,49,52,63,65,67,68,70,71,72,74,76,137,138,145,146,147,148,149,150,151,152,153,154,155,156,172,178,186,223,227,231,232,233,241,265,266,270,276,278,279,280,282,286,289,290,291,293,297,332,345,346,349,360,362,370,371,373,374,376,409,414,421,422,424,444,445,446,466,468,476,477,478,479,],[15,15,-2,-4,-5,-100,15,15,15,15,15,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-165,-166,-167,-168,-3,15,-98,-172,-173,-138,-159,15,-7,-8,15,-99,-171,15,-6,-9,-250,15,-252,-254,-255,-256,-241,-242,-243,-244,-245,-246,-175,-185,-174,-164,15,-169,-170,-136,-155,-251,-253,-257,15,-268,-269,-270,-176,-182,-183,-184,-186,15,15,15,-137,-156,-157,-247,-249,-267,-271,-178,-179,-181,-158,-248,-177,-180,-240,-259,-260,-261,-263,-265,-258,-262,-264,-266,]),'STATIC':([0,2,3,4,5,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,44,45,46,49,52,63,65,67,68,70,71,72,74,75,76,79,80,137,138,145,146,147,148,149,150,151,152,153,154,155,156,172,175,178,185,186,223,227,228,231,232,233,241,265,266,270,276,278,279,280,282,286,289,290,291,293,297,331,332,339,345,346,349,360,362,370,371,373,374,376,394,409,414,421,422,424,444,445,446,466,468,476,477,478,479,],[16,16,-2,-4,-5,-100,16,16,16,16,16,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-165,-166,-167,-168,-3,16,-98,-172,-173,-138,-159,16,-7,-8,16,-99,-171,174,16,-191,-167,-6,-9,-250,16,-252,-254,-255,-256,-241,-242,-243,-244,-245,-246,-175,287,-185,-192,-174,-164,16,338,-169,-170,-136,-155,-251,-253,-257,16,-268,-269,-270,-176,-182,-183,-184,-186,16,16,393,16,403,-137,-156,-157,-247,-249,-267,-271,-178,-179,-181,436,-158,-248,-177,-180,-240,-259,-260,-261,-263,-265,-258,-262,-264,-266,]),'THREAD_LOCAL':([0,2,3,4,5,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,44,45,46,49,52,63,65,67,68,70,71,72,74,76,137,138,145,146,147,148,149,150,151,152,153,154,155,156,172,178,186,223,227,231,232,233,241,265,266,270,276,278,279,280,282,286,289,290,291,293,297,332,345,346,349,360,362,370,371,373,374,376,409,414,421,422,424,444,445,446,466,468,476,477,478,479,],[17,17,-2,-4,-5,-100,17,17,17,17,17,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-165,-166,-167,-168,-3,17,-98,-172,-173,-138,-159,17,-7,-8,17,-99,-171,17,-6,-9,-250,17,-252,-254,-255,-256,-241,-242,-243,-244,-245,-246,-175,-185,-174,-164,17,-169,-170,-136,-155,-251,-253,-257,17,-268,-269,-270,-176,-182,-183,-184,-186,17,17,17,-137,-156,-157,-247,-249,-267,-271,-178,-179,-181,-158,-248,-177,-180,-240,-259,-260,-261,-263,-265,-258,-262,-264,-266,]),'AUTO':([0,2,3,4,5,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,44,45,46,49,52,63,65,67,68,70,71,72,74,76,137,138,145,146,147,148,149,150,151,152,153,154,155,156,172,178,186,223,227,231,232,233,241,265,266,270,276,278,279,280,282,286,289,290,291,293,297,332,345,346,349,360,362,370,371,373,374,376,409,414,421,422,424,444,445,446,466,468,476,477,478,479,],[18,18,-2,-4,-5,-100,18,18,18,18,18,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-165,-166,-167,-168,-3,18,-98,-172,-173,-138,-159,18,-7,-8,18,-99,-171,18,-6,-9,-250,18,-252,-254,-255,-256,-241,-242,-243,-244,-245,-246,-175,-185,-174,-164,18,-169,-170,-136,-155,-251,-253,-257,18,-268,-269,-270,-176,-182,-183,-184,-186,18,18,18,-137,-156,-157,-247,-249,-267,-271,-178,-179,-181,-158,-248,-177,-180,-240,-259,-260,-261,-263,-265,-258,-262,-264,-266,]),'REGISTER':([0,2,3,4,5,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,44,45,46,49,52,63,65,67,68,70,71,72,74,76,137,138,145,146,147,148,149,150,151,152,153,154,155,156,172,178,186,223,227,231,232,233,241,265,266,270,276,278,279,280,282,286,289,290,291,293,297,332,345,346,349,360,362,370,371,373,374,376,409,414,421,422,424,444,445,446,466,468,476,477,478,479,],[19,19,-2,-4,-5,-100,19,19,19,19,19,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-165,-166,-167,-168,-3,19,-98,-172,-173,-138,-159,19,-7,-8,19,-99,-171,19,-6,-9,-250,19,-252,-254,-255,-256,-241,-242,-243,-244,-245,-246,-175,-185,-174,-164,19,-169,-170,-136,-155,-251,-253,-257,19,-268,-269,-270,-176,-182,-183,-184,-186,19,19,19,-137,-156,-157,-247,-249,-267,-271,-178,-179,-181,-158,-248,-177,-180,-240,-259,-260,-261,-263,-265,-258,-262,-264,-266,]),'VOID':([0,2,3,4,5,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,44,45,46,49,52,60,61,62,63,65,67,68,70,71,72,74,76,82,122,123,126,127,129,130,137,138,144,145,146,147,148,149,150,151,152,153,154,155,156,172,178,186,216,220,221,223,227,231,232,233,234,235,240,241,265,266,270,276,278,279,280,282,286,289,290,291,293,297,332,341,345,346,349,360,362,370,371,373,374,376,390,409,414,421,422,424,444,445,446,454,466,468,470,476,477,478,479,],[20,20,-2,-4,-5,-100,20,20,20,20,20,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-165,-166,-167,-168,-3,20,-98,-172,-173,20,20,20,-138,-159,20,-7,-8,20,-99,-171,20,20,20,20,20,-141,-145,20,-6,-9,20,-250,20,-252,-254,-255,-256,-241,-242,-243,-244,-245,-246,-175,-185,-174,20,20,20,-164,20,-169,-170,-136,-142,-143,20,-155,-251,-253,-257,20,-268,-269,-270,-176,-182,-183,-184,-186,20,20,20,-144,-137,-156,-157,-247,-249,-267,-271,-178,-179,-181,20,-158,-248,-177,-180,-240,-259,-260,-261,20,-263,-265,20,-258,-262,-264,-266,]),'CHAR':([0,2,3,4,5,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,44,45,46,49,52,60,61,62,63,65,67,68,70,71,72,74,76,82,122,123,126,127,129,130,137,138,144,145,146,147,148,149,150,151,152,153,154,155,156,172,178,186,216,220,221,223,227,231,232,233,234,235,240,241,265,266,270,276,278,279,280,282,286,289,290,291,293,297,332,341,345,346,349,360,362,370,371,373,374,376,390,409,414,421,422,424,444,445,446,454,466,468,470,476,477,478,479,],[21,21,-2,-4,-5,-100,21,21,21,21,21,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-165,-166,-167,-168,-3,21,-98,-172,-173,21,21,21,-138,-159,21,-7,-8,21,-99,-171,21,21,21,21,21,-141,-145,21,-6,-9,21,-250,21,-252,-254,-255,-256,-241,-242,-243,-244,-245,-246,-175,-185,-174,21,21,21,-164,21,-169,-170,-136,-142,-143,21,-155,-251,-253,-257,21,-268,-269,-270,-176,-182,-183,-184,-186,21,21,21,-144,-137,-156,-157,-247,-249,-267,-271,-178,-179,-181,21,-158,-248,-177,-180,-240,-259,-260,-261,21,-263,-265,21,-258,-262,-264,-266,]),'SHORT':([0,2,3,4,5,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,44,45,46,49,52,60,61,62,63,65,67,68,70,71,72,74,76,82,122,123,126,127,129,130,137,138,144,145,146,147,148,149,150,151,152,153,154,155,156,172,178,186,216,220,221,223,227,231,232,233,234,235,240,241,265,266,270,276,278,279,280,282,286,289,290,291,293,297,332,341,345,346,349,360,362,370,371,373,374,376,390,409,414,421,422,424,444,445,446,454,466,468,470,476,477,478,479,],[22,22,-2,-4,-5,-100,22,22,22,22,22,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-165,-166,-167,-168,-3,22,-98,-172,-173,22,22,22,-138,-159,22,-7,-8,22,-99,-171,22,22,22,22,22,-141,-145,22,-6,-9,22,-250,22,-252,-254,-255,-256,-241,-242,-243,-244,-245,-246,-175,-185,-174,22,22,22,-164,22,-169,-170,-136,-142,-143,22,-155,-251,-253,-257,22,-268,-269,-270,-176,-182,-183,-184,-186,22,22,22,-144,-137,-156,-157,-247,-249,-267,-271,-178,-179,-181,22,-158,-248,-177,-180,-240,-259,-260,-261,22,-263,-265,22,-258,-262,-264,-266,]),'INT':([0,2,3,4,5,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,44,45,46,49,52,60,61,62,63,65,67,68,70,71,72,74,76,82,122,123,126,127,129,130,137,138,144,145,146,147,148,149,150,151,152,153,154,155,156,172,178,186,216,220,221,223,227,231,232,233,234,235,240,241,265,266,270,276,278,279,280,282,286,289,290,291,293,297,332,341,345,346,349,360,362,370,371,373,374,376,390,409,414,421,422,424,444,445,446,454,466,468,470,476,477,478,479,],[23,23,-2,-4,-5,-100,23,23,23,23,23,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-165,-166,-167,-168,-3,23,-98,-172,-173,23,23,23,-138,-159,23,-7,-8,23,-99,-171,23,23,23,23,23,-141,-145,23,-6,-9,23,-250,23,-252,-254,-255,-256,-241,-242,-243,-244,-245,-246,-175,-185,-174,23,23,23,-164,23,-169,-170,-136,-142,-143,23,-155,-251,-253,-257,23,-268,-269,-270,-176,-182,-183,-184,-186,23,23,23,-144,-137,-156,-157,-247,-249,-267,-271,-178,-179,-181,23,-158,-248,-177,-180,-240,-259,-260,-261,23,-263,-265,23,-258,-262,-264,-266,]),'LONG':([0,2,3,4,5,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,44,45,46,49,52,60,61,62,63,65,67,68,70,71,72,74,76,82,122,123,126,127,129,130,137,138,144,145,146,147,148,149,150,151,152,153,154,155,156,172,178,186,216,220,221,223,227,231,232,233,234,235,240,241,265,266,270,276,278,279,280,282,286,289,290,291,293,297,332,341,345,346,349,360,362,370,371,373,374,376,390,409,414,421,422,424,444,445,446,454,466,468,470,476,477,478,479,],[24,24,-2,-4,-5,-100,24,24,24,24,24,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-165,-166,-167,-168,-3,24,-98,-172,-173,24,24,24,-138,-159,24,-7,-8,24,-99,-171,24,24,24,24,24,-141,-145,24,-6,-9,24,-250,24,-252,-254,-255,-256,-241,-242,-243,-244,-245,-246,-175,-185,-174,24,24,24,-164,24,-169,-170,-136,-142,-143,24,-155,-251,-253,-257,24,-268,-269,-270,-176,-182,-183,-184,-186,24,24,24,-144,-137,-156,-157,-247,-249,-267,-271,-178,-179,-181,24,-158,-248,-177,-180,-240,-259,-260,-261,24,-263,-265,24,-258,-262,-264,-266,]),'FLOAT':([0,2,3,4,5,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,44,45,46,49,52,60,61,62,63,65,67,68,70,71,72,74,76,82,122,123,126,127,129,130,137,138,144,145,146,147,148,149,150,151,152,153,154,155,156,172,178,186,216,220,221,223,227,231,232,233,234,235,240,241,265,266,270,276,278,279,280,282,286,289,290,291,293,297,332,341,345,346,349,360,362,370,371,373,374,376,390,409,414,421,422,424,444,445,446,454,466,468,470,476,477,478,479,],[25,25,-2,-4,-5,-100,25,25,25,25,25,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-165,-166,-167,-168,-3,25,-98,-172,-173,25,25,25,-138,-159,25,-7,-8,25,-99,-171,25,25,25,25,25,-141,-145,25,-6,-9,25,-250,25,-252,-254,-255,-256,-241,-242,-243,-244,-245,-246,-175,-185,-174,25,25,25,-164,25,-169,-170,-136,-142,-143,25,-155,-251,-253,-257,25,-268,-269,-270,-176,-182,-183,-184,-186,25,25,25,-144,-137,-156,-157,-247,-249,-267,-271,-178,-179,-181,25,-158,-248,-177,-180,-240,-259,-260,-261,25,-263,-265,25,-258,-262,-264,-266,]),'DOUBLE':([0,2,3,4,5,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,44,45,46,49,52,60,61,62,63,65,67,68,70,71,72,74,76,82,122,123,126,127,129,130,137,138,144,145,146,147,148,149,150,151,152,153,154,155,156,172,178,186,216,220,221,223,227,231,232,233,234,235,240,241,265,266,270,276,278,279,280,282,286,289,290,291,293,297,332,341,345,346,349,360,362,370,371,373,374,376,390,409,414,421,422,424,444,445,446,454,466,468,470,476,477,478,479,],[26,26,-2,-4,-5,-100,26,26,26,26,26,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-165,-166,-167,-168,-3,26,-98,-172,-173,26,26,26,-138,-159,26,-7,-8,26,-99,-171,26,26,26,26,26,-141,-145,26,-6,-9,26,-250,26,-252,-254,-255,-256,-241,-242,-243,-244,-245,-246,-175,-185,-174,26,26,26,-164,26,-169,-170,-136,-142,-143,26,-155,-251,-253,-257,26,-268,-269,-270,-176,-182,-183,-184,-186,26,26,26,-144,-137,-156,-157,-247,-249,-267,-271,-178,-179,-181,26,-158,-248,-177,-180,-240,-259,-260,-261,26,-263,-265,26,-258,-262,-264,-266,]),'SIGNED':([0,2,3,4,5,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,44,45,46,49,52,60,61,62,63,65,67,68,70,71,72,74,76,82,122,123,126,127,129,130,137,138,144,145,146,147,148,149,150,151,152,153,154,155,156,172,178,186,216,220,221,223,227,231,232,233,234,235,240,241,265,266,270,276,278,279,280,282,286,289,290,291,293,297,332,341,345,346,349,360,362,370,371,373,374,376,390,409,414,421,422,424,444,445,446,454,466,468,470,476,477,478,479,],[27,27,-2,-4,-5,-100,27,27,27,27,27,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-165,-166,-167,-168,-3,27,-98,-172,-173,27,27,27,-138,-159,27,-7,-8,27,-99,-171,27,27,27,27,27,-141,-145,27,-6,-9,27,-250,27,-252,-254,-255,-256,-241,-242,-243,-244,-245,-246,-175,-185,-174,27,27,27,-164,27,-169,-170,-136,-142,-143,27,-155,-251,-253,-257,27,-268,-269,-270,-176,-182,-183,-184,-186,27,27,27,-144,-137,-156,-157,-247,-249,-267,-271,-178,-179,-181,27,-158,-248,-177,-180,-240,-259,-260,-261,27,-263,-265,27,-258,-262,-264,-266,]),'UNSIGNED':([0,2,3,4,5,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,44,45,46,49,52,60,61,62,63,65,67,68,70,71,72,74,76,82,122,123,126,127,129,130,137,138,144,145,146,147,148,149,150,151,152,153,154,155,156,172,178,186,216,220,221,223,227,231,232,233,234,235,240,241,265,266,270,276,278,279,280,282,286,289,290,291,293,297,332,341,345,346,349,360,362,370,371,373,374,376,390,409,414,421,422,424,444,445,446,454,466,468,470,476,477,478,479,],[28,28,-2,-4,-5,-100,28,28,28,28,28,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-165,-166,-167,-168,-3,28,-98,-172,-173,28,28,28,-138,-159,28,-7,-8,28,-99,-171,28,28,28,28,28,-141,-145,28,-6,-9,28,-250,28,-252,-254,-255,-256,-241,-242,-243,-244,-245,-246,-175,-185,-174,28,28,28,-164,28,-169,-170,-136,-142,-143,28,-155,-251,-253,-257,28,-268,-269,-270,-176,-182,-183,-184,-186,28,28,28,-144,-137,-156,-157,-247,-249,-267,-271,-178,-179,-181,28,-158,-248,-177,-180,-240,-259,-260,-261,28,-263,-265,28,-258,-262,-264,-266,]),'BOOL':([0,2,3,4,5,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,44,45,46,49,52,60,61,62,63,65,67,68,70,71,72,74,76,82,122,123,126,127,129,130,137,138,144,145,146,147,148,149,150,151,152,153,154,155,156,172,178,186,216,220,221,223,227,231,232,233,234,235,240,241,265,266,270,276,278,279,280,282,286,289,290,291,293,297,332,341,345,346,349,360,362,370,371,373,374,376,390,409,414,421,422,424,444,445,446,454,466,468,470,476,477,478,479,],[29,29,-2,-4,-5,-100,29,29,29,29,29,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-165,-166,-167,-168,-3,29,-98,-172,-173,29,29,29,-138,-159,29,-7,-8,29,-99,-171,29,29,29,29,29,-141,-145,29,-6,-9,29,-250,29,-252,-254,-255,-256,-241,-242,-243,-244,-245,-246,-175,-185,-174,29,29,29,-164,29,-169,-170,-136,-142,-143,29,-155,-251,-253,-257,29,-268,-269,-270,-176,-182,-183,-184,-186,29,29,29,-144,-137,-156,-157,-247,-249,-267,-271,-178,-179,-181,29,-158,-248,-177,-180,-240,-259,-260,-261,29,-263,-265,29,-258,-262,-264,-266,]),'COMPLEX':([0,2,3,4,5,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,44,45,46,49,52,60,61,62,63,65,67,68,70,71,72,74,76,82,122,123,126,127,129,130,137,138,144,145,146,147,148,149,150,151,152,153,154,155,156,172,178,186,216,220,221,223,227,231,232,233,234,235,240,241,265,266,270,276,278,279,280,282,286,289,290,291,293,297,332,341,345,346,349,360,362,370,371,373,374,376,390,409,414,421,422,424,444,445,446,454,466,468,470,476,477,478,479,],[30,30,-2,-4,-5,-100,30,30,30,30,30,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-165,-166,-167,-168,-3,30,-98,-172,-173,30,30,30,-138,-159,30,-7,-8,30,-99,-171,30,30,30,30,30,-141,-145,30,-6,-9,30,-250,30,-252,-254,-255,-256,-241,-242,-243,-244,-245,-246,-175,-185,-174,30,30,30,-164,30,-169,-170,-136,-142,-143,30,-155,-251,-253,-257,30,-268,-269,-270,-176,-182,-183,-184,-186,30,30,30,-144,-137,-156,-157,-247,-249,-267,-271,-178,-179,-181,30,-158,-248,-177,-180,-240,-259,-260,-261,30,-263,-265,30,-258,-262,-264,-266,]),'IMAGINARY':([0,2,3,4,5,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,44,45,46,49,52,60,61,62,63,65,67,68,70,71,72,74,76,82,122,123,126,127,129,130,137,138,144,145,146,147,148,149,150,151,152,153,154,155,156,172,178,186,216,220,221,223,227,231,232,233,234,235,240,241,265,266,270,276,278,279,280,282,286,289,290,291,293,297,332,341,345,346,349,360,362,370,371,373,374,376,390,409,414,421,422,424,444,445,446,454,466,468,470,476,477,478,479,],[31,31,-2,-4,-5,-100,31,31,31,31,31,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-165,-166,-167,-168,-3,31,-98,-172,-173,31,31,31,-138,-159,31,-7,-8,31,-99,-171,31,31,31,31,31,-141,-145,31,-6,-9,31,-250,31,-252,-254,-255,-256,-241,-242,-243,-244,-245,-246,-175,-185,-174,31,31,31,-164,31,-169,-170,-136,-142,-143,31,-155,-251,-253,-257,31,-268,-269,-270,-176,-182,-183,-184,-186,31,31,31,-144,-137,-156,-157,-247,-249,-267,-271,-178,-179,-181,31,-158,-248,-177,-180,-240,-259,-260,-261,31,-263,-265,31,-258,-262,-264,-266,]),'CONST':([0,2,3,4,5,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,44,45,46,49,51,52,60,61,62,63,65,67,68,70,71,72,74,75,76,77,79,80,82,122,123,126,127,129,130,137,138,144,145,146,147,148,149,150,151,152,153,154,155,156,172,174,175,178,185,186,216,220,221,223,227,228,231,232,233,234,235,240,241,265,266,270,276,278,279,280,282,283,286,289,290,291,293,297,331,332,338,339,341,345,346,349,360,362,370,371,373,374,376,390,393,394,401,409,414,421,422,424,432,444,445,446,454,466,468,470,476,477,478,479,],[35,35,-2,-4,-5,-100,35,35,35,35,35,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-165,-166,-167,-168,-3,35,-98,-172,35,-173,35,35,35,-138,-159,35,-7,-8,35,-99,-171,35,35,35,-191,-167,35,35,35,35,-141,-145,35,-6,-9,35,-250,35,-252,-254,-255,-256,-241,-242,-243,-244,-245,-246,-175,35,35,-185,-192,-174,35,35,35,-164,35,35,-169,-170,-136,-142,-143,35,-155,-251,-253,-257,35,-268,-269,-270,-176,35,-182,-183,-184,-186,35,35,35,35,35,35,-144,-137,-156,-157,-247,-249,-267,-271,-178,-179,-181,35,35,35,35,-158,-248,-177,-180,-240,35,-259,-260,-261,35,-263,-265,35,-258,-262,-264,-266,]),'VOLATILE':([0,2,3,4,5,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,44,45,46,49,51,52,60,61,62,63,65,67,68,70,71,72,74,75,76,77,79,80,82,122,123,126,127,129,130,137,138,144,145,146,147,148,149,150,151,152,153,154,155,156,172,174,175,178,185,186,216,220,221,223,227,228,231,232,233,234,235,240,241,265,266,270,276,278,279,280,282,283,286,289,290,291,293,297,331,332,338,339,341,345,346,349,360,362,370,371,373,374,376,390,393,394,401,409,414,421,422,424,432,444,445,446,454,466,468,470,476,477,478,479,],[36,36,-2,-4,-5,-100,36,36,36,36,36,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-165,-166,-167,-168,-3,36,-98,-172,36,-173,36,36,36,-138,-159,36,-7,-8,36,-99,-171,36,36,36,-191,-167,36,36,36,36,-141,-145,36,-6,-9,36,-250,36,-252,-254,-255,-256,-241,-242,-243,-244,-245,-246,-175,36,36,-185,-192,-174,36,36,36,-164,36,36,-169,-170,-136,-142,-143,36,-155,-251,-253,-257,36,-268,-269,-270,-176,36,-182,-183,-184,-186,36,36,36,36,36,36,-144,-137,-156,-157,-247,-249,-267,-271,-178,-179,-181,36,36,36,36,-158,-248,-177,-180,-240,36,-259,-260,-261,36,-263,-265,36,-258,-262,-264,-266,]),'ATOMIC':([0,2,3,4,5,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,44,45,46,49,51,52,60,61,62,63,65,67,68,70,71,72,74,75,76,77,79,80,82,122,123,126,127,129,130,137,138,144,145,146,147,148,149,150,151,152,153,154,155,156,172,174,175,178,185,186,216,220,221,223,227,228,231,232,233,234,235,240,241,265,266,270,276,278,279,280,282,283,286,289,290,291,293,297,331,332,338,339,341,345,346,349,360,362,370,371,373,374,376,390,393,394,401,409,414,421,422,424,432,444,445,446,454,466,468,470,476,477,478,479,],[37,37,-2,-4,-5,-100,37,37,37,37,37,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-165,-166,-167,-168,-3,37,-98,-172,80,-173,37,37,37,-138,-159,37,-7,-8,37,-99,-171,80,37,80,-191,-167,37,37,37,37,-141,-145,37,-6,-9,37,-250,37,-252,-254,-255,-256,-241,-242,-243,-244,-245,-246,-175,80,80,-185,-192,-174,37,37,37,-164,37,80,-169,-170,-136,-142,-143,37,-155,-251,-253,-257,37,-268,-269,-270,-176,80,-182,-183,-184,-186,37,37,80,37,80,80,-144,-137,-156,-157,-247,-249,-267,-271,-178,-179,-181,37,80,80,80,-158,-248,-177,-180,-240,80,-259,-260,-261,37,-263,-265,37,-258,-262,-264,-266,]),'NORETURN':([0,2,3,4,5,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,44,45,46,49,52,63,65,67,68,70,71,72,74,76,137,138,145,146,147,148,149,150,151,152,153,154,155,156,172,178,186,223,227,231,232,233,241,265,266,270,276,278,279,280,282,286,289,290,291,293,297,332,345,346,349,360,362,370,371,373,374,376,409,414,421,422,424,444,445,446,466,468,476,477,478,479,],[38,38,-2,-4,-5,-100,38,38,38,38,38,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-165,-166,-167,-168,-3,38,-98,-172,-173,-138,-159,38,-7,-8,38,-99,-171,38,-6,-9,-250,38,-252,-254,-255,-256,-241,-242,-243,-244,-245,-246,-175,-185,-174,-164,38,-169,-170,-136,-155,-251,-253,-257,38,-268,-269,-270,-176,-182,-183,-184,-186,38,38,38,-137,-156,-157,-247,-249,-267,-271,-178,-179,-181,-158,-248,-177,-180,-240,-259,-260,-261,-263,-265,-258,-262,-264,-266,]),'ALIGNAS':([0,2,3,4,5,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,44,45,46,49,52,63,65,67,68,70,71,72,74,76,137,138,145,146,147,148,149,150,151,152,153,154,155,156,172,178,186,223,227,231,232,233,241,265,266,270,276,278,279,280,282,286,289,290,291,293,297,332,345,346,349,360,362,370,371,373,374,376,409,414,421,422,424,444,445,446,466,468,476,477,478,479,],[39,39,-2,-4,-5,-100,39,39,39,39,39,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-165,-166,-167,-168,-3,39,-98,-172,-173,-138,-159,39,-7,-8,39,-99,-171,39,-6,-9,-250,39,-252,-254,-255,-256,-241,-242,-243,-244,-245,-246,-175,-185,-174,-164,39,-169,-170,-136,-155,-251,-253,-257,39,-268,-269,-270,-176,-182,-183,-184,-186,39,39,39,-137,-156,-157,-247,-249,-267,-271,-178,-179,-181,-158,-248,-177,-180,-240,-259,-260,-261,-263,-265,-258,-262,-264,-266,]),'ENUM':([0,2,3,4,5,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,44,45,46,49,52,60,61,62,63,65,67,68,70,71,72,74,76,82,122,123,126,127,129,130,137,138,144,145,146,147,148,149,150,151,152,153,154,155,156,172,178,186,216,220,221,223,227,231,232,233,234,235,240,241,265,266,270,276,278,279,280,282,286,289,290,291,293,297,332,341,345,346,349,360,362,370,371,373,374,376,390,409,414,421,422,424,444,445,446,454,466,468,470,476,477,478,479,],[41,41,-2,-4,-5,-100,41,41,41,41,41,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-165,-166,-167,-168,-3,41,-98,-172,-173,41,41,41,-138,-159,41,-7,-8,41,-99,-171,41,41,41,41,41,-141,-145,41,-6,-9,41,-250,41,-252,-254,-255,-256,-241,-242,-243,-244,-245,-246,-175,-185,-174,41,41,41,-164,41,-169,-170,-136,-142,-143,41,-155,-251,-253,-257,41,-268,-269,-270,-176,-182,-183,-184,-186,41,41,41,-144,-137,-156,-157,-247,-249,-267,-271,-178,-179,-181,41,-158,-248,-177,-180,-240,-259,-260,-261,41,-263,-265,41,-258,-262,-264,-266,]),'STRUCT':([0,2,3,4,5,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,44,45,46,49,52,60,61,62,63,65,67,68,70,71,72,74,76,82,122,123,126,127,129,130,137,138,144,145,146,147,148,149,150,151,152,153,154,155,156,172,178,186,216,220,221,223,227,231,232,233,234,235,240,241,265,266,270,276,278,279,280,282,286,289,290,291,293,297,332,341,345,346,349,360,362,370,371,373,374,376,390,409,414,421,422,424,444,445,446,454,466,468,470,476,477,478,479,],[42,42,-2,-4,-5,-100,42,42,42,42,42,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-165,-166,-167,-168,-3,42,-98,-172,-173,42,42,42,-138,-159,42,-7,-8,42,-99,-171,42,42,42,42,42,-141,-145,42,-6,-9,42,-250,42,-252,-254,-255,-256,-241,-242,-243,-244,-245,-246,-175,-185,-174,42,42,42,-164,42,-169,-170,-136,-142,-143,42,-155,-251,-253,-257,42,-268,-269,-270,-176,-182,-183,-184,-186,42,42,42,-144,-137,-156,-157,-247,-249,-267,-271,-178,-179,-181,42,-158,-248,-177,-180,-240,-259,-260,-261,42,-263,-265,42,-258,-262,-264,-266,]),'UNION':([0,2,3,4,5,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,44,45,46,49,52,60,61,62,63,65,67,68,70,71,72,74,76,82,122,123,126,127,129,130,137,138,144,145,146,147,148,149,150,151,152,153,154,155,156,172,178,186,216,220,221,223,227,231,232,233,234,235,240,241,265,266,270,276,278,279,280,282,286,289,290,291,293,297,332,341,345,346,349,360,362,370,371,373,374,376,390,409,414,421,422,424,444,445,446,454,466,468,470,476,477,478,479,],[43,43,-2,-4,-5,-100,43,43,43,43,43,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-165,-166,-167,-168,-3,43,-98,-172,-173,43,43,43,-138,-159,43,-7,-8,43,-99,-171,43,43,43,43,43,-141,-145,43,-6,-9,43,-250,43,-252,-254,-255,-256,-241,-242,-243,-244,-245,-246,-175,-185,-174,43,43,43,-164,43,-169,-170,-136,-142,-143,43,-155,-251,-253,-257,43,-268,-269,-270,-176,-182,-183,-184,-186,43,43,43,-144,-137,-156,-157,-247,-249,-267,-271,-178,-179,-181,43,-158,-248,-177,-180,-240,-259,-260,-261,43,-263,-265,43,-258,-262,-264,-266,]),'$end}
>>>>>>> 9ccdc3f3c3e14c454244aee114e8b892152bcc91

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

<<<<<<< HEAD
_lr_goto_items = {'start':([0,],[1,]),'construct':([0,3,4,],[2,17,18,]),'funcdef':([0,3,4,],[3,3,3,]),'statement':([0,3,4,70,],[4,4,4,77,]),'return_stmt':([0,3,4,70,],[7,7,7,7,]),'assignment_stmt':([0,3,4,70,],[8,8,8,8,]),'func_call_stmt':([0,3,4,13,20,70,],[9,9,9,24,24,9,]),'loop_stmt':([0,3,4,70,],[10,10,10,10,]),'if_stmt':([0,3,4,70,],[11,11,11,11,]),'for_loop':([0,3,4,70,],[14,14,14,14,]),'expression':([13,20,],[22,38,]),'arithmetic_expr':([13,20,35,43,78,],[23,23,55,60,81,]),'atom':([13,20,21,34,35,37,43,59,78,],[25,25,41,41,25,41,25,41,25,]),'literal':([13,20,21,34,35,37,43,59,78,],[27,27,27,27,27,27,27,27,27,]),'list':([13,20,21,34,35,37,43,59,78,],[33,33,33,33,33,33,33,33,33,]),'parameters':([21,34,37,59,],[40,54,57,65,]),'empty':([21,34,37,59,],[42,42,42,42,]),'arithmetic_op':([23,55,60,81,],[43,43,43,43,]),'statement_suite':([66,67,68,77,79,84,],[69,71,72,80,82,85,]),'elif_stmt':([69,],[73,]),'else_stmt':([69,85,],[75,86,]),}
=======
_lr_goto_items = {'start':([0,],[1,]),'translation_unit':([0,],[2,]),'external_declaration':([0,2,],[3,44,]),'function_definition':([0,2,],[4,4,]),'declaration':([0,2,45,67,71,146,276,],[5,5,70,138,148,148,369,]),'declaration_specifiers':([0,2,8,9,10,11,12,45,67,71,76,146,227,276,293,297,332,],[6,6,54,55,56,57,58,66,66,66,183,66,183,66,183,183,183,]),'static_assert_declaration':([0,2,45,62,67,71,126,130,146,240,276,],[7,7,7,129,7,7,129,129,7,129,7,]),'storage_class_specifier':([0,2,8,9,10,11,12,45,67,71,76,146,227,276,293,297,332,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'type_specifier':([0,2,8,9,10,11,12,45,60,61,62,67,71,76,82,122,123,126,130,144,146,216,220,221,227,240,276,293,297,332,390,454,470,],[9,9,9,9,9,9,9,9,122,122,122,9,9,9,122,122,122,122,122,122,9,122,122,122,9,122,9,9,9,9,122,122,122,]),'type_qualifier':([0,2,8,9,10,11,12,45,51,60,61,62,67,71,75,76,77,82,122,123,126,130,144,146,174,175,216,220,221,227,228,240,276,283,293,297,331,332,338,339,390,393,394,401,432,454,470,],[10,10,10,10,10,10,10,10,79,123,123,123,10,10,79,10,185,123,123,123,123,123,123,10,79,185,123,123,123,10,79,123,10,185,10,10,79,10,79,185,123,79,185,185,185,123,123,]),'function_specifier':([0,2,8,9,10,11,12,45,67,71,76,146,227,276,293,297,332,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'alignment_specifier':([0,2,8,9,10,11,12,45,67,71,76,146,227,276,293,297,332,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'atomic_type_specifier':([0,2,8,9,10,11,12,45,60,61,62,67,71,76,82,122,123,126,130,144,146,216,220,221,227,240,276,293,297,332,390,454,470,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'struct_or_union_specifier':([0,2,8,9,10,11,12,45,60,61,62,67,71,76,82,122,123,126,130,144,146,216,220,221,227,240,276,293,297,332,390,454,470,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'enum_specifier':([0,2,8,9,10,11,12,45,60,61,62,67,71,76,82,122,123,126,130,144,146,216,220,221,227,240,276,293,297,332,390,454,470,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'struct_or_union':([0,2,8,9,10,11,12,45,60,61,62,67,71,76,82,122,123,126,130,144,146,216,220,221,227,240,276,293,297,332,390,454,470,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'declarator':([6,53,66,73,128,183,297,342,],[45,81,136,136,239,294,81,239,]),'init_declarator_list':([6,66,],[47,47,]),'pointer':([6,51,53,66,73,77,121,128,183,227,297,342,],[48,78,48,48,48,184,225,48,296,225,296,48,]),'direct_declarator':([6,48,53,66,73,128,183,296,297,342,],[49,74,49,49,49,49,49,74,49,49,]),'init_declarator':([6,66,73,],[50,50,171,]),'declaration_list':([45,],[67,]),'compound_statement':([45,67,71,146,164,267,269,361,415,416,417,448,450,464,467,469,],[68,137,152,152,152,152,152,152,152,152,152,152,152,152,152,152,]),'type_qualifier_list':([51,75,174,228,331,338,393,],[77,175,283,339,394,401,432,]),'constant_expression':([59,61,158,238,243,250,344,],[83,125,268,343,348,356,408,]),'conditional_expression':([59,61,69,71,75,82,140,144,146,158,164,169,174,175,190,209,210,216,220,222,228,238,243,246,250,252,267,269,271,272,273,274,276,283,287,331,338,339,344,352,361,368,369,381,383,386,393,394,401,403,411,415,416,417,418,419,420,432,436,448,450,453,456,457,464,467,469,482,484,],[85,85,142,142,142,142,142,142,142,85,142,142,142,142,142,142,142,142,142,142,142,85,85,142,85,142,142,142,142,142,142,142,142,142,142,142,142,142,85,142,142,142,142,142,425,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,]),'logical_or_expression':([59,61,69,71,75,82,140,144,146,158,164,169,174,175,190,209,210,216,220,222,228,238,243,246,250,252,267,269,271,272,273,274,276,283,287,331,338,339,344,352,361,368,369,381,383,386,393,394,401,403,411,415,416,417,418,419,420,432,436,448,450,453,456,457,464,467,469,482,484,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'logical_and_expression':([59,61,69,71,75,82,140,144,146,158,164,169,174,175,190,191,209,210,216,220,222,228,238,243,246,250,252,267,269,271,272,273,274,276,283,287,331,338,339,344,352,361,368,369,381,383,386,393,394,401,403,411,415,416,417,418,419,420,432,436,448,450,453,456,457,464,467,469,482,484,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,302,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'inclusive_or_expression':([59,61,69,71,75,82,140,144,146,158,164,169,174,175,190,191,192,209,210,216,220,222,228,238,243,246,250,252,267,269,271,272,273,274,276,283,287,331,338,339,344,352,361,368,369,381,383,386,393,394,401,403,411,415,416,417,418,419,420,432,436,448,450,453,456,457,464,467,469,482,484,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,303,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'exclusive_or_expression':([59,61,69,71,75,82,140,144,146,158,164,169,174,175,190,191,192,193,209,210,216,220,222,228,238,243,246,250,252,267,269,271,272,273,274,276,283,287,331,338,339,344,352,361,368,369,381,383,386,393,394,401,403,411,415,416,417,418,419,420,432,436,448,450,453,456,457,464,467,469,482,484,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,304,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'and_expression':([59,61,69,71,75,82,140,144,146,158,164,169,174,175,190,191,192,193,194,209,210,216,220,222,228,238,243,246,250,252,267,269,271,272,273,274,276,283,287,331,338,339,344,352,361,368,369,381,383,386,393,394,401,403,411,415,416,417,418,419,420,432,436,448,450,453,456,457,464,467,469,482,484,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,305,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'equality_expression':([59,61,69,71,75,82,140,144,146,158,164,169,174,175,190,191,192,193,194,195,209,210,216,220,222,228,238,243,246,250,252,267,269,271,272,273,274,276,283,287,331,338,339,344,352,361,368,369,381,383,386,393,394,401,403,411,415,416,417,418,419,420,432,436,448,450,453,456,457,464,467,469,482,484,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,306,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'relational_expression':([59,61,69,71,75,82,140,144,146,158,164,169,174,175,190,191,192,193,194,195,196,197,209,210,216,220,222,228,238,243,246,250,252,267,269,271,272,273,274,276,283,287,331,338,339,344,352,361,368,369,381,383,386,393,394,401,403,411,415,416,417,418,419,420,432,436,448,450,453,456,457,464,467,469,482,484,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,307,308,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'shift_expression':([59,61,69,71,75,82,140,144,146,158,164,169,174,175,190,191,192,193,194,195,196,197,198,199,200,201,209,210,216,220,222,228,238,243,246,250,252,267,269,271,272,273,274,276,283,287,331,338,339,344,352,361,368,369,381,383,386,393,394,401,403,411,415,416,417,418,419,420,432,436,448,450,453,456,457,464,467,469,482,484,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,309,310,311,312,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'additive_expression':([59,61,69,71,75,82,140,144,146,158,164,169,174,175,190,191,192,193,194,195,196,197,198,199,200,201,202,203,209,210,216,220,222,228,238,243,246,250,252,267,269,271,272,273,274,276,283,287,331,338,339,344,352,361,368,369,381,383,386,393,394,401,403,411,415,416,417,418,419,420,432,436,448,450,453,456,457,464,467,469,482,484,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,313,314,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'multiplicative_expression':([59,61,69,71,75,82,140,144,146,158,164,169,174,175,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,209,210,216,220,222,228,238,243,246,250,252,267,269,271,272,273,274,276,283,287,331,338,339,344,352,361,368,369,381,383,386,393,394,401,403,411,415,416,417,418,419,420,432,436,448,450,453,456,457,464,467,469,482,484,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,315,316,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'cast_expression':([59,61,69,71,75,82,105,140,144,146,158,164,169,174,175,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,216,220,222,228,238,243,246,250,252,267,269,271,272,273,274,276,283,287,298,331,338,339,344,352,359,361,368,369,381,383,386,393,394,401,403,411,415,416,417,418,419,420,432,436,448,450,453,456,457,464,467,469,482,484,],[99,99,99,99,99,99,218,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,317,318,319,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,380,99,99,99,99,99,380,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'unary_expression':([59,61,69,71,75,82,103,104,105,106,140,144,146,158,164,169,174,175,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,216,220,222,228,238,243,246,250,252,267,269,271,272,273,274,276,283,287,298,331,338,339,344,352,359,361,368,369,381,383,386,393,394,401,403,411,415,416,417,418,419,420,432,436,448,450,453,456,457,464,467,469,482,484,],[101,101,143,143,143,143,215,217,101,219,143,143,143,101,143,143,143,143,143,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,143,143,143,143,143,143,101,101,143,101,143,143,143,143,143,143,143,143,143,143,101,143,143,143,101,143,101,143,143,143,143,101,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,]),'postfix_expression':([59,61,69,71,75,82,103,104,105,106,140,144,146,158,164,169,174,175,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,216,220,222,228,238,243,246,250,252,267,269,271,272,273,274,276,283,287,298,331,338,339,344,352,359,361,368,369,381,383,386,393,394,401,403,411,415,416,417,418,419,420,432,436,448,450,453,456,457,464,467,469,482,484,],[102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,]),'unary_operator':([59,61,69,71,75,82,103,104,105,106,140,144,146,158,164,169,174,175,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,216,220,222,228,238,243,246,250,252,267,269,271,272,273,274,276,283,287,298,331,338,339,344,352,359,361,368,369,381,383,386,393,394,401,403,411,415,416,417,418,419,420,432,436,448,450,453,456,457,464,467,469,482,484,],[105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,]),'primary_expression':([59,61,69,71,75,82,103,104,105,106,140,144,146,158,164,169,174,175,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,216,220,222,228,238,243,246,250,252,267,269,271,272,273,274,276,283,287,298,331,338,339,344,352,359,361,368,369,381,383,386,393,394,401,403,411,415,416,417,418,419,420,432,436,448,450,453,456,457,464,467,469,482,484,],[108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,]),'constant':([59,61,69,71,75,82,103,104,105,106,140,144,146,158,164,169,174,175,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,216,220,222,228,238,243,246,250,252,267,269,271,272,273,274,276,283,287,298,331,338,339,344,352,359,361,368,369,381,383,386,393,394,401,403,411,415,416,417,418,419,420,432,436,448,450,453,456,457,464,467,469,482,484,],[112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,]),'string':([59,61,69,71,75,82,103,104,105,106,140,144,146,158,164,169,174,175,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,216,220,222,228,238,243,246,250,252,267,269,271,272,273,274,276,283,287,298,331,338,339,344,352,359,361,368,369,381,383,386,393,394,401,403,411,415,416,417,418,419,420,432,436,448,450,453,456,457,464,467,469,482,484,],[113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,]),'generic_selection':([59,61,69,71,75,82,103,104,105,106,140,144,146,158,164,169,174,175,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,216,220,222,228,238,243,246,250,252,267,269,271,272,273,274,276,283,287,298,331,338,339,344,352,359,361,368,369,381,383,386,393,394,401,403,411,415,416,417,418,419,420,432,436,448,450,453,456,457,464,467,469,482,484,],[114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,]),'type_name':([60,61,82,144,216,220,221,390,454,470,],[120,124,187,264,326,327,328,429,429,480,]),'specifier_qualifier_list':([60,61,62,82,122,123,126,130,144,216,220,221,240,390,454,470,],[121,121,128,121,229,230,128,128,121,121,121,121,128,121,121,121,]),'struct_declaration_list':([62,130,],[126,240,]),'struct_declaration':([62,126,130,240,],[127,234,127,234,]),'enumerator_list':([64,135,],[131,244,]),'enumerator':([64,135,242,350,],[132,132,347,347,]),'enumeration_constant':([64,135,242,350,],[133,133,133,133,]),'initializer':([69,140,246,352,381,411,453,482,484,],[139,247,353,412,247,443,412,247,412,]),'assignment_expression':([69,71,75,82,140,144,146,164,169,174,175,190,209,210,216,220,222,228,246,252,267,269,271,272,273,274,276,283,287,331,338,339,352,361,368,369,381,386,393,394,401,403,411,415,416,417,418,419,420,432,436,448,450,453,456,457,464,467,469,482,484,],[141,170,176,170,141,170,170,170,170,284,288,170,170,323,170,170,329,340,141,358,170,170,363,170,170,170,170,372,375,395,402,404,141,170,170,170,141,426,433,434,439,441,141,170,170,170,170,170,170,458,461,170,170,141,472,473,170,170,170,141,141,]),'block_item_list':([71,],[146,]),'block_item':([71,146,],[147,266,]),'statement':([71,146,164,267,269,361,415,416,417,448,450,464,467,469,],[149,149,275,360,362,414,444,445,446,466,468,476,478,479,]),'labeled_statement':([71,146,164,267,269,361,415,416,417,448,450,464,467,469,],[151,151,151,151,151,151,151,151,151,151,151,151,151,151,]),'expression_statement':([71,146,164,267,269,276,361,368,369,415,416,417,448,450,464,467,469,],[153,153,153,153,153,368,153,419,420,153,153,153,153,153,153,153,153,]),'selection_statement':([71,146,164,267,269,361,415,416,417,448,450,464,467,469,],[154,154,154,154,154,154,154,154,154,154,154,154,154,154,]),'iteration_statement':([71,146,164,267,269,361,415,416,417,448,450,464,467,469,],[155,155,155,155,155,155,155,155,155,155,155,155,155,155,]),'jump_statement':([71,146,164,267,269,361,415,416,417,448,450,464,467,469,],[156,156,156,156,156,156,156,156,156,156,156,156,156,156,]),'expression':([71,82,144,146,164,169,190,209,216,220,267,269,272,273,274,276,361,368,369,415,416,417,418,419,420,448,450,464,467,469,],[160,188,188,160,160,281,301,320,188,188,160,160,364,365,366,160,160,160,160,160,160,160,447,449,451,160,160,160,160,160,]),'parameter_type_list':([76,227,297,332,],[177,335,335,397,]),'identifier_list':([76,],[179,]),'parameter_list':([76,227,297,332,],[180,180,180,180,]),'parameter_declaration':([76,227,293,297,332,],[182,182,379,182,182,]),'abstract_declarator':([121,183,227,297,],[224,295,333,333,]),'direct_abstract_declarator':([121,183,225,227,296,297,],[226,226,330,226,330,226,]),'struct_declarator_list':([128,],[236,]),'struct_declarator':([128,342,],[237,407,]),'initializer_list':([140,381,482,],[245,423,483,]),'designation':([140,352,381,453,482,484,],[246,411,246,411,246,411,]),'designator_list':([140,352,381,453,482,484,],[248,248,248,248,248,248,]),'designator':([140,248,352,381,453,482,484,],[249,355,249,249,249,249,249,]),'assignment_operator':([143,],[252,]),'argument_expression_list':([210,],[322,]),'generic_assoc_list':([390,],[427,]),'generic_association':([390,454,],[428,471,]),}
>>>>>>> 9ccdc3f3c3e14c454244aee114e8b892152bcc91

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
<<<<<<< HEAD
  ('start -> construct','start',1,'p_start','ply_program.py',133),
  ('construct -> funcdef construct','construct',2,'p_construct','ply_program.py',138),
  ('construct -> statement construct','construct',2,'p_construct','ply_program.py',139),
  ('construct -> statement','construct',1,'p_construct','ply_program.py',140),
  ('construct -> funcdef','construct',1,'p_construct','ply_program.py',141),
  ('statement_suite -> TAB statement','statement_suite',2,'p_statement_suite','ply_program.py',146),
  ('statement_suite -> TAB statement statement_suite','statement_suite',3,'p_statement_suite','ply_program.py',147),
  ('statement -> return_stmt','statement',1,'p_statement','ply_program.py',152),
  ('statement -> assignment_stmt','statement',1,'p_statement','ply_program.py',153),
  ('statement -> func_call_stmt','statement',1,'p_statement','ply_program.py',154),
  ('statement -> loop_stmt','statement',1,'p_statement','ply_program.py',155),
  ('statement -> if_stmt','statement',1,'p_statement','ply_program.py',156),
  ('statement -> PASS','statement',1,'p_statement','ply_program.py',157),
  ('loop_stmt -> for_loop','loop_stmt',1,'p_loop_stmt','ply_program.py',162),
  ('for_loop -> FOR IDENTIFIER IN IDENTIFIER COLON statement_suite','for_loop',6,'p_for_loop','ply_program.py',167),
  ('if_stmt -> IF LPAREN arithmetic_expr RPAREN COLON statement_suite','if_stmt',6,'p_if_stmt','ply_program.py',172),
  ('if_stmt -> IF LPAREN arithmetic_expr RPAREN COLON statement_suite elif_stmt','if_stmt',7,'p_if_stmt','ply_program.py',173),
  ('elif_stmt -> ELIF LPAREN arithmetic_expr RPAREN COLON statement_suite else_stmt','elif_stmt',7,'p_elif_stmt','ply_program.py',178),
  ('elif_stmt -> else_stmt','elif_stmt',1,'p_elif_stmt','ply_program.py',179),
  ('else_stmt -> ELSE COLON statement_suite','else_stmt',3,'p_else_stmt','ply_program.py',184),
  ('funcdef -> DEF IDENTIFIER LPAREN parameters RPAREN COLON statement_suite','funcdef',7,'p_funcdef','ply_program.py',189),
  ('parameters -> atom','parameters',1,'p_parameters','ply_program.py',194),
  ('parameters -> atom COMMA parameters','parameters',3,'p_parameters','ply_program.py',195),
  ('parameters -> empty','parameters',1,'p_parameters','ply_program.py',196),
  ('func_call_stmt -> IDENTIFIER LPAREN parameters RPAREN','func_call_stmt',4,'p_func_call_stmt','ply_program.py',201),
  ('assignment_stmt -> IDENTIFIER EQUALS expression','assignment_stmt',3,'p_assignment_stmt','ply_program.py',206),
  ('expression -> arithmetic_expr','expression',1,'p_expression','ply_program.py',211),
  ('expression -> func_call_stmt','expression',1,'p_expression','ply_program.py',212),
  ('arithmetic_expr -> arithmetic_expr arithmetic_op arithmetic_expr','arithmetic_expr',3,'p_arithmetic_expr','ply_program.py',217),
  ('arithmetic_expr -> atom','arithmetic_expr',1,'p_arithmetic_expr','ply_program.py',218),
  ('return_stmt -> RETURN expression','return_stmt',2,'p_return_stmt','ply_program.py',223),
  ('atom -> IDENTIFIER','atom',1,'p_atom','ply_program.py',228),
  ('atom -> literal','atom',1,'p_atom','ply_program.py',229),
  ('literal -> NUMBER','literal',1,'p_literal','ply_program.py',234),
  ('literal -> NONE','literal',1,'p_literal','ply_program.py',235),
  ('literal -> TRUE','literal',1,'p_literal','ply_program.py',236),
  ('literal -> FALSE','literal',1,'p_literal','ply_program.py',237),
  ('literal -> STRING','literal',1,'p_literal','ply_program.py',238),
  ('literal -> list','literal',1,'p_literal','ply_program.py',239),
  ('list -> LSQUARE parameters RSQUARE','list',3,'p_list','ply_program.py',244),
  ('arithmetic_op -> PLUS','arithmetic_op',1,'p_arithmetic_op','ply_program.py',249),
  ('arithmetic_op -> MINUS','arithmetic_op',1,'p_arithmetic_op','ply_program.py',250),
  ('arithmetic_op -> MODULUS','arithmetic_op',1,'p_arithmetic_op','ply_program.py',251),
  ('arithmetic_op -> DIVIDE','arithmetic_op',1,'p_arithmetic_op','ply_program.py',252),
  ('arithmetic_op -> MULTIPLY','arithmetic_op',1,'p_arithmetic_op','ply_program.py',253),
  ('arithmetic_op -> GR','arithmetic_op',1,'p_arithmetic_op','ply_program.py',254),
  ('arithmetic_op -> LE','arithmetic_op',1,'p_arithmetic_op','ply_program.py',255),
  ('arithmetic_op -> EQ','arithmetic_op',1,'p_arithmetic_op','ply_program.py',256),
  ('arithmetic_op -> GREQ','arithmetic_op',1,'p_arithmetic_op','ply_program.py',257),
  ('arithmetic_op -> LEEQ','arithmetic_op',1,'p_arithmetic_op','ply_program.py',258),
  ('empty -> <empty>','empty',0,'p_empty','ply_program.py',269),
=======
  ('start -> translation_unit','start',1,'p_start','ply_program.py',343),
  ('translation_unit -> external_declaration','translation_unit',1,'p_translation_unit','ply_program.py',348),
  ('translation_unit -> translation_unit external_declaration','translation_unit',2,'p_translation_unit','ply_program.py',349),
  ('external_declaration -> function_definition','external_declaration',1,'p_external_declaration','ply_program.py',354),
  ('external_declaration -> declaration','external_declaration',1,'p_external_declaration','ply_program.py',355),
  ('function_definition -> declaration_specifiers declarator declaration_list compound_statement','function_definition',4,'p_function_definition','ply_program.py',360),
  ('function_definition -> declaration_specifiers declarator compound_statement','function_definition',3,'p_function_definition','ply_program.py',361),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','ply_program.py',366),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','ply_program.py',367),
  ('primary_expression -> IDENTIFIER','primary_expression',1,'p_primary_expression','ply_program.py',372),
  ('primary_expression -> constant','primary_expression',1,'p_primary_expression','ply_program.py',373),
  ('primary_expression -> string','primary_expression',1,'p_primary_expression','ply_program.py',374),
  ('primary_expression -> LPAREN expression RPAREN','primary_expression',3,'p_primary_expression','ply_program.py',375),
  ('primary_expression -> generic_selection','primary_expression',1,'p_primary_expression','ply_program.py',376),
  ('primary_expression -> NUMBER','primary_expression',1,'p_primary_expression','ply_program.py',377),
  ('constant -> I_CONSTANT','constant',1,'p_constant','ply_program.py',382),
  ('constant -> F_CONSTANT','constant',1,'p_constant','ply_program.py',383),
  ('enumeration_constant -> IDENTIFIER','enumeration_constant',1,'p_enumeration_constant','ply_program.py',388),
  ('string -> STRING_LITERAL','string',1,'p_string','ply_program.py',393),
  ('string -> FUNC_NAME','string',1,'p_string','ply_program.py',394),
  ('generic_selection -> GENERIC LPAREN assignment_expression COMMA generic_assoc_list RPAREN','generic_selection',6,'p_generic_selection','ply_program.py',399),
  ('generic_assoc_list -> generic_association','generic_assoc_list',1,'p_generic_assoc_list','ply_program.py',404),
  ('generic_assoc_list -> generic_assoc_list COMMA generic_association','generic_assoc_list',3,'p_generic_assoc_list','ply_program.py',405),
  ('generic_association -> type_name COLON assignment_expression','generic_association',3,'p_generic_association','ply_program.py',410),
  ('generic_association -> DEFAULT COLON assignment_expression','generic_association',3,'p_generic_association','ply_program.py',411),
  ('postfix_expression -> primary_expression','postfix_expression',1,'p_postfix_expression','ply_program.py',416),
  ('postfix_expression -> postfix_expression RSQUARE expression LSQUARE','postfix_expression',4,'p_postfix_expression','ply_program.py',417),
  ('postfix_expression -> postfix_expression LPAREN RPAREN','postfix_expression',3,'p_postfix_expression','ply_program.py',418),
  ('postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN','postfix_expression',4,'p_postfix_expression','ply_program.py',419),
  ('postfix_expression -> postfix_expression DOT IDENTIFIER','postfix_expression',3,'p_postfix_expression','ply_program.py',420),
  ('postfix_expression -> postfix_expression PTR_OP IDENTIFIER','postfix_expression',3,'p_postfix_expression','ply_program.py',421),
  ('postfix_expression -> postfix_expression INC_OP','postfix_expression',2,'p_postfix_expression','ply_program.py',422),
  ('postfix_expression -> postfix_expression DEC_OP','postfix_expression',2,'p_postfix_expression','ply_program.py',423),
  ('postfix_expression -> LPAREN type_name RPAREN LFPAREN initializer_list RFPAREN LPAREN type_name RPAREN LFPAREN initializer_list COMMA RFPAREN','postfix_expression',13,'p_postfix_expression','ply_program.py',424),
  ('argument_expression_list -> assignment_expression','argument_expression_list',1,'p_argument_expression_list','ply_program.py',429),
  ('argument_expression_list -> argument_expression_list COMMA assignment_expression','argument_expression_list',3,'p_argument_expression_list','ply_program.py',430),
  ('unary_expression -> postfix_expression','unary_expression',1,'p_unary_expression','ply_program.py',435),
  ('unary_expression -> INC_OP unary_expression','unary_expression',2,'p_unary_expression','ply_program.py',436),
  ('unary_expression -> DEC_OP unary_expression','unary_expression',2,'p_unary_expression','ply_program.py',437),
  ('unary_expression -> unary_operator cast_expression','unary_expression',2,'p_unary_expression','ply_program.py',438),
  ('unary_expression -> SIZEOF unary_expression','unary_expression',2,'p_unary_expression','ply_program.py',439),
  ('unary_expression -> SIZEOF LPAREN type_name RPAREN','unary_expression',4,'p_unary_expression','ply_program.py',440),
  ('unary_expression -> ALIGNOF LPAREN type_name RPAREN','unary_expression',4,'p_unary_expression','ply_program.py',441),
  ('unary_operator -> AMP','unary_operator',1,'p_unary_operator','ply_program.py',446),
  ('unary_operator -> TIMES','unary_operator',1,'p_unary_operator','ply_program.py',447),
  ('unary_operator -> PLUS','unary_operator',1,'p_unary_operator','ply_program.py',448),
  ('unary_operator -> MINUS','unary_operator',1,'p_unary_operator','ply_program.py',449),
  ('unary_operator -> TILDE','unary_operator',1,'p_unary_operator','ply_program.py',450),
  ('unary_operator -> NOT','unary_operator',1,'p_unary_operator','ply_program.py',451),
  ('cast_expression -> unary_expression','cast_expression',1,'p_cast_expression','ply_program.py',456),
  ('cast_expression -> LPAREN type_name RPAREN cast_expression','cast_expression',4,'p_cast_expression','ply_program.py',457),
  ('multiplicative_expression -> cast_expression','multiplicative_expression',1,'p_multiplicative_expression','ply_program.py',462),
  ('multiplicative_expression -> multiplicative_expression TIMES cast_expression','multiplicative_expression',3,'p_multiplicative_expression','ply_program.py',463),
  ('multiplicative_expression -> multiplicative_expression DIVIDES cast_expression','multiplicative_expression',3,'p_multiplicative_expression','ply_program.py',464),
  ('multiplicative_expression -> multiplicative_expression MODULUS cast_expression','multiplicative_expression',3,'p_multiplicative_expression','ply_program.py',465),
  ('additive_expression -> multiplicative_expression','additive_expression',1,'p_additive_expression','ply_program.py',470),
  ('additive_expression -> additive_expression PLUS multiplicative_expression','additive_expression',3,'p_additive_expression','ply_program.py',471),
  ('additive_expression -> additive_expression MINUS multiplicative_expression','additive_expression',3,'p_additive_expression','ply_program.py',472),
  ('shift_expression -> additive_expression','shift_expression',1,'p_shift_expression','ply_program.py',477),
  ('shift_expression -> shift_expression LEFT_OP additive_expression','shift_expression',3,'p_shift_expression','ply_program.py',478),
  ('shift_expression -> shift_expression RIGHT_OP additive_expression','shift_expression',3,'p_shift_expression','ply_program.py',479),
  ('relational_expression -> shift_expression','relational_expression',1,'p_relational_expression','ply_program.py',484),
  ('relational_expression -> relational_expression LT_OP shift_expression','relational_expression',3,'p_relational_expression','ply_program.py',485),
  ('relational_expression -> relational_expression GT_OP shift_expression','relational_expression',3,'p_relational_expression','ply_program.py',486),
  ('relational_expression -> relational_expression LE_OP shift_expression','relational_expression',3,'p_relational_expression','ply_program.py',487),
  ('relational_expression -> relational_expression GE_OP shift_expression','relational_expression',3,'p_relational_expression','ply_program.py',488),
  ('equality_expression -> relational_expression','equality_expression',1,'p_equality_expression','ply_program.py',493),
  ('equality_expression -> equality_expression EQ_OP relational_expression','equality_expression',3,'p_equality_expression','ply_program.py',494),
  ('equality_expression -> equality_expression NE_OP relational_expression','equality_expression',3,'p_equality_expression','ply_program.py',495),
  ('and_expression -> equality_expression','and_expression',1,'p_and_expression','ply_program.py',500),
  ('and_expression -> and_expression AMP equality_expression','and_expression',3,'p_and_expression','ply_program.py',501),
  ('exclusive_or_expression -> and_expression','exclusive_or_expression',1,'p_exclusive_or_expression','ply_program.py',506),
  ('exclusive_or_expression -> exclusive_or_expression XOR and_expression','exclusive_or_expression',3,'p_exclusive_or_expression','ply_program.py',507),
  ('inclusive_or_expression -> exclusive_or_expression','inclusive_or_expression',1,'p_inclusive_or_expression','ply_program.py',512),
  ('inclusive_or_expression -> inclusive_or_expression OR exclusive_or_expression','inclusive_or_expression',3,'p_inclusive_or_expression','ply_program.py',513),
  ('logical_and_expression -> inclusive_or_expression','logical_and_expression',1,'p_logical_and_expression','ply_program.py',518),
  ('logical_and_expression -> logical_and_expression AND_OP inclusive_or_expression','logical_and_expression',3,'p_logical_and_expression','ply_program.py',519),
  ('logical_or_expression -> logical_and_expression','logical_or_expression',1,'p_logical_or_expression','ply_program.py',524),
  ('logical_or_expression -> logical_or_expression OR_OP logical_and_expression','logical_or_expression',3,'p_logical_or_expression','ply_program.py',525),
  ('conditional_expression -> logical_or_expression','conditional_expression',1,'p_conditional_expression','ply_program.py',530),
  ('conditional_expression -> logical_or_expression QMARK expression COLON conditional_expression','conditional_expression',5,'p_conditional_expression','ply_program.py',531),
  ('assignment_expression -> conditional_expression','assignment_expression',1,'p_assignment_expression','ply_program.py',536),
  ('assignment_expression -> unary_expression assignment_operator assignment_expression','assignment_expression',3,'p_assignment_expression','ply_program.py',537),
  ('assignment_operator -> EQUALS','assignment_operator',1,'p_assignment_operator','ply_program.py',542),
  ('assignment_operator -> MUL_ASSIGN','assignment_operator',1,'p_assignment_operator','ply_program.py',543),
  ('assignment_operator -> DIV_ASSIGN','assignment_operator',1,'p_assignment_operator','ply_program.py',544),
  ('assignment_operator -> MOD_ASSIGN','assignment_operator',1,'p_assignment_operator','ply_program.py',545),
  ('assignment_operator -> ADD_ASSIGN','assignment_operator',1,'p_assignment_operator','ply_program.py',546),
  ('assignment_operator -> SUB_ASSIGN','assignment_operator',1,'p_assignment_operator','ply_program.py',547),
  ('assignment_operator -> LEFT_ASSIGN','assignment_operator',1,'p_assignment_operator','ply_program.py',548),
  ('assignment_operator -> RIGHT_ASSIGN','assignment_operator',1,'p_assignment_operator','ply_program.py',549),
  ('assignment_operator -> AND_ASSIGN','assignment_operator',1,'p_assignment_operator','ply_program.py',550),
  ('assignment_operator -> XOR_ASSIGN','assignment_operator',1,'p_assignment_operator','ply_program.py',551),
  ('assignment_operator -> OR_ASSIGN','assignment_operator',1,'p_assignment_operator','ply_program.py',552),
  ('expression -> assignment_expression','expression',1,'p_expression','ply_program.py',557),
  ('expression -> expression COMMA assignment_expression','expression',3,'p_expression','ply_program.py',558),
  ('constant_expression -> conditional_expression','constant_expression',1,'p_constant_expression','ply_program.py',563),
  ('declaration -> declaration_specifiers SCOLON','declaration',2,'p_declaration','ply_program.py',568),
  ('declaration -> declaration_specifiers init_declarator_list SCOLON','declaration',3,'p_declaration','ply_program.py',569),
  ('declaration -> static_assert_declaration','declaration',1,'p_declaration','ply_program.py',570),
  ('declaration_specifiers -> storage_class_specifier declaration_specifiers','declaration_specifiers',2,'p_declaration_specifiers','ply_program.py',575),
  ('declaration_specifiers -> storage_class_specifier','declaration_specifiers',1,'p_declaration_specifiers','ply_program.py',576),
  ('declaration_specifiers -> type_specifier declaration_specifiers','declaration_specifiers',2,'p_declaration_specifiers','ply_program.py',577),
  ('declaration_specifiers -> type_specifier','declaration_specifiers',1,'p_declaration_specifiers','ply_program.py',578),
  ('declaration_specifiers -> type_qualifier declaration_specifiers','declaration_specifiers',2,'p_declaration_specifiers','ply_program.py',579),
  ('declaration_specifiers -> type_qualifier','declaration_specifiers',1,'p_declaration_specifiers','ply_program.py',580),
  ('declaration_specifiers -> function_specifier declaration_specifiers','declaration_specifiers',2,'p_declaration_specifiers','ply_program.py',581),
  ('declaration_specifiers -> function_specifier','declaration_specifiers',1,'p_declaration_specifiers','ply_program.py',582),
  ('declaration_specifiers -> alignment_specifier declaration_specifiers','declaration_specifiers',2,'p_declaration_specifiers','ply_program.py',583),
  ('declaration_specifiers -> alignment_specifier','declaration_specifiers',1,'p_declaration_specifiers','ply_program.py',584),
  ('init_declarator_list -> init_declarator','init_declarator_list',1,'p_init_declarator_list','ply_program.py',589),
  ('init_declarator_list -> init_declarator_list COMMA init_declarator','init_declarator_list',3,'p_init_declarator_list','ply_program.py',590),
  ('init_declarator -> declarator EQUALS initializer','init_declarator',3,'p_init_declarator','ply_program.py',595),
  ('init_declarator -> declarator','init_declarator',1,'p_init_declarator','ply_program.py',596),
  ('storage_class_specifier -> TYPEDEF','storage_class_specifier',1,'p_storage_class_specifier','ply_program.py',601),
  ('storage_class_specifier -> EXTERN','storage_class_specifier',1,'p_storage_class_specifier','ply_program.py',602),
  ('storage_class_specifier -> STATIC','storage_class_specifier',1,'p_storage_class_specifier','ply_program.py',603),
  ('storage_class_specifier -> THREAD_LOCAL','storage_class_specifier',1,'p_storage_class_specifier','ply_program.py',604),
  ('storage_class_specifier -> AUTO','storage_class_specifier',1,'p_storage_class_specifier','ply_program.py',605),
  ('storage_class_specifier -> REGISTER','storage_class_specifier',1,'p_storage_class_specifier','ply_program.py',606),
  ('type_specifier -> VOID','type_specifier',1,'p_type_specifier','ply_program.py',611),
  ('type_specifier -> CHAR','type_specifier',1,'p_type_specifier','ply_program.py',612),
  ('type_specifier -> SHORT','type_specifier',1,'p_type_specifier','ply_program.py',613),
  ('type_specifier -> INT','type_specifier',1,'p_type_specifier','ply_program.py',614),
  ('type_specifier -> LONG','type_specifier',1,'p_type_specifier','ply_program.py',615),
  ('type_specifier -> FLOAT','type_specifier',1,'p_type_specifier','ply_program.py',616),
  ('type_specifier -> DOUBLE','type_specifier',1,'p_type_specifier','ply_program.py',617),
  ('type_specifier -> SIGNED','type_specifier',1,'p_type_specifier','ply_program.py',618),
  ('type_specifier -> UNSIGNED','type_specifier',1,'p_type_specifier','ply_program.py',619),
  ('type_specifier -> BOOL','type_specifier',1,'p_type_specifier','ply_program.py',620),
  ('type_specifier -> COMPLEX','type_specifier',1,'p_type_specifier','ply_program.py',621),
  ('type_specifier -> IMAGINARY','type_specifier',1,'p_type_specifier','ply_program.py',622),
  ('type_specifier -> atomic_type_specifier','type_specifier',1,'p_type_specifier','ply_program.py',623),
  ('type_specifier -> struct_or_union_specifier','type_specifier',1,'p_type_specifier','ply_program.py',624),
  ('type_specifier -> enum_specifier','type_specifier',1,'p_type_specifier','ply_program.py',625),
  ('struct_or_union_specifier -> struct_or_union LFPAREN struct_declaration_list RFPAREN','struct_or_union_specifier',4,'p_struct_or_union_specifier','ply_program.py',630),
  ('struct_or_union_specifier -> struct_or_union IDENTIFIER LFPAREN struct_declaration_list RFPAREN','struct_or_union_specifier',5,'p_struct_or_union_specifier','ply_program.py',631),
  ('struct_or_union_specifier -> struct_or_union IDENTIFIER','struct_or_union_specifier',2,'p_struct_or_union_specifier','ply_program.py',632),
  ('struct_or_union -> STRUCT','struct_or_union',1,'p_struct_or_union','ply_program.py',637),
  ('struct_or_union -> UNION','struct_or_union',1,'p_struct_or_union','ply_program.py',638),
  ('struct_declaration_list -> struct_declaration','struct_declaration_list',1,'p_struct_declaration_list','ply_program.py',643),
  ('struct_declaration_list -> struct_declaration_list struct_declaration','struct_declaration_list',2,'p_struct_declaration_list','ply_program.py',644),
  ('struct_declaration -> specifier_qualifier_list SCOLON','struct_declaration',2,'p_struct_declaration','ply_program.py',649),
  ('struct_declaration -> specifier_qualifier_list struct_declarator_list SCOLON','struct_declaration',3,'p_struct_declaration','ply_program.py',650),
  ('struct_declaration -> static_assert_declaration','struct_declaration',1,'p_struct_declaration','ply_program.py',651),
  ('specifier_qualifier_list -> type_specifier specifier_qualifier_list','specifier_qualifier_list',2,'p_specifier_qualifier_list','ply_program.py',656),
  ('specifier_qualifier_list -> type_specifier','specifier_qualifier_list',1,'p_specifier_qualifier_list','ply_program.py',657),
  ('specifier_qualifier_list -> type_qualifier specifier_qualifier_list','specifier_qualifier_list',2,'p_specifier_qualifier_list','ply_program.py',658),
  ('specifier_qualifier_list -> type_qualifier','specifier_qualifier_list',1,'p_specifier_qualifier_list','ply_program.py',659),
  ('struct_declarator_list -> struct_declarator','struct_declarator_list',1,'p_struct_declarator_list','ply_program.py',664),
  ('struct_declarator_list -> struct_declarator_list COMMA struct_declarator','struct_declarator_list',3,'p_struct_declarator_list','ply_program.py',665),
  ('struct_declarator -> COLON constant_expression','struct_declarator',2,'p_struct_declarator','ply_program.py',670),
  ('struct_declarator -> declarator COLON constant_expression','struct_declarator',3,'p_struct_declarator','ply_program.py',671),
  ('struct_declarator -> declarator','struct_declarator',1,'p_struct_declarator','ply_program.py',672),
  ('enum_specifier -> ENUM LFPAREN enumerator_list RFPAREN','enum_specifier',4,'p_enum_specifier','ply_program.py',677),
  ('enum_specifier -> ENUM LFPAREN enumerator_list COMMA RFPAREN','enum_specifier',5,'p_enum_specifier','ply_program.py',678),
  ('enum_specifier -> ENUM IDENTIFIER LFPAREN enumerator_list RFPAREN','enum_specifier',5,'p_enum_specifier','ply_program.py',679),
  ('enum_specifier -> ENUM IDENTIFIER LFPAREN enumerator_list COMMA RFPAREN','enum_specifier',6,'p_enum_specifier','ply_program.py',680),
  ('enum_specifier -> ENUM IDENTIFIER','enum_specifier',2,'p_enum_specifier','ply_program.py',681),
  ('enumerator_list -> enumerator','enumerator_list',1,'p_enumerator_list','ply_program.py',686),
  ('enumerator_list -> enumerator_list COMMA enumerator','enumerator_list',3,'p_enumerator_list','ply_program.py',687),
  ('enumerator -> enumeration_constant EQUALS constant_expression','enumerator',3,'p_enumerator','ply_program.py',692),
  ('enumerator -> enumeration_constant','enumerator',1,'p_enumerator','ply_program.py',693),
  ('atomic_type_specifier -> ATOMIC LPAREN type_name RPAREN','atomic_type_specifier',4,'p_atomic_type_specifier','ply_program.py',698),
  ('type_qualifier -> CONST','type_qualifier',1,'p_type_qualifier','ply_program.py',703),
  ('type_qualifier -> VOLATILE','type_qualifier',1,'p_type_qualifier','ply_program.py',704),
  ('type_qualifier -> ATOMIC','type_qualifier',1,'p_type_qualifier','ply_program.py',705),
  ('function_specifier -> NORETURN','function_specifier',1,'p_function_specifier','ply_program.py',710),
  ('alignment_specifier -> ALIGNAS LPAREN type_name RPAREN','alignment_specifier',4,'p_alignment_specifier','ply_program.py',715),
  ('alignment_specifier -> ALIGNAS LPAREN constant_expression RPAREN','alignment_specifier',4,'p_alignment_specifier','ply_program.py',716),
  ('declarator -> pointer direct_declarator','declarator',2,'p_declarator','ply_program.py',721),
  ('declarator -> direct_declarator','declarator',1,'p_declarator','ply_program.py',722),
  ('direct_declarator -> IDENTIFIER','direct_declarator',1,'p_direct_declarator','ply_program.py',727),
  ('direct_declarator -> LPAREN declarator RPAREN','direct_declarator',3,'p_direct_declarator','ply_program.py',728),
  ('direct_declarator -> direct_declarator RSQUARE LSQUARE','direct_declarator',3,'p_direct_declarator','ply_program.py',729),
  ('direct_declarator -> direct_declarator RSQUARE TIMES LSQUARE','direct_declarator',4,'p_direct_declarator','ply_program.py',730),
  ('direct_declarator -> direct_declarator RSQUARE STATIC type_qualifier_list assignment_expression LSQUARE','direct_declarator',6,'p_direct_declarator','ply_program.py',731),
  ('direct_declarator -> direct_declarator RSQUARE STATIC assignment_expression LSQUARE','direct_declarator',5,'p_direct_declarator','ply_program.py',732),
  ('direct_declarator -> direct_declarator RSQUARE type_qualifier_list TIMES LSQUARE','direct_declarator',5,'p_direct_declarator','ply_program.py',733),
  ('direct_declarator -> direct_declarator RSQUARE type_qualifier_list STATIC assignment_expression LSQUARE','direct_declarator',6,'p_direct_declarator','ply_program.py',734),
  ('direct_declarator -> direct_declarator RSQUARE type_qualifier_list assignment_expression LSQUARE','direct_declarator',5,'p_direct_declarator','ply_program.py',735),
  ('direct_declarator -> direct_declarator RSQUARE type_qualifier_list LSQUARE','direct_declarator',4,'p_direct_declarator','ply_program.py',736),
  ('direct_declarator -> direct_declarator RSQUARE assignment_expression LSQUARE','direct_declarator',4,'p_direct_declarator','ply_program.py',737),
  ('direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN','direct_declarator',4,'p_direct_declarator','ply_program.py',738),
  ('direct_declarator -> direct_declarator LPAREN RPAREN','direct_declarator',3,'p_direct_declarator','ply_program.py',739),
  ('direct_declarator -> direct_declarator LPAREN identifier_list RPAREN','direct_declarator',4,'p_direct_declarator','ply_program.py',740),
  ('pointer -> TIMES type_qualifier_list pointer','pointer',3,'p_pointer','ply_program.py',745),
  ('pointer -> TIMES type_qualifier_list','pointer',2,'p_pointer','ply_program.py',746),
  ('pointer -> TIMES pointer','pointer',2,'p_pointer','ply_program.py',747),
  ('pointer -> TIMES','pointer',1,'p_pointer','ply_program.py',748),
  ('type_qualifier_list -> type_qualifier','type_qualifier_list',1,'p_type_qualifier_list','ply_program.py',753),
  ('type_qualifier_list -> type_qualifier_list type_qualifier','type_qualifier_list',2,'p_type_qualifier_list','ply_program.py',754),
  ('parameter_type_list -> parameter_list COMMA ELLIPSIS','parameter_type_list',3,'p_parameter_type_list','ply_program.py',759),
  ('parameter_type_list -> parameter_list','parameter_type_list',1,'p_parameter_type_list','ply_program.py',760),
  ('parameter_list -> parameter_declaration','parameter_list',1,'p_parameter_list','ply_program.py',765),
  ('parameter_list -> parameter_list COMMA parameter_declaration','parameter_list',3,'p_parameter_list','ply_program.py',766),
  ('parameter_declaration -> declaration_specifiers declarator','parameter_declaration',2,'p_parameter_declaration','ply_program.py',771),
  ('parameter_declaration -> declaration_specifiers abstract_declarator','parameter_declaration',2,'p_parameter_declaration','ply_program.py',772),
  ('parameter_declaration -> declaration_specifiers','parameter_declaration',1,'p_parameter_declaration','ply_program.py',773),
  ('identifier_list -> IDENTIFIER','identifier_list',1,'p_identifier_list','ply_program.py',778),
  ('identifier_list -> identifier_list COMMA IDENTIFIER','identifier_list',3,'p_identifier_list','ply_program.py',779),
  ('type_name -> specifier_qualifier_list abstract_declarator','type_name',2,'p_type_name','ply_program.py',784),
  ('type_name -> specifier_qualifier_list','type_name',1,'p_type_name','ply_program.py',785),
  ('abstract_declarator -> pointer direct_abstract_declarator','abstract_declarator',2,'p_abstract_declarator','ply_program.py',790),
  ('abstract_declarator -> pointer','abstract_declarator',1,'p_abstract_declarator','ply_program.py',791),
  ('abstract_declarator -> direct_abstract_declarator','abstract_declarator',1,'p_abstract_declarator','ply_program.py',792),
  ('direct_abstract_declarator -> LPAREN abstract_declarator RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator','ply_program.py',797),
  ('direct_abstract_declarator -> RSQUARE LSQUARE','direct_abstract_declarator',2,'p_direct_abstract_declarator','ply_program.py',798),
  ('direct_abstract_declarator -> RSQUARE TIMES LSQUARE','direct_abstract_declarator',3,'p_direct_abstract_declarator','ply_program.py',799),
  ('direct_abstract_declarator -> RSQUARE STATIC type_qualifier_list assignment_expression LSQUARE','direct_abstract_declarator',5,'p_direct_abstract_declarator','ply_program.py',800),
  ('direct_abstract_declarator -> RSQUARE STATIC assignment_expression LSQUARE','direct_abstract_declarator',4,'p_direct_abstract_declarator','ply_program.py',801),
  ('direct_abstract_declarator -> RSQUARE type_qualifier_list STATIC assignment_expression LSQUARE','direct_abstract_declarator',5,'p_direct_abstract_declarator','ply_program.py',802),
  ('direct_abstract_declarator -> RSQUARE type_qualifier_list assignment_expression LSQUARE','direct_abstract_declarator',4,'p_direct_abstract_declarator','ply_program.py',803),
  ('direct_abstract_declarator -> RSQUARE type_qualifier_list LSQUARE','direct_abstract_declarator',3,'p_direct_abstract_declarator','ply_program.py',804),
  ('direct_abstract_declarator -> RSQUARE assignment_expression LSQUARE','direct_abstract_declarator',3,'p_direct_abstract_declarator','ply_program.py',805),
  ('direct_abstract_declarator -> direct_abstract_declarator RSQUARE LSQUARE','direct_abstract_declarator',3,'p_direct_abstract_declarator','ply_program.py',806),
  ('direct_abstract_declarator -> direct_abstract_declarator RSQUARE TIMES LSQUARE','direct_abstract_declarator',4,'p_direct_abstract_declarator','ply_program.py',807),
  ('direct_abstract_declarator -> direct_abstract_declarator RSQUARE STATIC type_qualifier_list assignment_expression LSQUARE','direct_abstract_declarator',6,'p_direct_abstract_declarator','ply_program.py',808),
  ('direct_abstract_declarator -> direct_abstract_declarator RSQUARE STATIC assignment_expression LSQUARE','direct_abstract_declarator',5,'p_direct_abstract_declarator','ply_program.py',809),
  ('direct_abstract_declarator -> direct_abstract_declarator RSQUARE type_qualifier_list assignment_expression LSQUARE','direct_abstract_declarator',5,'p_direct_abstract_declarator','ply_program.py',810),
  ('direct_abstract_declarator -> direct_abstract_declarator RSQUARE type_qualifier_list STATIC assignment_expression LSQUARE','direct_abstract_declarator',6,'p_direct_abstract_declarator','ply_program.py',811),
  ('direct_abstract_declarator -> direct_abstract_declarator RSQUARE type_qualifier_list LSQUARE','direct_abstract_declarator',4,'p_direct_abstract_declarator','ply_program.py',812),
  ('direct_abstract_declarator -> direct_abstract_declarator RSQUARE assignment_expression LSQUARE','direct_abstract_declarator',4,'p_direct_abstract_declarator','ply_program.py',813),
  ('direct_abstract_declarator -> LPAREN RPAREN','direct_abstract_declarator',2,'p_direct_abstract_declarator','ply_program.py',814),
  ('direct_abstract_declarator -> LPAREN parameter_type_list RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator','ply_program.py',815),
  ('direct_abstract_declarator -> direct_abstract_declarator LPAREN RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator','ply_program.py',816),
  ('direct_abstract_declarator -> direct_abstract_declarator LPAREN parameter_type_list RPAREN','direct_abstract_declarator',4,'p_direct_abstract_declarator','ply_program.py',817),
  ('initializer -> LFPAREN initializer_list RFPAREN','initializer',3,'p_initializer','ply_program.py',822),
  ('initializer -> LFPAREN initializer_list COMMA RFPAREN','initializer',4,'p_initializer','ply_program.py',823),
  ('initializer -> assignment_expression','initializer',1,'p_initializer','ply_program.py',824),
  ('initializer_list -> designation initializer','initializer_list',2,'p_initializer_list','ply_program.py',829),
  ('initializer_list -> initializer','initializer_list',1,'p_initializer_list','ply_program.py',830),
  ('initializer_list -> initializer_list COMMA designation initializer','initializer_list',4,'p_initializer_list','ply_program.py',831),
  ('initializer_list -> initializer_list COMMA initializer','initializer_list',3,'p_initializer_list','ply_program.py',832),
  ('designation -> designator_list EQUALS','designation',2,'p_designation','ply_program.py',837),
  ('designator_list -> designator','designator_list',1,'p_designator_list','ply_program.py',842),
  ('designator_list -> designator_list designator','designator_list',2,'p_designator_list','ply_program.py',843),
  ('designator -> RSQUARE constant_expression LSQUARE','designator',3,'p_designator','ply_program.py',848),
  ('designator -> DOT IDENTIFIER','designator',2,'p_designator','ply_program.py',849),
  ('static_assert_declaration -> STATIC_ASSERT LPAREN constant_expression COMMA STRING_LITERAL RPAREN SCOLON','static_assert_declaration',7,'p_static_assert_declaration','ply_program.py',854),
  ('statement -> labeled_statement','statement',1,'p_statement','ply_program.py',859),
  ('statement -> compound_statement','statement',1,'p_statement','ply_program.py',860),
  ('statement -> expression_statement','statement',1,'p_statement','ply_program.py',861),
  ('statement -> selection_statement','statement',1,'p_statement','ply_program.py',862),
  ('statement -> iteration_statement','statement',1,'p_statement','ply_program.py',863),
  ('statement -> jump_statement','statement',1,'p_statement','ply_program.py',864),
  ('labeled_statement -> IDENTIFIER COLON statement','labeled_statement',3,'p_labeled_statement','ply_program.py',869),
  ('labeled_statement -> CASE constant_expression COLON statement','labeled_statement',4,'p_labeled_statement','ply_program.py',870),
  ('labeled_statement -> DEFAULT COLON statement','labeled_statement',3,'p_labeled_statement','ply_program.py',871),
  ('compound_statement -> LFPAREN RFPAREN','compound_statement',2,'p_compound_statement','ply_program.py',876),
  ('compound_statement -> LFPAREN block_item_list RFPAREN','compound_statement',3,'p_compound_statement','ply_program.py',877),
  ('block_item_list -> block_item','block_item_list',1,'p_block_item_list','ply_program.py',882),
  ('block_item_list -> block_item_list block_item','block_item_list',2,'p_block_item_list','ply_program.py',883),
  ('block_item -> declaration','block_item',1,'p_block_item','ply_program.py',888),
  ('block_item -> statement','block_item',1,'p_block_item','ply_program.py',889),
  ('expression_statement -> SCOLON','expression_statement',1,'p_expression_statement','ply_program.py',894),
  ('expression_statement -> expression SCOLON','expression_statement',2,'p_expression_statement','ply_program.py',895),
  ('selection_statement -> IF LPAREN expression RPAREN statement ELSE statement','selection_statement',7,'p_selection_statement','ply_program.py',900),
  ('selection_statement -> IF LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement','ply_program.py',901),
  ('selection_statement -> SWITCH LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement','ply_program.py',902),
  ('iteration_statement -> WHILE LPAREN expression RPAREN statement','iteration_statement',5,'p_iteration_statement','ply_program.py',907),
  ('iteration_statement -> DO statement WHILE LPAREN expression RPAREN SCOLON','iteration_statement',7,'p_iteration_statement','ply_program.py',908),
  ('iteration_statement -> FOR LPAREN expression_statement expression_statement RPAREN statement','iteration_statement',6,'p_iteration_statement','ply_program.py',909),
  ('iteration_statement -> FOR LPAREN expression_statement expression_statement expression RPAREN statement','iteration_statement',7,'p_iteration_statement','ply_program.py',910),
  ('iteration_statement -> FOR LPAREN declaration expression_statement RPAREN statement','iteration_statement',6,'p_iteration_statement','ply_program.py',911),
  ('iteration_statement -> FOR LPAREN declaration expression_statement expression RPAREN statement','iteration_statement',7,'p_iteration_statement','ply_program.py',912),
  ('jump_statement -> GOTO IDENTIFIER SCOLON','jump_statement',3,'p_jump_statement','ply_program.py',917),
  ('jump_statement -> CONTINUE SCOLON','jump_statement',2,'p_jump_statement','ply_program.py',918),
  ('jump_statement -> BREAK SCOLON','jump_statement',2,'p_jump_statement','ply_program.py',919),
  ('jump_statement -> RETURN SCOLON','jump_statement',2,'p_jump_statement','ply_program.py',920),
  ('jump_statement -> RETURN expression SCOLON','jump_statement',3,'p_jump_statement','ply_program.py',921),
  ('empty -> <empty>','empty',0,'p_empty','ply_program.py',932),
>>>>>>> 9ccdc3f3c3e14c454244aee114e8b892152bcc91
]
