n+ class Node : <br/>n+ &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdef __init__ self , data )  <span style="color:red">.</span> : <br/>n+ &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspself . data  <span style="color:red">=</span> data <br/>n+ &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspself . left = None <br/>n+ &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspself . right  <span style="color:red">=</span> None <br/>n+ def size ( node )  <span style="color:red">:</span> <br/>n+ &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif node is None  <span style="color:red">-</span> : <br/>n+ &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspreturn 0 <br/>n+ &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspelse : <br/>n+ &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspreturn ( size ( node . left ) + 1 + size ( node . right ) ) <br/>n+ root = Node  <span style="color:red">(</span> 1 ) <br/>n+ root . left = Node ( 2 ) <br/>n+ root . right Node ( 3  <span style="color:red">,</span>  <span style="color:red">;</span> <br/>n+ root . left . left  <span style="color:red">=</span>  <span style="color:red">=</span> Node ( 4 ) <br/>n+ root left  <span style="color:red">%</span> . right = Node ( 5  <span style="color:red">%</span> ) <br/>n+ print "Size of the tree is %d"  <span style="color:red">|</span> % ( size ( root ) ) <br/>n+ <br/>n+ 