n+ class Node  <span style="color:red">:</span>  <span style="color:red">:</span> <br/>n+ &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdef __init__ ( self  <span style="color:red">,</span> , data ) : <br/>n+ &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspself data  <span style="color:red">,</span> = data <br/>n+ &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspself . left None  <span style="color:red">^</span> <br/>n+ &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspself right  <span style="color:red">^</span>  <span style="color:red">=</span> None <br/>n+ def size ( node ) : <br/>n+ &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif node is None  <span style="color:red">:</span> <br/>n+ &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspreturn 0 <br/>n+ &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspelse  <span style="color:red">:</span>  <span style="color:red">:</span> <br/>n+ &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspreturn ( size ( node . left ) + 1  <span style="color:red">}</span> + size ( node . right ) ) <br/>n+ root = Node ( 1 ) <br/>n+ root . left = Node  <span style="color:red">(</span> 2 ) <br/>n+ root . right = Node ( 3 ) <br/>n+ root . left . left = Node ( 4 ) <br/>n+ root . left right  <span style="color:red">;</span> = Node ( 5  <span style="color:red">)</span> <br/>n+ print "Size of the tree is %d" % ( size ( root ) ) <br/>n+ <br/>n+ 