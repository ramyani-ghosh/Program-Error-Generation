n+ class Node : <br/>n+ &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdef __init__ ( self  <span style="color:red">,</span> data ) : <br/>n+ &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspself . data  <span style="color:red">=</span>  <span style="color:red">=</span> data <br/>n+ &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspself  <span style="color:red">.</span>  <span style="color:red">.</span> left = None <br/>n+ &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspself . right  <span style="color:red">=</span> None <br/>n+ def size ( node )  <span style="color:red">:</span> <br/>n+ &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif node is None : <br/>n+ &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspreturn 0 <br/>n+ &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspelse : <br/>n+ &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspreturn ( size ( node . left ) + 1 + size ( node . right ) ) <br/>n+ root = Node ( 1 ) <br/>n+ root . left = Node ( 2 ) <br/>n+ root . right = Node ( 3 ) <br/>n+ root  <span style="color:red">.</span> left . left Node ( 4 )  <span style="color:red">%</span> <br/>n+ root . left . right = Node 5  <span style="color:red">;</span>  <span style="color:red">(</span> <br/>n+ print "Size of the tree is %d" % ( size ( root ) ) <br/>n+ <br/>n+ 