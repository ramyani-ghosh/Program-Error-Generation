n+ class Node : <br/>n+ &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdef __init__ self , data )  <span style="color:red">.</span> : <br/>n+ &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspself data  <span style="color:red">;</span> = data <br/>n+ &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspself . left = None <br/>n+ &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspself . right = None <br/>n+ def size ( node ) : <br/>n+ &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif node is None : <br/>n+ &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspreturn 0 <br/>n+ &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspelse : <br/>n+ &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspreturn ( size ( node . left )  <span style="color:red">+</span> 1 + size ( node . right  <span style="color:red">)</span>  <span style="color:red">)</span> <br/>n+ root = Node ( 1  <span style="color:red">,</span> ) <br/>n+ root . left = Node ( 2 ) <br/>n+ root . right Node ( 3 )  <span style="color:red">:</span> <br/>n+ root  <span style="color:red">.</span> left . left = Node  <span style="color:red">//</span> ( 4  <span style="color:red">)</span>  <span style="color:red">)</span> <br/>n+ root . left . right = Node 5 )  <span style="color:red">//</span> <br/>n+ print "Size of the tree is %d" % ( size ( root )  <span style="color:red">)</span>  <span style="color:red">)</span> <br/>n+ <br/>n+ 