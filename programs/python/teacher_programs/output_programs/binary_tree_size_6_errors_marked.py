n+ class Node  <span style="color:red">:</span> <br/>n+ &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdef __init__ ( self , data ) <br/>n+ &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspself . data = data <br/>n+ &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspself  <span style="color:red">.</span> left = None <br/>n+ &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspself . right = None <br/>n+ def size ( node ) : <br/>n+ &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif node is None : <br/>n+ &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspreturn 0 <br/>n+ &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspelse  <span style="color:red">:</span> <br/>n+ &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspreturn ( size  <span style="color:red">@</span> ( node left  <span style="color:red">:</span> )  <span style="color:red">+</span>  <span style="color:red">+</span> 1 + size ( node . right ) ) <br/>n+ root  <span style="color:red">=</span> Node ( 1 ) <br/>n+ root left  <span style="color:red">;</span> = Node ( 2  <span style="color:red">)</span>  <span style="color:red">)</span> <br/>n+ root . right = Node ( 3 ) <br/>n+ root . left left  <span style="color:red">`</span> = Node ( 4 ) <br/>n+ root . left . right = Node ( 5 ) <br/>n+ print "Size of the tree is %d" % ( size ( root ) ) <br/>n+  <span style="color:red">~</span> <br/>n+ 