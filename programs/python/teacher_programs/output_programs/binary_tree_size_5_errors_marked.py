n+ class Node <br/>n+ &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdef __init__ ( self data  <span style="color:red">%</span> ) : <br/>n+ &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspself . data = data <br/>n+ &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspself  <span style="color:red">.</span> left = None <br/>n+ &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspself . right None  <span style="color:red">:</span> <br/>n+ def size ( node ) : <br/>n+ &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif node is None  <span style="color:red">:</span> <br/>n+ &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspreturn 0 <br/>n+ &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspelse : <br/>n+ &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspreturn ( size ( node  <span style="color:red">{</span> . left ) + 1 + size  <span style="color:red">(</span> node . right ) ) <br/>n+ root = Node ( 1 ) <br/>n+ root . left = Node ( 2 ) <br/>n+ root . right = Node ( 3  <span style="color:red">)</span>  <span style="color:red">)</span> <br/>n+ root . left . left = Node ( 4  <span style="color:red">^</span> <br/>n+ root . left . right = Node ( 5 ) <br/>n+ print "Size of the tree is %d" %  <span style="color:red">(</span> size ( root ) ) <br/>n+  <span style="color:red">%</span> <br/>n+ 