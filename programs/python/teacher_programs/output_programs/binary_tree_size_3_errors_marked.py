n+ class Node : <br/>n+ &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspdef __init__ ( self , data ) : <br/>n+ &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspself . data data  <span style="color:red">`</span> <br/>n+ &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspself . left = None <br/>n+ &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspself . right  <span style="color:red">=</span> None <br/>n+ def size ( node ) : <br/>n+ &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspif node is None <br/>n+ &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspreturn 0 <br/>n+ &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspelse : <br/>n+ &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspreturn ( size  <span style="color:red">(</span> node  <span style="color:red">^</span> . left ) + 1 + size ( node . right  <span style="color:red">)</span>  <span style="color:red">)</span> ) <br/>n+ root = Node ( 1  <span style="color:red">)</span> <br/>n+ root . left Node  <span style="color:red">(</span> 2 )  <span style="color:red">^</span> <br/>n+ root . right = Node ( 3 ) <br/>n+ root . left . left = Node 4 )  <span style="color:red">@</span> <br/>n+ root  <span style="color:red">:</span> . left . right = Node ( 5 ) <br/>n+ print "Size of the tree is %d" % ( size ( root )  <span style="color:red">)</span>  <span style="color:red">)</span> <br/>n+  <span style="color:red">.</span> <br/>n+ 